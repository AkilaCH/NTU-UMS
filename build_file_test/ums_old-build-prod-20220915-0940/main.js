(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "../$$_lazy_route_resource lazy recursive":
/*!*******************************************************!*\
  !*** ../$$_lazy_route_resource lazy namespace object ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "../$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "../node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!***************************************************!*\
  !*** ../node_modules/moment/locale sync ^\.\/.*$ ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "../node_modules/moment/locale/af.js",
	"./af.js": "../node_modules/moment/locale/af.js",
	"./ar": "../node_modules/moment/locale/ar.js",
	"./ar-dz": "../node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "../node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "../node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "../node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "../node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "../node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "../node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "../node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "../node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "../node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "../node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "../node_modules/moment/locale/ar-tn.js",
	"./ar.js": "../node_modules/moment/locale/ar.js",
	"./az": "../node_modules/moment/locale/az.js",
	"./az.js": "../node_modules/moment/locale/az.js",
	"./be": "../node_modules/moment/locale/be.js",
	"./be.js": "../node_modules/moment/locale/be.js",
	"./bg": "../node_modules/moment/locale/bg.js",
	"./bg.js": "../node_modules/moment/locale/bg.js",
	"./bm": "../node_modules/moment/locale/bm.js",
	"./bm.js": "../node_modules/moment/locale/bm.js",
	"./bn": "../node_modules/moment/locale/bn.js",
	"./bn.js": "../node_modules/moment/locale/bn.js",
	"./bo": "../node_modules/moment/locale/bo.js",
	"./bo.js": "../node_modules/moment/locale/bo.js",
	"./br": "../node_modules/moment/locale/br.js",
	"./br.js": "../node_modules/moment/locale/br.js",
	"./bs": "../node_modules/moment/locale/bs.js",
	"./bs.js": "../node_modules/moment/locale/bs.js",
	"./ca": "../node_modules/moment/locale/ca.js",
	"./ca.js": "../node_modules/moment/locale/ca.js",
	"./cs": "../node_modules/moment/locale/cs.js",
	"./cs.js": "../node_modules/moment/locale/cs.js",
	"./cv": "../node_modules/moment/locale/cv.js",
	"./cv.js": "../node_modules/moment/locale/cv.js",
	"./cy": "../node_modules/moment/locale/cy.js",
	"./cy.js": "../node_modules/moment/locale/cy.js",
	"./da": "../node_modules/moment/locale/da.js",
	"./da.js": "../node_modules/moment/locale/da.js",
	"./de": "../node_modules/moment/locale/de.js",
	"./de-at": "../node_modules/moment/locale/de-at.js",
	"./de-at.js": "../node_modules/moment/locale/de-at.js",
	"./de-ch": "../node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "../node_modules/moment/locale/de-ch.js",
	"./de.js": "../node_modules/moment/locale/de.js",
	"./dv": "../node_modules/moment/locale/dv.js",
	"./dv.js": "../node_modules/moment/locale/dv.js",
	"./el": "../node_modules/moment/locale/el.js",
	"./el.js": "../node_modules/moment/locale/el.js",
	"./en-au": "../node_modules/moment/locale/en-au.js",
	"./en-au.js": "../node_modules/moment/locale/en-au.js",
	"./en-ca": "../node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "../node_modules/moment/locale/en-ca.js",
	"./en-gb": "../node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "../node_modules/moment/locale/en-gb.js",
	"./en-ie": "../node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "../node_modules/moment/locale/en-ie.js",
	"./en-il": "../node_modules/moment/locale/en-il.js",
	"./en-il.js": "../node_modules/moment/locale/en-il.js",
	"./en-in": "../node_modules/moment/locale/en-in.js",
	"./en-in.js": "../node_modules/moment/locale/en-in.js",
	"./en-nz": "../node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "../node_modules/moment/locale/en-nz.js",
	"./en-sg": "../node_modules/moment/locale/en-sg.js",
	"./en-sg.js": "../node_modules/moment/locale/en-sg.js",
	"./eo": "../node_modules/moment/locale/eo.js",
	"./eo.js": "../node_modules/moment/locale/eo.js",
	"./es": "../node_modules/moment/locale/es.js",
	"./es-do": "../node_modules/moment/locale/es-do.js",
	"./es-do.js": "../node_modules/moment/locale/es-do.js",
	"./es-us": "../node_modules/moment/locale/es-us.js",
	"./es-us.js": "../node_modules/moment/locale/es-us.js",
	"./es.js": "../node_modules/moment/locale/es.js",
	"./et": "../node_modules/moment/locale/et.js",
	"./et.js": "../node_modules/moment/locale/et.js",
	"./eu": "../node_modules/moment/locale/eu.js",
	"./eu.js": "../node_modules/moment/locale/eu.js",
	"./fa": "../node_modules/moment/locale/fa.js",
	"./fa.js": "../node_modules/moment/locale/fa.js",
	"./fi": "../node_modules/moment/locale/fi.js",
	"./fi.js": "../node_modules/moment/locale/fi.js",
	"./fil": "../node_modules/moment/locale/fil.js",
	"./fil.js": "../node_modules/moment/locale/fil.js",
	"./fo": "../node_modules/moment/locale/fo.js",
	"./fo.js": "../node_modules/moment/locale/fo.js",
	"./fr": "../node_modules/moment/locale/fr.js",
	"./fr-ca": "../node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "../node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "../node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "../node_modules/moment/locale/fr-ch.js",
	"./fr.js": "../node_modules/moment/locale/fr.js",
	"./fy": "../node_modules/moment/locale/fy.js",
	"./fy.js": "../node_modules/moment/locale/fy.js",
	"./ga": "../node_modules/moment/locale/ga.js",
	"./ga.js": "../node_modules/moment/locale/ga.js",
	"./gd": "../node_modules/moment/locale/gd.js",
	"./gd.js": "../node_modules/moment/locale/gd.js",
	"./gl": "../node_modules/moment/locale/gl.js",
	"./gl.js": "../node_modules/moment/locale/gl.js",
	"./gom-deva": "../node_modules/moment/locale/gom-deva.js",
	"./gom-deva.js": "../node_modules/moment/locale/gom-deva.js",
	"./gom-latn": "../node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "../node_modules/moment/locale/gom-latn.js",
	"./gu": "../node_modules/moment/locale/gu.js",
	"./gu.js": "../node_modules/moment/locale/gu.js",
	"./he": "../node_modules/moment/locale/he.js",
	"./he.js": "../node_modules/moment/locale/he.js",
	"./hi": "../node_modules/moment/locale/hi.js",
	"./hi.js": "../node_modules/moment/locale/hi.js",
	"./hr": "../node_modules/moment/locale/hr.js",
	"./hr.js": "../node_modules/moment/locale/hr.js",
	"./hu": "../node_modules/moment/locale/hu.js",
	"./hu.js": "../node_modules/moment/locale/hu.js",
	"./hy-am": "../node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "../node_modules/moment/locale/hy-am.js",
	"./id": "../node_modules/moment/locale/id.js",
	"./id.js": "../node_modules/moment/locale/id.js",
	"./is": "../node_modules/moment/locale/is.js",
	"./is.js": "../node_modules/moment/locale/is.js",
	"./it": "../node_modules/moment/locale/it.js",
	"./it-ch": "../node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "../node_modules/moment/locale/it-ch.js",
	"./it.js": "../node_modules/moment/locale/it.js",
	"./ja": "../node_modules/moment/locale/ja.js",
	"./ja.js": "../node_modules/moment/locale/ja.js",
	"./jv": "../node_modules/moment/locale/jv.js",
	"./jv.js": "../node_modules/moment/locale/jv.js",
	"./ka": "../node_modules/moment/locale/ka.js",
	"./ka.js": "../node_modules/moment/locale/ka.js",
	"./kk": "../node_modules/moment/locale/kk.js",
	"./kk.js": "../node_modules/moment/locale/kk.js",
	"./km": "../node_modules/moment/locale/km.js",
	"./km.js": "../node_modules/moment/locale/km.js",
	"./kn": "../node_modules/moment/locale/kn.js",
	"./kn.js": "../node_modules/moment/locale/kn.js",
	"./ko": "../node_modules/moment/locale/ko.js",
	"./ko.js": "../node_modules/moment/locale/ko.js",
	"./ku": "../node_modules/moment/locale/ku.js",
	"./ku.js": "../node_modules/moment/locale/ku.js",
	"./ky": "../node_modules/moment/locale/ky.js",
	"./ky.js": "../node_modules/moment/locale/ky.js",
	"./lb": "../node_modules/moment/locale/lb.js",
	"./lb.js": "../node_modules/moment/locale/lb.js",
	"./lo": "../node_modules/moment/locale/lo.js",
	"./lo.js": "../node_modules/moment/locale/lo.js",
	"./lt": "../node_modules/moment/locale/lt.js",
	"./lt.js": "../node_modules/moment/locale/lt.js",
	"./lv": "../node_modules/moment/locale/lv.js",
	"./lv.js": "../node_modules/moment/locale/lv.js",
	"./me": "../node_modules/moment/locale/me.js",
	"./me.js": "../node_modules/moment/locale/me.js",
	"./mi": "../node_modules/moment/locale/mi.js",
	"./mi.js": "../node_modules/moment/locale/mi.js",
	"./mk": "../node_modules/moment/locale/mk.js",
	"./mk.js": "../node_modules/moment/locale/mk.js",
	"./ml": "../node_modules/moment/locale/ml.js",
	"./ml.js": "../node_modules/moment/locale/ml.js",
	"./mn": "../node_modules/moment/locale/mn.js",
	"./mn.js": "../node_modules/moment/locale/mn.js",
	"./mr": "../node_modules/moment/locale/mr.js",
	"./mr.js": "../node_modules/moment/locale/mr.js",
	"./ms": "../node_modules/moment/locale/ms.js",
	"./ms-my": "../node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "../node_modules/moment/locale/ms-my.js",
	"./ms.js": "../node_modules/moment/locale/ms.js",
	"./mt": "../node_modules/moment/locale/mt.js",
	"./mt.js": "../node_modules/moment/locale/mt.js",
	"./my": "../node_modules/moment/locale/my.js",
	"./my.js": "../node_modules/moment/locale/my.js",
	"./nb": "../node_modules/moment/locale/nb.js",
	"./nb.js": "../node_modules/moment/locale/nb.js",
	"./ne": "../node_modules/moment/locale/ne.js",
	"./ne.js": "../node_modules/moment/locale/ne.js",
	"./nl": "../node_modules/moment/locale/nl.js",
	"./nl-be": "../node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "../node_modules/moment/locale/nl-be.js",
	"./nl.js": "../node_modules/moment/locale/nl.js",
	"./nn": "../node_modules/moment/locale/nn.js",
	"./nn.js": "../node_modules/moment/locale/nn.js",
	"./oc-lnc": "../node_modules/moment/locale/oc-lnc.js",
	"./oc-lnc.js": "../node_modules/moment/locale/oc-lnc.js",
	"./pa-in": "../node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "../node_modules/moment/locale/pa-in.js",
	"./pl": "../node_modules/moment/locale/pl.js",
	"./pl.js": "../node_modules/moment/locale/pl.js",
	"./pt": "../node_modules/moment/locale/pt.js",
	"./pt-br": "../node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "../node_modules/moment/locale/pt-br.js",
	"./pt.js": "../node_modules/moment/locale/pt.js",
	"./ro": "../node_modules/moment/locale/ro.js",
	"./ro.js": "../node_modules/moment/locale/ro.js",
	"./ru": "../node_modules/moment/locale/ru.js",
	"./ru.js": "../node_modules/moment/locale/ru.js",
	"./sd": "../node_modules/moment/locale/sd.js",
	"./sd.js": "../node_modules/moment/locale/sd.js",
	"./se": "../node_modules/moment/locale/se.js",
	"./se.js": "../node_modules/moment/locale/se.js",
	"./si": "../node_modules/moment/locale/si.js",
	"./si.js": "../node_modules/moment/locale/si.js",
	"./sk": "../node_modules/moment/locale/sk.js",
	"./sk.js": "../node_modules/moment/locale/sk.js",
	"./sl": "../node_modules/moment/locale/sl.js",
	"./sl.js": "../node_modules/moment/locale/sl.js",
	"./sq": "../node_modules/moment/locale/sq.js",
	"./sq.js": "../node_modules/moment/locale/sq.js",
	"./sr": "../node_modules/moment/locale/sr.js",
	"./sr-cyrl": "../node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "../node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "../node_modules/moment/locale/sr.js",
	"./ss": "../node_modules/moment/locale/ss.js",
	"./ss.js": "../node_modules/moment/locale/ss.js",
	"./sv": "../node_modules/moment/locale/sv.js",
	"./sv.js": "../node_modules/moment/locale/sv.js",
	"./sw": "../node_modules/moment/locale/sw.js",
	"./sw.js": "../node_modules/moment/locale/sw.js",
	"./ta": "../node_modules/moment/locale/ta.js",
	"./ta.js": "../node_modules/moment/locale/ta.js",
	"./te": "../node_modules/moment/locale/te.js",
	"./te.js": "../node_modules/moment/locale/te.js",
	"./tet": "../node_modules/moment/locale/tet.js",
	"./tet.js": "../node_modules/moment/locale/tet.js",
	"./tg": "../node_modules/moment/locale/tg.js",
	"./tg.js": "../node_modules/moment/locale/tg.js",
	"./th": "../node_modules/moment/locale/th.js",
	"./th.js": "../node_modules/moment/locale/th.js",
	"./tk": "../node_modules/moment/locale/tk.js",
	"./tk.js": "../node_modules/moment/locale/tk.js",
	"./tl-ph": "../node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "../node_modules/moment/locale/tl-ph.js",
	"./tlh": "../node_modules/moment/locale/tlh.js",
	"./tlh.js": "../node_modules/moment/locale/tlh.js",
	"./tr": "../node_modules/moment/locale/tr.js",
	"./tr.js": "../node_modules/moment/locale/tr.js",
	"./tzl": "../node_modules/moment/locale/tzl.js",
	"./tzl.js": "../node_modules/moment/locale/tzl.js",
	"./tzm": "../node_modules/moment/locale/tzm.js",
	"./tzm-latn": "../node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "../node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "../node_modules/moment/locale/tzm.js",
	"./ug-cn": "../node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "../node_modules/moment/locale/ug-cn.js",
	"./uk": "../node_modules/moment/locale/uk.js",
	"./uk.js": "../node_modules/moment/locale/uk.js",
	"./ur": "../node_modules/moment/locale/ur.js",
	"./ur.js": "../node_modules/moment/locale/ur.js",
	"./uz": "../node_modules/moment/locale/uz.js",
	"./uz-latn": "../node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "../node_modules/moment/locale/uz-latn.js",
	"./uz.js": "../node_modules/moment/locale/uz.js",
	"./vi": "../node_modules/moment/locale/vi.js",
	"./vi.js": "../node_modules/moment/locale/vi.js",
	"./x-pseudo": "../node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "../node_modules/moment/locale/x-pseudo.js",
	"./yo": "../node_modules/moment/locale/yo.js",
	"./yo.js": "../node_modules/moment/locale/yo.js",
	"./zh-cn": "../node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "../node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "../node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "../node_modules/moment/locale/zh-hk.js",
	"./zh-mo": "../node_modules/moment/locale/zh-mo.js",
	"./zh-mo.js": "../node_modules/moment/locale/zh-mo.js",
	"./zh-tw": "../node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "../node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "../node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/app.component.html":
/*!***********************************************************!*\
  !*** ../node_modules/raw-loader!./app/app.component.html ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper d-flex w-100\"  style=\"position: fixed; background-color: #1e1f21\">\r\n  <nav *ngIf=\"!detectmob()\" id=\"side-bar\" [ngClass]=\"[isSideMenuActive ? 'active' : '']\">\r\n    <app-side-bar></app-side-bar>\r\n  </nav>\r\n  <div class=\"content w-100\">\r\n    <header *ngIf=\"!isUnderMaintenence\">\r\n      <app-header></app-header>\r\n    </header>\r\n    <main class=\"p-2 fill-content\">\r\n      <router-outlet></router-outlet>\r\n      <notifier-container>\r\n        <ng-template #normalNotification let-notificationData=\"notification\">\r\n          <div type=\"notificationData.type\">\r\n            <div class=\"notification-card\">\r\n              <div class=\"notification-icon-container\">\r\n                  <img width=\"50px\" src=\"../assets/img/danger.png\" alt=\"notification-icon\">\r\n              </div>\r\n              <div class=\"notification-text\">\r\n                <div class=\"notification-message\">\r\n                  {{ notificationData.message }}\r\n                </div>\r\n                <div class=\"footer-texts\" style=\"justify-content: flex-end;\">\r\n                  <div class=\"moment-text\">{{ time }}</div>\r\n                </div>\r\n              </div>\r\n              <button (click)=\"closeNotification()\" class=\"notifier__notification-button close-button\" title=\"dismiss\" type=\"button\">\r\n                <svg class=\"notifier__notification-button-icon\" height=\"20\" viewBox=\"0 0 24 24\" width=\"20\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n        <ng-template #ldNotification let-notificationData=\"notification\">\r\n          <div type=\"notificationData.type\">\r\n            <div class=\"notification-card\">\r\n              <div class=\"notification-icon-container\">\r\n                  <img width=\"77px\" src=\"../assets/img/leakDetection.png\" alt=\"notification-icon\">\r\n              </div>\r\n              <div class=\"notification-text\">\r\n                <div class=\"notification-message\">\r\n                  {{ notificationData.message }}\r\n                </div>\r\n                <div class=\"footer-texts\" style=\"justify-content: space-between;\">\r\n                  <div class=\"more-text\" (click)=\"onClickMore()\">More...</div>\r\n                  <div class=\"moment-text\">{{ time }}</div>\r\n                </div>\r\n              </div>\r\n              <button (click)=\"closeNotification()\" class=\"notifier__notification-button close-button\" title=\"dismiss\" type=\"button\">\r\n                <svg class=\"notifier__notification-button-icon\" height=\"20\" viewBox=\"0 0 24 24\" width=\"20\">\r\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </notifier-container>\r\n    </main>\r\n  </div>\r\n</div>\r\n<nav *ngIf=\"detectmob()\" id=\"side-bar\" class=\"overlay-side-bar\" [ngClass]=\"[isSideMenuActive ? 'active' : '']\">\r\n  <app-side-bar></app-side-bar>\r\n</nav>\r\n<div [ngClass]=\"[isSideMenuActive && detectmob() ? 'show-overlay' : 'hide-overlay']\" (click)=\"overlayClicked()\"></div>\r\n\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/alerts-dashboard/alerts-dashboard.component.html":
/*!****************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/alerts-dashboard/alerts-dashboard.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\">\r\n  <div class=\"card-header p-0\">\r\n    <span class=\"d-none d-xl-block  pl-3 pt-3 pb-3 font-secondary\">\r\n      <span>Alert Dashboard</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(3)\"\r\n        [ngClass]=\"{'active': tabIndex == 3}\">Chiller System</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(4)\"\r\n        [ngClass]=\"{'active': tabIndex == 4}\">Water MR</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(2)\"\r\n        [ngClass]=\"{'active': tabIndex == 2}\">Water</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n        [ngClass]=\"{'active': tabIndex == 1}\">Electrical - HT</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n        [ngClass]=\"{'active': tabIndex == 0}\">Electrical - LT</span>\r\n    </span>\r\n    <div class=\"d-xl-none pl-3 pt-3 pb-3 font-secondary\">\r\n      <span>Alert Dashboard</span>\r\n      <select class=\"form-control-sm styled-select-box float-right mr-3 mb-3\"\r\n        (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\">\r\n        <option value=\"0\">Electrical LT</option>\r\n        <option value=\"1\">Electrical HT</option>\r\n        <option value=\"2\">Water</option>\r\n        <option value=\"4\">Water MR</option>\r\n        <option value=\"3\">Chiller System</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Electrical LT Tab -->\r\n  <div *ngIf=\"tabIndex==0\" class=\"card-body card-scroll\">\r\n    <div class=\"tab-button-content mb-3\">\r\n      <div class=\"btn-group button-group-custom\" role=\"group\">\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 0}\" (click)=\"setPage(0)\">Summary</button>\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 1}\" (click)=\"setPage(1)\">Configuration</button>\r\n      </div>\r\n    </div>\r\n    <section *ngIf=\"pageIndex == 0\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <div class=\"pl-3 pr-3\">\r\n            <app-input-field label=\"Date Range\">\r\n              <date-range-picker [maxDate]=\"today\" position=\"bottom-left\" [(dateRange)]=\"ltDateRange\" (dateRangeChange)=\"getLTSummaryData()\"></date-range-picker>\r\n            </app-input-field>\r\n          </div>\r\n          <app-alert-summary-filter [(filterFields)]=\"summaryFilterdFields\" [dataSource]=\"elecLtSummaryDataSource\" (onFilter)=\"onDataFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" type='lt'>\r\n          </app-alert-summary-filter>\r\n        </div>\r\n      </app-form-container>\r\n      <app-data-table [isLoading]=\"isSummaryLoading\" [clickable]=\"true\" (onActionClicked)=\"tableActionOnClicked($event)\" (onRowClicked)=\"onRowClicked($event)\" class=\"m-2\" [rows]=\"summaryFilteredData\" [columns]=\"alertsDataSource.ltColumns\"></app-data-table>\r\n      <div *ngIf=\"!isSummaryLoading\" class=\"d-flex justify-content-end mt-3  mb-3\">\r\n        <button type=\"button\"\r\n          (click)=\"exportAlerts(serviceTypes.ELECTRICAL)\"\r\n          class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">Export</button>\r\n        <button type=\"button\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\"\r\n          (click)=\"acknowledgeAll()\">Acknowledge All</button>\r\n      </div>\r\n    </section>\r\n    <section *ngIf=\"pageIndex == 1\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <app-alert-summary-filter [dataSource]=\"elecLtConfigurationDataSource\" tabType=\"configs\" (onFilter)=\"onConfigurationFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" type='lt'></app-alert-summary-filter>\r\n        </div>\r\n      </app-form-container>\r\n      <app-alert-configuration-table [isLoading]=\"isConfigurationLoading\" (selectionChange)=\"configSelectionChange($event)\" (changeActive)=\"changeActive($event)\" [dataSource]=\"ltConfigurationFilteredData\"></app-alert-configuration-table>\r\n    </section>\r\n  </div>\r\n  <!-- End of Electrical LT Tab -->\r\n\r\n  <!-- Electrical HT Tab -->\r\n  <div *ngIf=\"tabIndex==1\" class=\"card-body card-scroll\">\r\n    <div class=\"tab-button-content mb-3\">\r\n      <div class=\"btn-group button-group-custom\" role=\"group\">\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 0}\" (click)=\"setPage(0)\">Summary</button>\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 1}\"\r\n          (click)=\"setPage(1)\">Configuration</button>\r\n      </div>\r\n    </div>\r\n    <section *ngIf=\"pageIndex == 0\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <div class=\"pl-3 pr-3\">\r\n            <app-input-field label=\"Date Range\">\r\n              <date-range-picker [maxDate]=\"today\" position=\"bottom-left\" [(dateRange)]=\"htDateRange\" (dateRangeChange)=\"getHTSummaryData()\"></date-range-picker>\r\n            </app-input-field>\r\n          </div>\r\n          <app-alert-summary-filter [(filterFields)]=\"summaryFilterdFields\" [dataSource]=\"elecHtSummaryDataSource\" (onFilter)=\"onDataFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" type='ht'>\r\n          </app-alert-summary-filter>\r\n        </div>\r\n      </app-form-container>\r\n      <app-data-table [isLoading]=\"isSummaryLoading\" [clickable]=\"true\" (onActionClicked)=\"tableActionOnClicked($event)\" (onRowClicked)=\"onRowClicked($event)\" class=\"m-2\" [rows]=\"summaryFilteredData\" [columns]=\"alertsDataSource.htColumns\"></app-data-table>\r\n      <div *ngIf=\"!isSummaryLoading\" class=\"d-flex justify-content-end mt-3  mb-3\">\r\n        <button type=\"button\"\r\n          (click)=\"exportAlerts(serviceTypes.HT_ELECTRICAL)\" \r\n          class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">Export</button>\r\n        <button type=\"button\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\"\r\n          (click)=\"acknowledgeAll()\">Acknowledge All</button>\r\n      </div>\r\n    </section>\r\n    <section *ngIf=\"pageIndex == 1\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <app-alert-summary-filter [(filterFields)]=\"summaryFilterdFields\" [dataSource]=\"elecHtConfigurationDataSource\" tabType=\"configs\" (onFilter)=\"onConfigurationFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" type='ht'>\r\n          </app-alert-summary-filter>\r\n        </div>\r\n      </app-form-container>\r\n      <app-alert-configuration-table [isLoading]=\"isConfigurationLoading\" (selectionChange)=\"configSelectionChange($event)\" (changeActive)=\"changeActive($event)\" [dataSource]=\"htConfigurationFilteredData\"></app-alert-configuration-table>\r\n    </section>\r\n  </div>\r\n  <!-- End of Electrical HT Tab -->\r\n\r\n  <!-- Water Tab -->\r\n  <div *ngIf=\"tabIndex==2\" class=\"card-body card-scroll\">\r\n    <div class=\"tab-button-content mb-3\">\r\n      <div class=\"btn-group button-group-custom\" role=\"group\">\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 0}\" (click)=\"setPage(0)\">Summary</button>\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 1}\"\r\n          (click)=\"setPage(1)\">Configuration</button>\r\n      </div>\r\n    </div>\r\n    <section *ngIf=\"pageIndex == 0\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <div class=\"pl-3 pr-3\">\r\n            <app-input-field label=\"Date Range\">\r\n              <date-range-picker [maxDate]=\"today\" position=\"bottom-left\" [(dateRange)]=\"waterDateRange\" (dateRangeChange)=\"getWaterSummaryData()\"></date-range-picker>\r\n            </app-input-field>\r\n          </div>\r\n          <app-alert-summary-filter [(filterFields)]=\"summaryFilterdFields\" [dataSource]=\"waterSummaryDataSource\" (onFilter)=\"onDataFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" type='water'>\r\n          </app-alert-summary-filter>\r\n        </div>\r\n      </app-form-container>\r\n      <app-data-table [isLoading]=\"isSummaryLoading\" [clickable]=\"true\" (onActionClicked)=\"tableActionOnClicked($event)\" (onRowClicked)=\"onRowClicked($event)\" class=\"m-2\" [rows]=\"summaryFilteredData\" [columns]=\"alertsDataSource.ltColumns\"></app-data-table>\r\n      <div *ngIf=\"!isSummaryLoading\" class=\"d-flex justify-content-end mt-3  mb-3\">\r\n        <button type=\"button\"\r\n        (click)=\"exportAlerts(serviceTypes.WATER)\"\r\n          class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">Export</button>\r\n        <button type=\"button\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\"\r\n          (click)=\"acknowledgeAll()\">Acknowledge All</button>\r\n      </div>\r\n    </section>\r\n    <section *ngIf=\"pageIndex == 1\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <app-alert-summary-filter [(filterFields)]=\"summaryFilterdFields\" [dataSource]=\"waterConfigurationDataSource\" tabType=\"config\" (onFilter)=\"onConfigurationFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" type='water'>\r\n          </app-alert-summary-filter>\r\n        </div>\r\n      </app-form-container>\r\n      <app-alert-configuration-table [isLoading]=\"isConfigurationLoading\" (selectionChange)=\"configSelectionChange($event)\" (changeActive)=\"changeActive($event)\" [dataSource]=\"waterConfigurationFilteredData\"></app-alert-configuration-table>\r\n    </section>\r\n  </div>\r\n  <!-- End of Water Tab -->\r\n\r\n  <!-- Leak Detection Tab -->\r\n  <div *ngIf=\"tabIndex == 4\" class=\"card-body card-scroll\">\r\n    <div class=\"tab-button-content mb-3\">\r\n      <div class=\"btn-group button-group-custom\" role=\"group\">\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 0}\" (click)=\"setPage(0)\">Summary</button>\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 1}\" (click)=\"setPage(1)\">Configuration</button>\r\n      </div>\r\n    </div>\r\n    <section *ngIf=\"pageIndex == 0\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <div class=\"pl-3 pr-3\">\r\n            <app-input-field label=\"Date Range\">\r\n              <date-range-picker\r\n                [maxDate]=\"today\"\r\n                position=\"bottom-left\"\r\n                [(dateRange)]=\"ldWaterDateRange\"\r\n                (dateRangeChange)=\"getLDWaterSummeryData()\">\r\n              </date-range-picker>\r\n            </app-input-field>\r\n          </div>\r\n          <app-input-field label=\"Leaks Between\">\r\n            <app-combo-box\r\n              dark=\"false\"\r\n              [dataSource]=\"[ {id: 1, name: 'Without sub meters between main ring meters'}, {id: 2, name: 'With sub meters between main ring meters'} ]\"\r\n              (selectedChange)=\"onScenarioChangeSummary($event.value)\">\r\n            </app-combo-box>\r\n          </app-input-field>\r\n        </div>\r\n      </app-form-container>\r\n      <app-data-table\r\n        [isLoading]=\"isSummaryLoading\"\r\n        [clickable]=\"true\"\r\n        (onActionClicked)=\"ldAlertAcknowledge($event)\"\r\n        (onRowClicked)=\"openInfo($event)\"\r\n        [rows]=\"summaryFilteredData\"\r\n        [columns]=\"[{name:'Identified Time', key: 'time'}, {name:'Meters', key: 'meters'}, {name:'Scenario', key: 'scenario'}, {name:'Max Error', key: 'maxError'}, {name:'Actual Error', key: 'error'}, {name:'Status', key: 'status'}, {name:'Action', key: 'buttonGroupAction'}]\">\r\n      </app-data-table>\r\n      <div *ngIf=\"!isSummaryLoading\" class=\"d-flex justify-content-end mt-3  mb-3\">\r\n        <button type=\"button\" (click)=\"exportLDAlerts()\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">Export</button>\r\n  <button type=\"button\" (click)=\"acknowledgeAllLDAlerts()\" [disabled]=\"isAcknowledgedAll\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">Acknowledge All</button>\r\n        <!-- <button type=\"button\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\" (click)=\"acknowledgeAll()\">Acknowledge -->\r\n          <!-- All</button> -->\r\n      </div>\r\n    </section>\r\n    <section *ngIf=\"pageIndex == 1\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row ml-3\">\r\n          <app-input-field label=\"Leaks Between\">\r\n            <app-combo-box\r\n              dark=\"false\"\r\n              [dataSource]=\"[ {id: 1, name: 'Without sub meters between main ring meters'}, {id: 2, name: 'With sub meters between main ring meters'} ]\"\r\n              (selectedChange)=\"onScenarioChangeConfiguration($event.value)\">\r\n            </app-combo-box>\r\n          </app-input-field>\r\n        </div>\r\n      </app-form-container>\r\n      <app-ld-configuration\r\n        [rows]=\"ldConfigurationFilteredData\"\r\n        [isLoading]=\"isConfigurationLoading\">\r\n      </app-ld-configuration>\r\n    </section>\r\n  </div>\r\n\r\n  <!-- Chiller Tab -->\r\n  <div *ngIf=\"tabIndex==3\" class=\"card-body card-scroll\">\r\n    <div class=\"tab-button-content mb-3\">\r\n      <div class=\"btn-group button-group-custom\" role=\"group\">\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 0}\" (click)=\"setPage(0)\">Summary</button>\r\n        <button class=\"btn btn-primary\" [ngClass]=\"{'active': pageIndex == 1}\"\r\n          (click)=\"setPage(1)\">Configuration</button>\r\n      </div>\r\n    </div>\r\n    <section *ngIf=\"pageIndex == 0\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <div class=\"pl-3 pr-3\">\r\n            <app-input-field label=\"Date Range\">\r\n              <date-range-picker [maxDate]=\"today\" position=\"bottom-left\" [(dateRange)]=\"chillerDateRange\" (dateRangeChange)=\"getChillerData()\"></date-range-picker>\r\n            </app-input-field>\r\n          </div>\r\n          <app-alert-summary-filter [(filterFields)]=\"summaryFilterdFields\" [dataSource]=\"chillerSummaryDataSource\" (onFilter)=\"onDataFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" type='chiller'>\r\n          </app-alert-summary-filter>\r\n        </div>\r\n      </app-form-container>\r\n      <app-data-table [isLoading]=\"isSummaryLoading\"  [clickable]=\"true\" (onActionClicked)=\"tableActionOnClicked($event)\" (onRowClicked)=\"onRowClicked($event)\" class=\"m-2\" [rows]=\"summaryFilteredData\" [columns]=\"alertsDataSource.chillerColumns\">\r\n      </app-data-table>\r\n      <div *ngIf=\"!isSummaryLoading\" class=\"d-flex justify-content-end mt-3  mb-3\">\r\n        <button type=\"button\"\r\n          (click)=\"exportAlerts(serviceTypes.CHILLER)\"\r\n          class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">Export</button>\r\n        <button type=\"button\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\" (click)=\"acknowledgeAll()\">Acknowledge\r\n          All</button>\r\n      </div>\r\n    </section>\r\n    <section *ngIf=\"pageIndex == 1\">\r\n      <app-form-container fieldName=\"Filtration\">\r\n        <div class=\"row\">\r\n          <app-alert-summary-filter [(filterFields)]=\"summaryFilterdFields\" [dataSource]=\"chillerConfigurationDataSource\" tabType=\"config\" (onFilter)=\"onConfigurationFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" type='chiller'>\r\n          </app-alert-summary-filter>\r\n        </div>\r\n      </app-form-container>\r\n      <app-alert-configuration-table [isLoading]=\"isConfigurationLoading\" (selectionChange)=\"configSelectionChange($event)\" (changeActive)=\"changeActive($event)\" [dataSource]=\"chillerConfigurationFilteredData\"></app-alert-configuration-table>\r\n    </section>\r\n  </div>\r\n  <!-- End of Chiller Tab -->\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/carbon-footprint/carbon-footprint.component.html":
/*!****************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/carbon-footprint/carbon-footprint.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\" id=\"carbonFootprint\">\r\n    <div class=\"card-header p-0\">\r\n        <span class=\"d-none d-xl-block  pl-3 pt-3 pb-3 font-secondary\">\r\n            <span class=\"d-inline-block font-secondary mr-4\">\r\n                Date Range<br>\r\n                <date-range-picker [disabled] = \"!isDone.carbonFootprintChartData\" [maxDate]=\"today\" [maxDateRange]=\"'1month'\"  position=\"bottom-left\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateRangedChanged()\">\r\n                </date-range-picker>\r\n            </span>\r\n            <span class=\"d-inline-block font-secondary mr-4\">\r\n                Plant\r\n                <app-combo-box [disable] = \"!isDone.carbonFootprintChartData\" class=\"select-box-dark\"  [dataSource]=\"plantList\" [selected]=\"selectedPlant\" [enableAll]=\"false\"\r\n                (selectedChange)=\"plantChanged($event)\"></app-combo-box>\r\n            </span>\r\n            <span class=\"d-inline-block font-secondary mr-4\">\r\n                Grid Emission Factor\r\n                <br>\r\n                <div class=\"wrapper_cutom\">\r\n                    <input [disabled] = \"!isDone.carbonFootprintChartData\" type=\"text\" [(ngModel)]=\"gridEmision\"  min=\"0\" (keyup.enter)=\"onOpen('open')\"/>\r\n                    <span>kg CO2/kWh</span>\r\n                </div>\r\n            </span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n                [ngClass]=\"{'active': tabIndex == 1}\">Table</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n                [ngClass]=\"{'active': tabIndex == 0}\">Chart</span>\r\n        </span>\r\n        <div class=\"d-xl-none pl-3 pt-3 pb-3 font-secondary\">\r\n            <div class=\"row w-100\">\r\n                <div class=\"col-8\">\r\n                    <div class=\"mb-2\">\r\n                        Date Range\r\n                        <date-range-picker [disabled] = \"!isDone.carbonFootprintChartData\" [maxDate]=\"today\" [maxDateRange]=\"'1month'\"  position=\"bottom-left\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateRangedChanged()\">\r\n                        </date-range-picker>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-4 \">\r\n                    <br>\r\n                    <select [disabled] = \"!isDone.carbonFootprintChartData\" class=\"form-control form-control-sm styled-select-box\"\r\n                        (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\">\r\n                        <option value=\"0\">Chart</option>\r\n                        <option value=\"1\">Table</option>\r\n                    </select>\r\n                </div>\r\n                <span class=\"d-inline-block font-secondary mr-4 pl-3\">\r\n                    Plant\r\n                    <app-combo-box [disable] = \"!isDone.carbonFootprintChartData\" class=\"select-box-dark\"  [dataSource]=\"plantList\" [selected]=\"selectedPlant\" [enableAll]=\"false\"\r\n                    (selectedChange)=\"plantChanged($event)\"></app-combo-box>\r\n                </span>\r\n                <span class=\"d-inline-block font-secondary mr-4 pl-3\">\r\n                    Grid Emission Factor\r\n                    <br>\r\n                    <div class=\"wrapper_cutom\">\r\n                        <input [disabled] = \"!isDone.carbonFootprintChartData\" type=\"text\" [(ngModel)]=\"gridEmision\"  min=\"0\" (keyup.enter)=\"onOpen('open')\"/>\r\n                        <span>kg CO2/kWh</span>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <section *ngIf=\"tabIndex == 0\" style=\"position: relative;\">\r\n        <div class=\"card-body main-card-height card-scroll\">\r\n            <!-- <div *ngIf=\"chartLoading\" class=\"loading-area\">\r\n                <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n            </div> -->\r\n            <div class=\"p-3 ml-1\">\r\n                <app-print-preview *ngIf=\"!chartLoading && carbonFootprintChartData\"  [className]=\"'customp-chiller-efficiencyx'\" [targetHtml] = \"'carbonFootprint'\" [title]=\"'Carbon Footprint'\"></app-print-preview>\r\n                <app-chart-loader [isDone] = \"isDone.carbonFootprintChartData\">\r\n                    <app-zoomlinedy [fixedWidth]=\"true\" [dataSource]=\"carbonFootprintChartData\"></app-zoomlinedy>\r\n                </app-chart-loader>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section *ngIf=\"tabIndex == 1\">\r\n        <div class=\"card-body main-card-height card-scroll\">\r\n            <div *ngIf=\"chartLoading\" class=\"loading-area\">\r\n                <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n            </div>\r\n            <ngx-datatable *ngIf=\"!chartLoading\" class=\"dark\" [rows]=\"rows\" [sortType]=\"sortType.multi\" [columnMode]=\"columnMode.standard\"\r\n                [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"18\">\r\n                <ngx-datatable-column name=\"Date\" [width]=\"(tableWidth | async)\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.dateTime | date: 'y/MM/dd'}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Daily &nbsp;Energy &nbsp;(Wh)\" [width]=\"(tableWidth | async)\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.daily_energy == null ? 'N/A' : row.daily_energy | number:'1.0-2'}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"CO₂ &nbsp;Daily &nbsp;Emission &nbsp;(kg)\" [width]=\"(tableWidth | async)\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.co2_daily_emission == null ? 'N/A' : row.co2_daily_emission | number:'1.0-2'}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"CO₂ &nbsp;Monthly &nbsp;Emission &nbsp;(kg)\" [width]=\"(tableWidth | async)\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.co2_monthly_emission == null ? 'N/A' : row.co2_monthly_emission | number:'1.0-2'}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            </ngx-datatable>\r\n            <div *ngIf=\"!chartLoading && rows.length !=0\" class=\"export-button mt-3\">\r\n                <button class=\"btn dark-button\" type=\"button\" (click)=\"exportToExcel()\">Export to Excel</button>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section class=\"popup-confirm\" >\r\n        <div class=\"popup-confirm-inside\">\r\n            <div class=\"popup-hightlige\"></div>\r\n            <div class=\"popup-content\">\r\n                <div class=\"popup-content-inside\">\r\n                    <div class=\"popup-content-text\" >\r\n                        <h3>Are you sure to make change Grid Emission Factor?</h3>\r\n                    </div>\r\n                    <div class=\"popup-content-action\">\r\n                        <button class=\"btn btn-no\" (click) = \"onOpen('cancel')\">CANCEL</button>\r\n                        <button class=\"btn btn-yes\" (click) = \"onOpen('close')\">YES</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/chiller-efficiency/chiller-efficiency.component.html":
/*!********************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/chiller-efficiency/chiller-efficiency.component.html ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\" id=\"chillerEfficiency\">\r\n  <div class=\"card-header p-0\">\r\n    <span class=\"d-none d-xl-block  pl-3 pt-3 pb-3 font-secondary\">\r\n      <span class=\"d-inline-block font-secondary mr-4\">\r\n        Date Range<br>\r\n        <date-range-picker [disabled] = \"!isDone.chillerEfficiencyChartData\" [maxDate]=\"today\" [maxDateRange]=\"'1month'\" [disabled]=\"chartLoading\" position=\"bottom-left\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateRangedChanged()\">\r\n        </date-range-picker>\r\n      </span>\r\n      <span class=\"d-inline-block font-secondary mr-4\">\r\n        Plant\r\n        <app-combo-box [disable] = \"!isDone.chillerEfficiencyChartData\" class=\"select-box-dark\"  [dataSource]=\"plantList\" [selected]=\"selectedPlant\" [enableAll]=\"false\"\r\n          (selectedChange)=\"plantChanged($event)\"></app-combo-box>\r\n      </span>\r\n      <span class=\"d-inline-block font-secondary mr-4\">\r\n        Chiller\r\n        <app-combo-box [disable] = \"!isDone.chillerEfficiencyChartData\" class=\"select-box-dark\"  [dataSource]=\"chillerList\" [selected]=\"selectedChiller\"\r\n          (selectedChange)=\"chillerChanged($event)\"></app-combo-box>\r\n      </span>\r\n      <span class=\"d-inline-block font-secondary mr-4\">\r\n        yScale\r\n        <app-combo-box [disable] = \"!isDone.chillerEfficiencyChartData\" class=\"select-box-dark\"  [dataSource]=\"scaleList\" [selected]=\"scaleListSelected\" [enableAll]=\"false\"\r\n          (selectedChange)=\"scaleChanged($event)\"></app-combo-box>\r\n      </span>\r\n\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n        [ngClass]=\"{'active': tabIndex == 1}\">Table</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n        [ngClass]=\"{'active': tabIndex == 0}\">Chart</span>\r\n    </span>\r\n    <div class=\"d-xl-none pl-3 pt-3 pb-3 font-secondary\">\r\n      <div class=\"row w-100\">\r\n        <div class=\"col-8\">\r\n          <span class=\"d-inline-block font-secondary mr-4\">\r\n            Date Range\r\n            <date-range-picker [disabled] = \"!isDone.chillerEfficiencyChartData\" [maxDate]=\"today\" [maxDateRange]=\"'1month'\" [disabled]=\"chartLoading\" position=\"bottom-left\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateRangedChanged()\">\r\n            </date-range-picker>\r\n          </span>\r\n          <span class=\"d-inline-block font-secondary mr-4\">\r\n            Plant\r\n            <app-combo-box [disable] = \"!isDone.chillerEfficiencyChartData\" class=\"select-box-dark\"  [dataSource]=\"plantList\" [selected]=\"selectedPlant\" [enableAll]=\"false\"\r\n              (selectedChange)=\"plantChanged($event)\"></app-combo-box>\r\n          </span>\r\n          <span class=\"d-inline-block font-secondary mr-4\">\r\n            Chiller\r\n            <app-combo-box [disable] = \"!isDone.chillerEfficiencyChartData\" class=\"select-box-dark\"  [dataSource]=\"chillerList\" [selected]=\"selectedChiller\"\r\n              (selectedChange)=\"chillerChanged($event)\"></app-combo-box>\r\n          </span>\r\n          <span class=\"d-inline-block font-secondary mr-4\">\r\n            yScale\r\n            <app-combo-box [disable] = \"!isDone.chillerEfficiencyChartData\" class=\"select-box-dark\"  [dataSource]=\"scaleList\" [selected]=\"scaleListSelected\" [enableAll]=\"false\"\r\n              (selectedChange)=\"scaleChanged($event)\"></app-combo-box>\r\n          </span>\r\n        </div>\r\n        <div class=\"col-4 \">\r\n          <select [disabled] = \"!isDone.chillerEfficiencyChartData\" class=\"form-control mt-4 form-control-sm select-box-dark\" (change)=\"setTabIndex($event.target.value)\"\r\n            [(ngModel)]=\"tabIndex\">\r\n            <option value=\"0\">Chart</option>\r\n            <option value=\"1\">Table</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <section *ngIf=\"tabIndex == 0\" style=\"position: relative;\">\r\n    <div class=\"card-body main-card-height card-scroll\">\r\n      <!-- <div *ngIf=\"chartLoading\" class=\"loading-area\">\r\n        <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n      </div> -->\r\n      <div class=\"p-3 ml-1\" >        \r\n        <app-print-preview *ngIf=\"!chartLoading && chillerEfficiencyChartData\"  [className]=\"'customp-chiller-efficiency'\" [targetHtml] = \"'chillerEfficiency'\" [title]=\"'Chiller Efficiency'\"></app-print-preview>\r\n        <app-chart-loader [isDone] = \"isDone.chillerEfficiencyChartData\">\r\n          <app-zoomline   [dataSource]=\"chillerEfficiencyChartData\"></app-zoomline>\r\n        </app-chart-loader>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section *ngIf=\"tabIndex == 1\">\r\n    <div class=\"card-body main-card-height card-scroll\">\r\n      <div *ngIf=\"chartLoading\" class=\"loading-area\">\r\n        <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n      </div>\r\n      <ngx-datatable *ngIf=\"!chartLoading\" class=\"dark\" [rows]=\"rows\" [sortType]=\"sortType.multi\" [columnMode]=\"columnMode.standard\"\r\n        [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"18\">\r\n        <ngx-datatable-column name=\"Time\" [width]=\"(tableWidth | async)\">\r\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n            {{row.dateTime | date: 'y/MM/dd HH:mm'}}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Efficiency &nbsp;(kW/RT)\" [width]=\"(tableWidth | async)\">\r\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n            {{row.efficiency == null ? 'N/A' : row.efficiency | number:'1.0-2'}}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n      <div *ngIf=\"!chartLoading && rows.length !=0\" class=\"export-button\">\r\n        <button class=\"btn dark-button\" type=\"button\" (click)=\"exportToExcel()\">Export to Excel</button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/chiller-plant/chiller-plant.component.html":
/*!**********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/chiller-plant/chiller-plant.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card h-100\">\r\n  <div class=\"card-header pl-3 pt-3 pb-3\">\r\n    <span class=\"font-secondary\">\r\n      Chiller Plant &nbsp;\r\n      <app-combo-box class=\"select-box-dark\" [dataSource]=\"plantList\" [selected]=\"chillerId\" [fullWidth]=\"false\" [enableAll]=\"false\"\r\n          (selectedChange)=\"chillerChanged($event)\"></app-combo-box>\r\n    </span>\r\n  </div>\r\n  <div class=\"card-body h-100 card-scroll\">\r\n    <div class=\"row row-eq-height\">\r\n      <div class=\"col-md-7 col-lg-7 col-xl-7 pr-2 pl-0\">\r\n        <div class=\"row pl-0\">\r\n          <div class=\"col-md-12 col-lg-12 col-xl-12 pr-0 pl-0\">\r\n            <div class=\"chart-card h-100\" id=\"plantEficiency\">\r\n              <div class=\"chart-card-header pl-2 pr-2\">\r\n                <span class=\"header-title\">Plant Efficiency - Real Time</span>\r\n                <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'plantEficiency'\" [title]=\"'Plant Efficiency - Real Time'\"></app-print-preview>\r\n\r\n              </div>\r\n              <div class=\"chart-card-body position-relative\">\r\n                <div class=\"row h-100\">\r\n                  <div class=\"col-md-12 col-lg-12 col-xl-12 p-2\">\r\n                    <app-chart-loader [isDone] = \"isDone.plantEffieciencyDataSource\">\r\n                      <app-linear-scale *ngIf=\"plantEffieciencyDataSource\" [dataSource]=\"plantEffieciencyDataSource\"\r\n                        height=\"130\"></app-linear-scale>\r\n                    </app-chart-loader>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2 pl-0\">\r\n          <div class=\"col-md-12 col-lg-12 col-xl-12 pr-0 pl-0\">\r\n            <div class=\"chart-card h-100\" id=\"heatbalance\">\r\n              <div class=\"chart-card-header pl-2 pr-2\">\r\n                <span class=\"header-title\">Today's Heat Balance - {{ today | date: 'dd/MM/yyyy' }}</span>\r\n                <div class=\"d-flex align-items-center\">\r\n                  <span class=\"font-secondary\">\r\n                    yScale &nbsp;\r\n                    <app-combo-box [disabled] = \"!isDone.heatBalanceDataSource\" dark=\"false\" class=\"select-box-light\" [dataSource]=\"scaleListHeatBalance\" [selected]=\"scaleListHeatBalanceSelected\" [fullWidth]=\"false\" [enableAll]=\"false\"\r\n                        (selectedChange)=\"scaleHeatBalanceChanged($event)\"></app-combo-box>\r\n                  </span>\r\n                  <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'heatbalance'\" [title]=\"'Todays Heat Balance'\"></app-print-preview>\r\n                </div>\r\n              </div>\r\n              <div class=\"chart-card-body h-100 p-2 position-relative\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 col-lg-12 col-xl-12 pb-3\">\r\n                    <app-chart-loader [isDone] = \"isDone.heatBalanceDataSource\">\r\n                      <app-multi-series *ngIf=\"heatBalanceDataSource\" [dataSource]=\"heatBalanceDataSource\" [height]=\"220\"></app-multi-series>\r\n                    </app-chart-loader>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2 pl-0\">\r\n          <div class=\"col-md-12 col-lg-12 col-xl-12 pr-0 pl-0\">\r\n            <div class=\"chart-card h-100 mb-3\" id=\"todayEficiency\">\r\n              <div class=\"chart-card-header pl-2 pr-2\">\r\n                <span class=\"header-title\">Today's Efficiency Trend - {{ today | date: 'dd/MM/yyyy' }}</span>\r\n                \r\n                <div class=\"d-flex align-items-center\">\r\n                  <span class=\"font-secondary\">\r\n                    yScale &nbsp;\r\n                    <app-combo-box [disabled] = \"!isDone.effieciencyTrendDataSource\" dark=\"false\" class=\"select-box-light\" [dataSource]=\"scaleListHeatBalance\" [selected]=\"scaleListEficiencySelected\" [fullWidth]=\"false\" [enableAll]=\"false\"\r\n                        (selectedChange)=\"scaleEficiencyChanged($event)\"></app-combo-box>\r\n                  </span>\r\n                  <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'todayEficiency'\" [title]=\"'Todays Efficiency Trend'\"></app-print-preview>\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"chart-card-body position-relative\">\r\n                <div class=\"row p-2\">\r\n                  <div class=\"col-md-12 col-lg-12 col-xl-12\">\r\n                    <app-chart-loader [isDone] = \"isDone.effieciencyTrendDataSource\">\r\n                      <app-multi-series *ngIf=\"effieciencyTrendDataSource\" [dataSource]=\"effieciencyTrendDataSource\" [height]=\"220\"></app-multi-series>\r\n                    </app-chart-loader>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-5 col-lg-5 col-xl-5 pl-0 pr-0\">\r\n        <div class=\"chart-card h-100\" id=\"energyDistribution\">\r\n          <div class=\"chart-card-header pl-2 pr-2\">\r\n            <span class=\"header-title\">Energy Distribution - {{ monthlyChange ? \"Yearly\" : \"Monthly\" }}</span>\r\n            <div class=\"d-flex align-items-center\">\r\n              <div class=\"float-right toggle-middle-head\">\r\n                <app-toggle-switch [disabled] = \"!isDone.enegeryConsumptionDataSource\" aria-disabled=\"true\" size=\"small\" class=\"float-left\" (onChange)=\"monthlyToggle($event)\">{{ monthlyChange ? \"Yearly\" : \"Monthly\" }}</app-toggle-switch>\r\n              </div>\r\n              <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'energyDistribution'\" [title]=\"'Energy Distribution'\"></app-print-preview>\r\n            </div>\r\n          </div>\r\n          <div class=\"chart-card-body pie-chart-min-height position-relative\">\r\n            <app-chart-loader [isDone] = \"isDone.enegeryConsumptionDataSource\">\r\n              <app-doughnut2d *ngIf=\"enegeryConsumptionDataSource\" [dataSource]=\"enegeryConsumptionDataSource\"></app-doughnut2d>\r\n            </app-chart-loader>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/condenser-performance/condenser-performance.component.html":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/condenser-performance/condenser-performance.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\" id =\"condernserPerformance\">\r\n  <div class=\"card-header p-0\">\r\n    <span class=\"d-none d-xl-block  pl-3 pt-3 pb-3 font-secondary\">\r\n      <span class=\"d-inline-block font-secondary mr-4\">\r\n        Date Range<br>\r\n        <date-range-picker [maxDate]=\"today\" [maxDateRange]=\"'1month'\" [disabled]=\"!isDone.condenserPerformanceChartData\" position=\"bottom-left\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateRangedChanged()\">\r\n        </date-range-picker>\r\n      </span>\r\n      <span class=\"d-inline-block font-secondary mr-4\">\r\n        Plant\r\n        <app-combo-box class=\"select-box-dark\" [disable]=\"!isDone.condenserPerformanceChartData\" [dataSource]=\"plantList\" [selected]=\"selectedPlant\" [enableAll]=\"false\"\r\n          (selectedChange)=\"plantChanged($event)\"></app-combo-box>\r\n      </span>\r\n      <span class=\"d-inline-block font-secondary mr-4\">\r\n        Header\r\n        <app-combo-box class=\"select-box-dark\" [disable]=\"!isDone.condenserPerformanceChartData\" [dataSource]=\"headerList\" [selected]=\"selectedHeader\" [enableAll]=\"false\"\r\n          (selectedChange)=\"headerChanged($event)\"></app-combo-box>\r\n      </span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n        [ngClass]=\"{'active': tabIndex == 1}\">Table</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n        [ngClass]=\"{'active': tabIndex == 0}\">Chart</span>\r\n    </span>\r\n    <div class=\"d-xl-none pl-3 pt-3 pb-3 font-secondary\">\r\n      <div class=\"row w-100\">\r\n        <div class=\"col-8\">\r\n          <span class=\"d-inline-block font-secondary mr-4\">\r\n            Date Range\r\n            <date-range-picker [maxDate]=\"today\" [maxDateRange]=\"'1month'\" [disabled]=\"!isDone.condenserPerformanceChartData\" position=\"bottom-left\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateRangedChanged()\">\r\n            </date-range-picker>\r\n          </span>\r\n          <span class=\"d-inline-block font-secondary mr-4\">\r\n            Plant\r\n            <app-combo-box class=\"select-box-dark\" [disable]=\"!isDone.condenserPerformanceChartData\" [dataSource]=\"plantList\" [selected]=\"selectedPlant\" [enableAll]=\"false\"\r\n              (selectedChange)=\"plantChanged($event)\"></app-combo-box>\r\n          </span>\r\n          <span class=\"d-inline-block font-secondary mr-4\">\r\n            Header\r\n            <app-combo-box class=\"select-box-dark\" [disable]=\"!isDone.condenserPerformanceChartData\" [dataSource]=\"headerList\" [selected]=\"selectedHeader\" [enableAll]=\"false\"\r\n              (selectedChange)=\"headerChanged($event)\"></app-combo-box>\r\n          </span>\r\n        </div>\r\n        <div class=\"col-4 \">\r\n          <select [disabled] = \"!isDone.condenserPerformanceChartData\" class=\"form-control form-control-sm styled-select-box\" (change)=\"setTabIndex($event.target.value)\"\r\n            [(ngModel)]=\"tabIndex\">\r\n            <option value=\"0\">Chart</option>\r\n            <option value=\"1\">Table</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <section *ngIf=\"tabIndex == 0\" >\r\n    <div class=\"card-body main-card-height card-scroll\" style=\"position: relative\">\r\n      <!-- <div *ngIf=\"chartLoading\" class=\"loading-area\">\r\n        <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n      </div> -->\r\n      <div class=\"p-3 ml-1\" >\r\n        <app-print-preview *ngIf=\"!chartLoading && condenserPerformanceChartData\"  [className]=\"'customp-chiller-condencer'\" [targetHtml] = \"'condernserPerformance'\" [title]=\"'Condenser Performance'\"></app-print-preview>\r\n        <app-chart-loader [isDone] = \"isDone.condenserPerformanceChartData\">\r\n          <app-zoomscatter  [fixedWidth]=\"true\" [dataSource]=\"condenserPerformanceChartData\"></app-zoomscatter>\r\n        </app-chart-loader>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section *ngIf=\"tabIndex == 1\">\r\n    <div class=\"card-body main-card-height card-scroll\">\r\n      <div *ngIf=\"chartLoading\" class=\"loading-area\">\r\n        <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n      </div>\r\n      <ngx-datatable *ngIf=\"!chartLoading\" class=\"dark\" [rows]=\"rows\" [sortType]=\"sortType.multi\" [columnMode]=\"columnMode.standard\"\r\n        [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"18\">\r\n        <ngx-datatable-column name=\"Date\" [width]=\"(tableWidth | async)\">\r\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n            {{row.dateTime | date: 'y/MM/dd HH:mm'}}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Supply &nbsp;Temperature &nbsp;(&deg;C)\" [width]=\"(tableWidth | async)\">\r\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n            {{row.cdw_supply_temp == null ? 'N/A' : row.cdw_supply_temp | number:'1.0-2'}}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Return &nbsp;Temperature &nbsp;(&deg;C)\" [width]=\"(tableWidth | async)\">\r\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n            {{row.cdw_return_temp == null ? 'N/A' : row.cdw_return_temp | number:'1.0-2'}}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Ambient &nbsp;Temperature &nbsp;(&deg;C)\" [width]=\"(tableWidth | async)\">\r\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n            {{row.dry_bulb == null ? 'N/A' : row.dry_bulb | number:'1.0-2'}}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n      <div *ngIf=\"!chartLoading && rows.length !=0\" class=\"export-button\">\r\n        <button class=\"btn dark-button\" type=\"button\" (click)=\"exportToExcel()\">Export to Excel</button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/configurations/configurations.component.html":
/*!************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/configurations/configurations.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\">\r\n    <div class=\"card-header p-0\">\r\n        <span class=\"d-none d-xl-block  pl-3 pt-3 pb-3 font-secondary\">\r\n            <span>Meter Configuration</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(3)\"\r\n                [ngClass]=\"{'active': tabIndex == 3}\">Chiller System</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(2)\"\r\n                [ngClass]=\"{'active': tabIndex == 2}\">Water</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n                [ngClass]=\"{'active': tabIndex == 1}\">Electrical - HT</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n                [ngClass]=\"{'active': tabIndex == 0}\">Electrical - LT</span>\r\n        </span>\r\n        <div class=\"d-xl-none pl-3 pt-3 pb-3 font-secondary\">\r\n            <span>Alert Dashboard</span>\r\n            <select class=\"form-control-sm styled-select-box float-right mr-3 mb-3\"\r\n                (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\">\r\n                <option value=\"0\">Electrical LT</option>\r\n                <option value=\"1\">Electrical HT</option>\r\n                <option value=\"2\">Water</option>\r\n                <option value=\"3\">Chiller System</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Electrical LT Tab -->\r\n    <div *ngIf=\"tabIndex==0\" class=\"card-body card-scroll\">\r\n        <app-form-container fieldName=\"Filtration\">\r\n            <div class=\"d-flex justify-content-between mt-3  mb-3\">\r\n                <app-alert-summary-filter *ngIf=\"ltDataSource\" [disabled]=\"disableFiltration\" [filterData]=\"false\" [dataSource]=\"ltDataSource\" [showActive]=\"false\" (selectedBuilding)=\"onChangeBuilding($event)\" (selectedBuildingGroup)=\"onChangeBuildingGroup($event)\" (onFilter)=\"onDataFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10 pl-0\" tabType=\"configs\" type='lt'></app-alert-summary-filter>\r\n              </div>\r\n        </app-form-container>\r\n        <div class=\"pt-3\">\r\n            <app-configuration-table [isLoading]=\"isLoading\" (onEditOrInsert)=\"onEditOrInsert($event)\" [rows]=\"filteredData\" type='lt' class=\"pt-3\" (onSave)=\"onSaveNewMeter($event)\" (onUpdate)=\"onUpdateMeter($event)\" (onDelete)=\"onDeleteMeter($event)\"></app-configuration-table>\r\n        </div>\r\n    </div>\r\n    <!-- End of Electrical LT Tab -->\r\n\r\n    <!-- Electrical HT Tab -->\r\n    <div *ngIf=\"tabIndex==1\" class=\"card-body card-scroll\">\r\n        <app-form-container fieldName=\"Filtration\">\r\n            <div class=\"d-flex justify-content-between mt-3  mb-3\">\r\n                <app-alert-summary-filter *ngIf=\"htDataSource\" [filterData]=\"false\" [dataSource]=\"htDataSource\" [showActive]=\"false\" (selectedLoop)=\"onChangeLoop($event)\" (onFilter)=\"onDataFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" tabType=\"configs\" type='ht'></app-alert-summary-filter>\r\n            </div>\r\n        </app-form-container>\r\n        <div class=\"pt-3\">\r\n            <app-configuration-table [isLoading]=\"isLoading\" [rows]=\"filteredData\" type='ht' (onSave)=\"onSaveNewMeter($event)\" (onUpdate)=\"onUpdateMeter($event)\" (onDelete)=\"onDeleteMeter($event)\"></app-configuration-table>\r\n        </div>\r\n    </div>\r\n    <!-- End of Electrical HT Tab -->\r\n\r\n    <!-- Water Tab -->\r\n    <div *ngIf=\"tabIndex==2\" class=\"card-body card-scroll\">\r\n        <app-form-container fieldName=\"Filtration\">\r\n            <div class=\"d-flex justify-content-between mt-3  mb-3\">\r\n                <app-alert-summary-filter *ngIf=\"waterDataSource\" [filterData]=\"false\" [dataSource]=\"waterDataSource\" [showActive]=\"false\" (selectedBuilding)=\"onChangeBuilding($event)\" (selectedBuildingGroup)=\"onChangeBuildingGroup($event)\" (onFilter)=\"onDataFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" tabType=\"configs\" type='water'></app-alert-summary-filter>\r\n            </div>\r\n        </app-form-container>\r\n        <div class=\"pt-3\">\r\n            <app-configuration-table [isLoading]=\"isLoading\" [rows]=\"filteredData\" type='water' (onSave)=\"onSaveNewMeter($event)\" (onUpdate)=\"onUpdateMeter($event)\" (onDelete)=\"onDeleteMeter($event)\"></app-configuration-table>\r\n        </div>\r\n    </div>\r\n    <!-- End of Water Tab -->\r\n\r\n    <!-- Chiller Tab -->\r\n    <div *ngIf=\"tabIndex==3\" class=\"card-body card-scroll\">\r\n        <app-form-container fieldName=\"Filtration\">\r\n            <div class=\"d-flex justify-content-between mt-3  mb-3\">\r\n                <app-alert-summary-filter *ngIf=\"chillerDataSource\" [filterData]=\"false\" [dataSource]=\"chillerDataSource\" [showActive]=\"false\" (selectedPlant)=\"onChangePlant($event)\" (onFilter)=\"onDataFiltered($event)\" class=\"col-12 col-sm-6 col-md-6 col-lg-9 col-xl-10\" tabType=\"configs\" type='chiller'></app-alert-summary-filter>\r\n            </div>\r\n        </app-form-container>\r\n        <div class=\"pt-3\">\r\n            <app-configuration-table [isLoading]=\"isLoading\" [rows]=\"filteredData\" type='chiller' (onSave)=\"onSaveNewMeter($event)\" (onUpdate)=\"onUpdateMeter($event)\" (onDelete)=\"onDeleteMeter($event)\"></app-configuration-table>\r\n        </div>\r\n    </div>\r\n    <!-- End of Chiller Tab -->\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/electrical-dashboard/electrical-dashboard.component.html":
/*!************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/electrical-dashboard/electrical-dashboard.component.html ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card h-100\" id =\"8daysProfile\">\r\n  <div class=\"card-header p-0\">\r\n    <div class=\"d-none d-xl-block\">\r\n      <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary header-title\">Electrical Low Tension > {{buildingGroupName}} ></span>\r\n      <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary\">\r\n        <app-combo-box class=\"select-box-dark\" [dataSource]=\"buildingList\" [selected]=\"selectedBuilding\" (selectedChange)=\"buildingChanged($event)\"></app-combo-box>\r\n      </span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(6)\" [ngClass]=\"{'active': tabIndex == 6}\">EUI</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(3)\" [ngClass]=\"{'active': tabIndex == 3}\">Meter Tree</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(5)\" [ngClass]=\"{'active': tabIndex == 5}\">8-Day Profile</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(2)\" [ngClass]=\"{'active': tabIndex == 2}\">Equipment Breakdown</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\" [ngClass]=\"{'active': tabIndex == 1}\">Equipment Distribution</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\" [ngClass]=\"{'active': tabIndex == 0}\">Overview</span>\r\n    </div>\r\n    <div class=\"form-group row mb-0 row d-xl-none\">\r\n      <label class=\"col-12 col-sm-12 col-lg-6 col-form-label\">Electrical Low Tension</label>\r\n      <div class=\"col-12 col-sm-12 col-lg-6 pl-2 pr-0 pb-2\">\r\n        <app-combo-box class=\"select-box-dark\" [dataSource]=\"buildingList\" [selected]=\"selectedBuilding\" (selectedChange)=\"buildingChanged($event)\"></app-combo-box>\r\n        <select (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\" class=\"form-control mt-1 form-control-sm select-box-dark\">\r\n          <option value=\"0\">Overview</option>\r\n          <option value=\"1\">Equipment Distribution</option>\r\n          <option value=\"2\">Equipment Breakdown</option>\r\n          <option value=\"5\">8-Day Profile</option>\r\n          <option value=\"7\">Alerts</option>\r\n          <option value=\"6\">EUI</option>\r\n          <option value=\"3\">Meter Tree</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body  h-50 card-scroll\">\r\n\r\n    <!-- tab index 0 -->\r\n    <section *ngIf=\"tabIndex == 0\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 col-lg-6 col-xl-4 p-1\">\r\n          <div class=\"chart-card h-100\">\r\n            <div class=\"chart-card-header\">\r\n                <span class=\"align-verticle-middle\">Overall Consumption</span>\r\n                <date-range-picker [disabled]=\"!isDone.overallConsumptioSquareData\" *ngIf=\"_reload\"  [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\" (dateRangeChange)=\"dateRangeListner('overall')\" [(dateRange)]=\"overallDateRange\"></date-range-picker>\r\n            </div>\r\n            <div class=\"chart-card-body custom-card-body\">\r\n              <div class=\"row h-100\">\r\n                <!-- <div class=\"col-12 input-date p-0\">\r\n                  <date-range-picker *ngIf=\"_reload\"  [maxDate]=\"today\" class=\"d-xl-none m-3\" (dateRangeChange)=\"dateRangeListner('overall')\" [(dateRange)]=\"overallDateRange\"></date-range-picker>\r\n                </div> -->\r\n\r\n                <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 custom-view-pointer\">\r\n                  <app-chart-loader [isDone] = \"isDone.overallConsumptioTotalData\">\r\n                    <app-data-pointer-none-image [color] = \"this.colorMap.electric.secondary\" [pointerText]=\"overallConsumptioTotalData\" [unit]=\"'kWh'\" type=\"kWh\" [description]=\"'Total Consumption'\" class=\"\"></app-data-pointer-none-image>\r\n                  </app-chart-loader>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 custom-view-pointer\">\r\n                  <app-chart-loader [isDone] = \"isDone.overallConsumptioSquareData\">\r\n                    <app-data-pointer-none-image [color] = \"this.colorMap.electric.secondary\" [description]=\"squareMeterPointerDescription\"\r\n                                      [pointerText]=\"overallConsumptioSquareData\"\r\n                                      [unit]=\"'kWh/m<sup>2</sup>.yr'\"\r\n                                      type=\"kwhm2\"></app-data-pointer-none-image>\r\n                  </app-chart-loader>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-lg-6 col-xl-8 p-1 pt-0\">\r\n          <div class=\"chart-card h-100\" id=\"30MinutConsumption\">\r\n            <div class=\"chart-card-header\">\r\n              <span class=\"header-title\">30 min Consumption</span>\r\n              <div class=\"d-flex align-items-center\">\r\n                <date-range-picker [disabled]=\"!isDone.dailyConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"_maxTodayConsumptionDate\" [minDate] = \"_minTodayConsumptionDate\" (dateRangeChange)=\"onChangeTodayConsumption()\"\r\n                                  [(dateRange)]=\"_todayConsumptionDate\"\r\n                                  [isSingleDate]=\"'true'\"\r\n                                  position=\"bottom-right\"></date-range-picker>\r\n              \r\n                <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'30MinutConsumption'\" [title]=\"'30 min Consumption'\"></app-print-preview>\r\n              </div>\r\n            </div>\r\n            <div class=\"chart-card-body p-3 position-relative\">\r\n              <app-total-comsumption [value] = \"dailyConsumptionData.chart.total\" [unit] = \"'kWh'\" [type] = \"'kWh'\"></app-total-comsumption>\r\n              <app-chart-loader [isDone] = \"isDone.dailyConsumptionData\">\r\n                <app-trend *ngIf=\"dailyConsumptionData\" [dataSource]=\"dailyConsumptionData\"></app-trend>\r\n              </app-chart-loader>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row ow-eq-height\">\r\n        <div class=\"col-md-12 col-lg-6 col-xl-4 p-1\">\r\n          <div class=\"chart-card h-100\" id=\"equipmentdistribution\">\r\n            <div class=\"chart-card-header card-header-max-height\">\r\n              <!-- <div class=\"d-flex justify-content-between\"> -->\r\n                <span class=\"header-title\">Equipment Distribution</span>\r\n                <!-- </div> -->\r\n                <div class=\"d-flex align-items-center\">\r\n                  <date-range-picker [disabled]=\"!isDone.equipDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\" [(dateRange)]=\"eqDIstDateRange\" (dateRangeChange)=\"dateRangeListner('eqDist')\"></date-range-picker>\r\n                  <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'equipmentdistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n                </div>\r\n            </div>\r\n            <div class=\"chart-card-body p-3\">\r\n              <!-- <date-range-picker *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-xl-none\" (dateRangeChange)=\"dateRangeListner('eqDist')\" [(dateRange)]=\"eqDIstDateRange\"></date-range-picker> -->\r\n              <app-chart-loader [isDone] = \"isDone.equipDistribution\">\r\n                <app-pie *ngIf=\"equipDistribution\" [dataSource]=\"equipDistribution\"></app-pie>\r\n              </app-chart-loader>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-lg-6 col-xl-8 p-1\">\r\n          <div class=\"chart-card h-100\" id=\"consumptionSummary\">\r\n            <div class=\"chart-card-header\">\r\n              <span class=\"header-title\">Consumption Summary</span>\r\n\r\n              <app-toggle-switch [disabled] =\"!isDone.trendLogData\" aria-disabled=\"true\" (onChange)=\"setConsumpType($event)\" [color]=\"getColor()\">\r\n                <span>Select Category :</span>\r\n              </app-toggle-switch>\r\n\r\n              <!-- <app-multiple-select *ngIf=\"multipleConsump\" [selected]=\"selectedTypes\" [options]=\"eqTypes\">\r\n                Category Type\r\n              </app-multiple-select> -->\r\n\r\n              <div role=\"group\" class=\"d-flex align-items-center\" aria-label=\"Trend Log Modes\">\r\n                <div class=\"chart-card-header\" style=\"margin-right: 10px;\">\r\n                  <span style=\"margin-right: 5px;\">From:</span>\r\n                  <date-range-picker [disabled] =\"!isDone.trendLogData\" *ngIf=\"_reload && !_isMonth && !_isYear\"  class=\"\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] = \"_maxDate\"\r\n                                      [(dateRange)]=\"_startDateTrendLog\"\r\n                                      [isSingleDate]=\"'true'\"\r\n                                      position=\"bottom-right\"></date-range-picker>\r\n                  <month-date-pciker [disabled] =\"!isDone.trendLogData\" *ngIf=\"(_reload && _isMonth) || (_reload && _isYear)\" [isYear]=\"_isYear\" [(dateRange)]=\"_startDateTrendLog\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] =\"today\" ></month-date-pciker>\r\n                  \r\n                </div>\r\n                <span>Last</span>\r\n                <button  [disabled] =\"!isDone.trendLogData\"  *ngFor=\"let item of _mapArrayTrendIndex\" class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == item.value}\" (click)=\"setTrendLogData(item.value)\">{{item.label}}</button>\r\n                <app-print-preview [className]=\"'position-gorelative'\"  [targetHtml] = \"'consumptionSummary'\" [title]=\"'Consumption Summary'\"></app-print-preview>\r\n                \r\n                <!-- <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 0}\" (click)=\"setTrendLogData(0)\">7D</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 1}\" (click)=\"setTrendLogData(1)\">30D</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 2}\" (click)=\"setTrendLogData(2)\">12M</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 3}\" (click)=\"setTrendLogData(3)\">5Y</button> -->\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"!multipleConsump\" class=\"chart-card-body p-3 position-relative\">\r\n              <app-chart-loader [isDone] = \"isDone.trendLogData\">\r\n                <app-trend *ngIf=\"trendLogData\" [dataSource]=\"trendLogData\"></app-trend>\r\n              </app-chart-loader>\r\n            </div>\r\n\r\n            <div *ngIf=\"multipleConsump\" class=\"chart-card-body p-3\">\r\n              <app-consumption-summery-chart ></app-consumption-summery-chart>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"chart-card m-1\" *ngIf=\"tabIndex == 1\">\r\n      <div class=\"chart-card-body p-3 position-relative\">\r\n        <div class=\"eq-breackdown-position\">\r\n          <date-range-picker [disabled] = \"!isDone.equipDistributionLg\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-left\"\r\n              [(dateRange)]=\"eqdistlg\" (dateRangeChange)=\"dateRangeListner('eqdistlg')\">\r\n          </date-range-picker>\r\n        </div>\r\n        <div>\r\n          <app-print-preview [targetHtml] = \"'8daysProfile'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n          <app-chart-loader [isDone] = \"isDone.equipDistributionLg\">\r\n            <app-doughnut2d *ngIf=\"equipDistributionLg\" [fixedWidth]=\"true\" [dataSource]=\"equipDistributionLg\">\r\n            </app-doughnut2d>\r\n          </app-chart-loader>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"tabIndex == 2\">\r\n        <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 pb-4\">\r\n          <app-form-container fieldName=\"Filter Equipment\">\r\n            <app-equipment-breakdown-filter serviceType=\"serviceType.ELECTRICAL\" (onFilter)=\"onBreakdownFiltered($event)\" [dataSource]=\"equipmentBreakdownData\" [eqBreakDownFilter]=\"equipmentBreakdownDateRange\" (onDateRangeChanged)=\"onEqBreakdownFilter($event)\"></app-equipment-breakdown-filter>\r\n          </app-form-container>\r\n        </div>\r\n        <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n          <app-data-table [isLoading]=\"tableLoading\" [rows]=\"rows\" [columns]=\"columns\"></app-data-table>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row pl-2 pr-2 h-100\" *ngIf=\"tabIndex == 3\">\r\n      <app-dynamic-date-label [dateRange]=\"meterTreeDateRange\"></app-dynamic-date-label>\r\n      <app-chart-loader [isDone] = \"!meterTreeLoading\">\r\n        <app-meter-tree *ngIf=\"!meterTreeLoading\" type=\"Wh\" mode=\"false\" [dataSource]=\"meterTreeData\" class=\"w-100 p-3 h-100\"></app-meter-tree>\r\n      </app-chart-loader>\r\n      <app-floating-button *ngIf=\"meterTreeData\" (clickOn)=\"exportMeter()\" [icon]=\"FileDownloadIcon\"></app-floating-button>\r\n    </div>\r\n    <div class=\"row pl-2 pr-2\" *ngIf=\"tabIndex == 4\"><app-reports></app-reports></div>\r\n    <div class=\"row pl-0 pr-0 h-100\" *ngIf=\"tabIndex == 5\">\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 h-100\">\r\n        <app-print-preview [className]=\"'days8'\"  [targetHtml] = \"'8daysProfile'\" [title]=\"'Electrical Low Tension 8 Days Profile'\"></app-print-preview>\r\n\r\n        <app-profile-chart [buildingId]=\"buildingId\" [serviceType]=\"serviceType.ELECTRICAL\"></app-profile-chart>\r\n      </div>\r\n    </div>\r\n\r\n  <section *ngIf=\"tabIndex == 6\">\r\n    <ums-eui [id]=\"buildingId\" [type]=0></ums-eui>\r\n  </section>\r\n  <section *ngIf=\"tabIndex == 7\"><app-alerts></app-alerts></section>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.html":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.html ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card h-100\" id =\"8daysProfile\">\r\n  <div class=\"card-header p-0\">\r\n    <div class=\"d-none d-xl-block\">\r\n      <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary header-title\">\r\n        Electrical Low Tension > {{buildingName}} >\r\n      </span>\r\n      <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary\">\r\n        <app-combo-box class=\"select-box-dark\" [dataSource]=\"buildings\" (selectedChange)=\"buildingChanged($event)\"></app-combo-box>\r\n      </span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(6)\" [ngClass]=\"{'active': tabIndex == 6}\">EUI</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(3)\" [ngClass]=\"{'active': tabIndex == 3}\">Meter Tree</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(5)\" [ngClass]=\"{'active': tabIndex == 5}\">8-Day Profile</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(2)\" [ngClass]=\"{'active': tabIndex == 2}\">Equipment Breakdown</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\" [ngClass]=\"{'active': tabIndex == 1}\">Equipment Distribution</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\" [ngClass]=\"{'active': tabIndex == 0}\">Overview</span>\r\n    </div>\r\n    <div class=\"form-group row mb-0 row d-xl-none\">\r\n      <label class=\"col-12 col-sm-12 col-lg-6 col-form-label\">Electrical Low Tension</label>\r\n\r\n      <div class=\"col-12 col-sm-12 col-lg-6 pl-2 pr-0 pb-1\">\r\n        <app-combo-box class=\"select-box-dark\" [dataSource]=\"buildings\" (selectedChange)=\"buildingChanged($event)\"></app-combo-box>\r\n        <select (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\" class=\"form-control mt-1 form-control-sm select-box-dark\">\r\n          <option value=\"0\">Overview</option>\r\n          <option value=\"1\">Equipment Distribution</option>\r\n          <option value=\"2\">Equipment Breakdown</option>\r\n          <option value=\"5\">8-Day Profile</option>\r\n          <option value=\"6\">EUI</option>\r\n          <option value=\"3\">Meter Tree</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"card-body  h-100 card-scroll\">\r\n    <!-- tab index 0 -->\r\n    <section *ngIf=\"tabIndex == 0\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 col-lg-6 col-xl-4 p-1\">\r\n          <div class=\"chart-card h-100\">\r\n            <div class=\"chart-card-header\">\r\n                <span>Overall Consumption</span>\r\n                <date-range-picker [disabled] = \"!isDone.overallConsumptioSquareData\" [maxDate]=\"today\" class=\"d-none d-xl-block\" position=\"bottom-right\" (dateRangeChange)=\"dateRangeListner('overall')\" [(dateRange)]=\"overallDateRange\"></date-range-picker>\r\n            </div>\r\n            <div class=\"chart-card-body custom-card-body\">\r\n              <div class=\"row h-100\">\r\n                <!-- <div class=\"col-12 input-date p-0\">\r\n                  <date-range-picker *ngIf=\"_reload\"  [maxDate]=\"today\" class=\"d-xl-none m-3\" (dateRangeChange)=\"dateRangeListner('overall')\" [(dateRange)]=\"overallDateRange\"></date-range-picker>\r\n                </div> -->\r\n\r\n                <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 custom-view-pointer\">\r\n                  <app-chart-loader [isDone] = \"isDone.overallConsumptioTotalData\">\r\n                    <app-data-pointer-none-image [color] = \"this.colorMap.electric.secondary\" [pointerText]=\"overallConsumptioTotalData\" [unit]=\"'kWh'\" type=\"kWh\" [description]=\"'Total Consumption'\" class=\"\"></app-data-pointer-none-image>\r\n                  </app-chart-loader>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 custom-view-pointer\">\r\n                  <app-chart-loader [isDone] = \"isDone.overallConsumptioSquareData\">\r\n                    <app-data-pointer-none-image [color] = \"this.colorMap.electric.secondary\" [description]=\"squareMeterPointerDescription\"\r\n                                      [pointerText]=\"overallConsumptioSquareData\"\r\n                                      [unit]=\"'kWh/m<sup>2</sup>.yr'\"\r\n                                      type=\"kwhm2\"></app-data-pointer-none-image>\r\n                  </app-chart-loader>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-lg-6 col-xl-8 p-1 pt-0\">\r\n          <div class=\"chart-card h-100\" id=\"30MinutConsumption\">\r\n            <div class=\"chart-card-header\">\r\n              <span class=\"header-title\">30 min Consumption</span>\r\n              <div class=\"d-flex align-items-center\">\r\n                <date-range-picker [disabled] = \"!isDone.dailyConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"_maxTodayConsumptionDate\" [minDate] = \"_minTodayConsumptionDate\" (dateRangeChange)=\"onChangeTodayConsumption()\"\r\n                                    [(dateRange)]=\"_todayConsumptionDate\"\r\n                                    [isSingleDate]=\"'true'\"\r\n                                    position=\"bottom-right\"></date-range-picker>\r\n                <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'30MinutConsumption'\" [title]=\"'30 min Consumption'\"></app-print-preview>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"chart-card-body p-3 position-relative\">\r\n              <app-total-comsumption [value] = \"dailyConsumptionData.chart.total\" [unit] = \"'kWh'\" [type] = \"'kWh'\"></app-total-comsumption>\r\n              <app-chart-loader [isDone] = \"isDone.dailyConsumptionData\">\r\n                <app-trend *ngIf=\"dailyConsumptionData\" [dataSource]=\"dailyConsumptionData\"></app-trend>\r\n              </app-chart-loader>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row ow-eq-height\">\r\n        <div class=\"col-md-12 col-lg-6 col-xl-4 p-1\">\r\n          <div class=\"chart-card h-100\" id=\"equipmentdistribution\">\r\n            <div class=\"chart-card-header\">\r\n                <span class=\"header-title\">Equipment Distribution</span>\r\n                <div class=\"d-flex align-items-center\">\r\n                  <date-range-picker [disabled] = \"!isDone.equipDistribution\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\" (dateRangeChange)=\"dateRangeListner('eqDist')\" [(dateRange)]=\"eqDIstDateRange\"></date-range-picker>\r\n                  <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'equipmentdistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"chart-card-body p-3 position-relative\">\r\n              <!-- <date-range-picker [maxDate]=\"today\" class=\"d-xl-none\" (dateRangeChange)=\"dateRangeListner('eqDist')\" [(dateRange)]=\"eqDIstDateRange\"></date-range-picker> -->\r\n              <app-chart-loader [isDone] = \"isDone.equipDistribution\">\r\n                <app-pie *ngIf=\"equipDistribution\" [dataSource]=\"equipDistribution\"></app-pie>\r\n              </app-chart-loader>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-lg-6 col-xl-8 p-1\">\r\n          <div class=\"chart-card h-100\" id=\"consumptionSummary\">\r\n            <div class=\"chart-card-header\">\r\n              <span class=\"header-title\">Consumption Summary</span>\r\n\r\n              <app-toggle-switch [disabled] = \"!isDone.trendLogData\" aria-disabled=\"true\" (onChange)=\"setConsumpType($event)\">\r\n                <span>Select Category :</span>\r\n              </app-toggle-switch>\r\n\r\n              <!-- <app-multiple-select *ngIf=\"multipleConsump\" [selected]=\"selectedTypes\" [options]=\"eqTypes\" (onSelect)=\"setTypesFilter($event)\">\r\n                Category Type\r\n              </app-multiple-select> -->\r\n\r\n              <div role=\"group\" class=\"d-flex align-items-center\" aria-label=\"Trend Log Modes\">\r\n                <div class=\"chart-card-header\" style=\"margin-right: 10px;\">\r\n                  <span style=\"margin-right: 5px;\">From:</span>\r\n                  <date-range-picker [disabled] = \"!isDone.trendLogData\" *ngIf=\"_reload && !_isMonth && !_isYear\"  class=\"\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] = \"_maxDate\"\r\n                                      [(dateRange)]=\"_startDateTrendLog\"\r\n                                      [isSingleDate]=\"'true'\"\r\n                                      position=\"bottom-right\"></date-range-picker>\r\n                  <month-date-pciker [disabled] = \"!isDone.trendLogData\" *ngIf=\"(_reload && _isMonth) || (_reload && _isYear)\" [isYear]=\"_isYear\" [(dateRange)]=\"_startDateTrendLog\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] =\"today\"></month-date-pciker>\r\n                  \r\n                </div>\r\n                <span>Last</span>\r\n                <button [disabled] = \"!isDone.trendLogData\" *ngFor=\"let item of _mapArrayTrendIndex\" class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == item.value}\" (click)=\"setTrendLogData(item.value)\">{{item.label}}</button>\r\n                <app-print-preview [className]=\"'position-gorelative'\"  [targetHtml] = \"'consumptionSummary'\" [title]=\"'Consumption Summary'\"></app-print-preview>\r\n\r\n                <!-- <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 0}\" (click)=\"setTrendLogData(0)\">7D</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 1}\" (click)=\"setTrendLogData(1)\">30D</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 2}\" (click)=\"setTrendLogData(2)\">12M</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 3}\" (click)=\"setTrendLogData(3)\">5Y</button> -->\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"!multipleConsump\" class=\"chart-card-body p-3 position-relative\">\r\n              <app-chart-loader [isDone] = \"isDone.trendLogData\">\r\n                <app-trend *ngIf=\"trendLogData\" [dataSource]=\"trendLogData\"></app-trend>\r\n              </app-chart-loader>\r\n            </div>\r\n\r\n            <div *ngIf=\"multipleConsump\" class=\"chart-card-body p-3\">\r\n              <app-consumption-summery-chart></app-consumption-summery-chart>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"chart-card m-1\" *ngIf=\"tabIndex == 1\">\r\n      <div class=\"chart-card-body p-3 position-relative\">\r\n        <div class=\"eq-breackdown-position\">\r\n          <date-range-picker [disabled] = \"!isDone.equipDistributionLg\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-left\"\r\n              [(dateRange)]=\"eqdistlg\" (dateRangeChange)=\"dateRangeListner('eqdistlg')\">\r\n          </date-range-picker>\r\n        </div>\r\n        <div>\r\n          <app-print-preview [targetHtml] = \"'8daysProfile'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n          <app-chart-loader [isDone] = \"isDone.equipDistributionLg\">\r\n            <app-doughnut2d *ngIf=\"equipDistributionLg\" [fixedWidth]=\"true\" [dataSource]=\"equipDistributionLg\">\r\n            </app-doughnut2d>\r\n          </app-chart-loader>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"tabIndex == 2\">\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 pb-4\">\r\n        \r\n        <app-form-container fieldName=\"Filter Equipment\">\r\n          <app-equipment-breakdown-filter-group serviceType=\"serviceType.ELECTRICAL\"  (onFilter)=\"dataSourceOut($event)\" [eqBreakDownFilter]=\"equipmentBreakdownDateRange\" [dataSource]=\"eqBreakdownFiltered\" (onDateRangeChanged)=\"onEqBreakdownFilter($event)\"></app-equipment-breakdown-filter-group>\r\n        </app-form-container>\r\n      </div>\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n        <app-data-table [isLoading]=\"tableLoading\" [rows]=\"rows\" [columns]=\"columns\"></app-data-table>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row pl-2 pr-2 h-100 \" *ngIf=\"tabIndex == 3\">\r\n      <app-dynamic-date-label [dateRange]=\"meterTreeDateRange\"></app-dynamic-date-label>\r\n      <app-chart-loader [isDone] = \"!meterTreeLoading\">\r\n        <app-meter-tree *ngIf=\"!meterTreeLoading\" type=\"kWh\" mode=\"true\" [dataSource]=\"meterTreeDatas\" class=\"w-100 p-3 h-100\"></app-meter-tree>\r\n      </app-chart-loader>\r\n      <app-floating-button *ngIf=\"meterTreeDatas\" (clickOn)=\"exportMeter()\" [icon]=\"FileDownloadIcon\"></app-floating-button>\r\n    </div>\r\n    <div class=\"row pl-2 pr-2\" *ngIf=\"tabIndex == 4\"><app-reports></app-reports></div>\r\n    <div class=\"row pl-0 pr-0 h-100\" *ngIf=\"tabIndex == 5\">\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 h-100\">\r\n        <app-print-preview [className]=\"'days8'\"  [targetHtml] = \"'8daysProfile'\" [title]=\"'Electrical Low Tension 8 Days Profile'\"></app-print-preview>\r\n\r\n        <app-profile-chart level=\"group\" [buildingId]=\"groupId\" [serviceType]=\"serviceType.ELECTRICAL\"></app-profile-chart>\r\n      </div>\r\n    </div>\r\n\r\n    <section *ngIf=\"tabIndex == 6\">\r\n      <ums-eui [id]=\"groupId\" [type]=1></ums-eui>\r\n    </section>\r\n    <section *ngIf=\"tabIndex == 7\"><app-alerts></app-alerts></section>\r\n  </div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/electrical-report/electrical-report.component.html":
/*!******************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/electrical-report/electrical-report.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card h-100\">\r\n    <div class=\"card-header p-0\">\r\n        <span class=\"d-none d-xl-block  pl-3 pt-3 pb-3 font-secondary\">\r\n            <span>Electrical Report</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n                [ngClass]=\"{'active': tabIndex == 1}\">Schedule</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n                [ngClass]=\"{'active': tabIndex == 0}\">Export</span>\r\n        </span>\r\n        <div class=\"d-xl-none pl-3 pt-3 pb-3 font-secondary\">\r\n            <div class=\"row w-100\">\r\n                <div class=\"col-4\">\r\n                    <select class=\"form-control form-control-sm styled-select-box\"\r\n                        (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\">\r\n                        <option value=\"0\">Export</option>\r\n                        <option value=\"1\">Schedule</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  <div class=\"card-body m-0 p-2\">\r\n    <section *ngIf=\"tabIndex == 0\" class=\"min-height-100\">\r\n        <div class=\"chart-card\" class=\"min-height-100\">\r\n            <div class=\"chart-card-body\" class=\"min-height-100\">\r\n                <app-report-form\r\n                    [serviceType]=\"serviceType.ELECTRICAL\"\r\n                    [isLoading]=\"isLoading\"\r\n                    [buttonText]=\"buttonText\"\r\n                    (initialData)=\"initialData($event)\"\r\n                    (reGenerate)=\"reGenerate($event)\"\r\n                    (download)=\"downloadExcel($event)\">\r\n                </app-report-form>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section *ngIf=\"tabIndex == 1\" class=\"min-height-100 m-2\">\r\n        <div class=\"chart-card\" class=\"min-height-100\">\r\n            <div class=\"chart-card-body\" class=\"min-height-100\">\r\n                <app-schedule-download\r\n                    [serviceType]=\"serviceType.ELECTRICAL\"\r\n                    [isLoading]=\"isSchedulesLoading\"\r\n                    [rows]=\"scheduleData\"\r\n                    (locationType)=\"onChangeLocation($event)\"\r\n                    (insertData)=\"insertData($event)\"\r\n                    (updateData)=\"updateData($event)\"\r\n                    (deleteData)=\"deleteSchedule($event)\">\r\n                </app-schedule-download>\r\n            </div>\r\n        </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/eui/eui.component.html":
/*!**************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/eui/eui.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row pl-2 pr-2\">\r\n<div class=\"col-md-12 col-lg-6 col-sm-12 col-xl-6 pr-1\">\r\n    <h6>Gross Floor Area (GFA) Configurations</h6>\r\n    <div class=\"chart-card mt-1\">\r\n        <div class=\"chart-card-body\">\r\n            <table class=\"table table-dark table-striped mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <td width=\"25%\">Category</td>\r\n                        <td width=\"25%\">Current GFA (m<sup>2</sup>)</td>\r\n                        <td width=\"25%\">New GFA (m<sup>2</sup>)</td>\r\n                        <td width=\"25%\">Action</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Dry</td>\r\n                        <td>{{ dryGfaCurrent }}</td>\r\n                        <td><input type=\"number\" [(ngModel)]=\"dryGfa\" class=\"form-control\" min=\"0\" name=\"gfa_dry\"></td>\r\n                        <td><button (click)=\"updateGfa('gfa_dry')\"\r\n                            class=\"btn btn-success clickable\">Update</button></td>\r\n                    </tr>\r\n                    <!-- <tr>\r\n                        <td>Wet</td>\r\n                        <td>{{ wetGfaCurrent }}</td>\r\n                        <td><input type=\"number\" [(ngModel)]=\"wetGfa\" class=\"form-control\" min=\"0\" name=\"gfa_wet\"></td>\r\n                        <td><button (click)=\"updateGfa('gfa_wet')\"\r\n                            class=\"btn btn-success clickable\">Update</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Other</td>\r\n                        <td>{{ otherGfaCurrent }}</td>\r\n                        <td><input type=\"number\" [(ngModel)]=\"otherGfa\" class=\"form-control\" min=\"0\" name=\"gfa_other\"></td>\r\n                        <td><button (click)=\"updateGfa('gfa_other')\"\r\n                            class=\"btn btn-success clickable\">Update</button></td>\r\n                    </tr> -->\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        <td>{{ totalGfaCurrent }}</td>\r\n                        <td>{{ (dryGfa + wetGfa + otherGfa) }}</td>\r\n                        <td>Difference: {{ getAbs(totalGfaCurrent - (dryGfa + wetGfa + otherGfa)) }}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"4\">\r\n                            Please note that total Gross Floor Area (GFA) for this building/hall is calculated using above values.\r\n                        </td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/heat-balance/heat-balance.component.html":
/*!********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/heat-balance/heat-balance.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\" id =\"heatBalance\">\r\n    <div class=\"card-header p-0\">\r\n        <span class=\"d-none d-xl-block  pl-3 pt-3 pb-3 font-secondary\">\r\n            <span class=\"d-inline-block font-secondary mr-4\">\r\n                Date Range<br>\r\n                <date-range-picker [disabled] = \"!isDone.heatBalanceDataSource\" [maxDate]=\"today\" [maxDateRange]=\"'1month'\" position=\"bottom-left\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateRangedChanged()\">\r\n                </date-range-picker>\r\n            </span>\r\n            <span class=\"d-inline-block font-secondary mr-4\">\r\n                Plant\r\n                <app-combo-box [disable] = \"!isDone.heatBalanceDataSource\" class=\"select-box-dark\" [dataSource]=\"plantList\" [selected]=\"selectedPlant\" [enableAll]=\"false\"\r\n                    (selectedChange)=\"plantChanged($event)\"></app-combo-box>\r\n            </span>\r\n            <span class=\"d-inline-block font-secondary mr-4\">\r\n                yScale\r\n                <app-combo-box [disable] = \"!isDone.heatBalanceDataSource\" class=\"select-box-dark\" [dataSource]=\"scaleList\" [selected]=\"scaleListSelected\" [enableAll]=\"false\"\r\n                  (selectedChange)=\"scaleChanged($event)\"></app-combo-box>\r\n            </span>\r\n\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n                [ngClass]=\"{'active': tabIndex == 1}\">Table</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n                [ngClass]=\"{'active': tabIndex == 0}\">Chart</span>\r\n        </span>\r\n        <div class=\"d-xl-none pl-3 pt-3 pb-3 font-secondary\">\r\n            <div class=\"row w-100\">\r\n                <div class=\"col-8\">\r\n                    <div class=\"mb-2\">\r\n                        Date Range\r\n                        <date-range-picker [disabled] = \"!isDone.heatBalanceDataSource\" [maxDate]=\"today\" [maxDateRange]=\"'1month'\" [disabled]=\"chartLoading\" position=\"bottom-left\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateRangedChanged()\">\r\n                        </date-range-picker>\r\n                    </div>\r\n                    <span class=\"d-inline-block font-secondary mr-4\">\r\n                        Plant\r\n                        <app-combo-box [disable] = \"!isDone.heatBalanceDataSource\" class=\"select-box-dark\" [dataSource]=\"plantList\" [selected]=\"selectedPlant\" [enableAll]=\"false\"\r\n                            (selectedChange)=\"plantChanged($event)\"></app-combo-box>\r\n                    </span>\r\n                    <span class=\"d-inline-block font-secondary mr-4\">\r\n                        yScale\r\n                        <app-combo-box [disable] = \"!isDone.heatBalanceDataSource\" class=\"select-box-dark\" [disable]=\"chartLoading\" [dataSource]=\"scaleList\" [selected]=\"scaleListSelected\" [enableAll]=\"false\"\r\n                          (selectedChange)=\"scaleChanged($event)\"></app-combo-box>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-4 \">\r\n                    <select class=\"form-control form-control-sm select-box-dark\" (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\">\r\n                        <option value=\"0\">Chart</option>\r\n                        <option value=\"1\">Table</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <section *ngIf=\"tabIndex == 0\" style=\"position: relative;\">\r\n        <div class=\"card-body main-card-height card-scroll\">\r\n            <!-- <div *ngIf=\"chartLoading\" class=\"loading-area\">\r\n                <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n            </div> -->\r\n            <div class=\"p-3 ml-2\">\r\n                <app-print-preview *ngIf=\"!chartLoading && heatBalanceDataSource\"  [className]=\"'customp-chiller-efficiency'\" [targetHtml] = \"'heatBalance'\" [title]=\"'Chiller Heat Balance'\"></app-print-preview>\r\n\r\n                <!-- <app-multi-series [height]=\"'80%'\" *ngIf=\"!chartLoading && heatBalanceDataSource\" [fixedWidth]=\"true\" [dataSource]=\"heatBalanceDataSource\"></app-multi-series> -->\r\n                <app-chart-loader [isDone] = \"isDone.heatBalanceDataSource\">\r\n                    <app-zoomline  [height]=\"'85%'\" [fixedWidth]=\"true\" [dataSource]=\"heatBalanceDataSource\"></app-zoomline>\r\n                </app-chart-loader>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section *ngIf=\"tabIndex == 1\">\r\n        <div class=\"card-body main-card-height card-scroll\">\r\n            <div *ngIf=\"chartLoading\" class=\"loading-area\">\r\n                <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n            </div>\r\n            <ngx-datatable *ngIf=\"!chartLoading\" class=\"dark\" [rows]=\"rows\" [sortType]=\"sortType.multi\" [columnMode]=\"columnMode.standard\"\r\n                [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"18\">\r\n                <ngx-datatable-column name=\"Date Time\" [width]=\"(tableWidth | async)\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.dateTime}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Heat &nbsp;Balance &nbsp;(kW)\" [width]=\"(tableWidth | async)\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.heat_balance == null ? 'N/A' : row.heat_balance | number:'1.0-2'}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            </ngx-datatable>\r\n            <div *ngIf=\"!chartLoading && rows.length !=0\" class=\"export-button\">\r\n                <button class=\"btn dark-button\" type=\"button\" (click)=\"exportToExcel()\">Export to Excel</button>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.html":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.html ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card h-100\" id=\"equipmentPiechartDistribution\">\r\n  <div class=\"card-header p-0\">\r\n    <div class=\"d-none d-xl-block\">\r\n      <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary header-title\">Electrical High Tension></span>\r\n      <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary\">\r\n        <app-combo-box class=\"select-box-dark\" [dataSource]=\"siteLoops\" [selected]=\"seletedLoopId\" (selectedChange)=\"loopChanged($event)\"></app-combo-box>\r\n      </span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(2)\" [ngClass]=\"{'active': tabIndex == 2}\">Substation Breakdown</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\" [ngClass]=\"{'active': tabIndex == 1}\">Substation Distribution</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\" [ngClass]=\"{'active': tabIndex == 0}\">Overview</span>\r\n    </div>\r\n    <div class=\"form-group row mb-0 row d-xl-none\">\r\n      <label class=\"col-6 col-sm-6 col-form-label\">Electrical High Tension</label>\r\n      <div class=\"col-6 col-sm-6 pl-0 pr-0\">\r\n        <app-combo-box class=\"select-box-dark\" [dataSource]=\"siteLoops\" [selected]=\"seletedLoopId\" (selectedChange)=\"loopChanged($event)\"></app-combo-box>\r\n        <select (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\" class=\"form-control mt-1 form-control-sm select-box-dark\">\r\n          <option value=\"0\">Overview</option>\r\n          <option value=\"1\">Substation Distribution</option>\r\n          <option value=\"2\">Substation Breakdown</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body  h-100 card-scroll\">\r\n    <section *ngIf=\"tabIndex == 0\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-12 col-lg-6 col-xl-4 p-1\">\r\n              <div class=\"chart-card h-100\">\r\n                  <div class=\"chart-card-header\">\r\n                        <span>Overall Consumption</span>\r\n                        <date-range-picker [disabled] = \"!isDone.overallConsumptioTotalData\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\" (dateRangeChange)=\"dateRangeListner('overall', 0)\" [(dateRange)]=\"overallDateRange\"></date-range-picker>\r\n                  </div>\r\n                  <div class=\"chart-card-body p-0\">\r\n                      <div class=\"row d-flex align-items-center justify-content-center h-100\">\r\n                          <div class=\"col-md-12  h-100 w-100\">\r\n                            <app-chart-loader [isDone] = \"isDone.overallConsumptioTotalData\">\r\n                              <app-data-pointer-none-image [color] = \"this.colorMap.electric.secondary\" [pointerText]=\"overallConsumptioTotalData\" [unit]=\"'kWh'\" type=\"kwh\" [description]=\"'Total Consumption'\"></app-data-pointer-none-image>\r\n                            </app-chart-loader>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-12 col-lg-6 col-xl-8 p-1 pt-0\">\r\n          <div class=\"chart-card h-100\" id=\"30MinutConsumption\">\r\n              <div class=\"chart-card-header\">\r\n                <span class=\"header-title\">30 min Consumption</span>\r\n                <div class=\"d-flex align-items-center\">\r\n                  <date-range-picker [disabled] = \"!isDone.dailyConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"_maxTodayConsumptionDate\" [minDate] = \"_minTodayConsumptionDate\" (dateRangeChange)=\"onChangeTodayConsumption()\"\r\n                                      [(dateRange)]=\"_todayConsumptionDate\"\r\n                                      [isSingleDate]=\"'true'\"\r\n                                      position=\"bottom-right\"></date-range-picker>\r\n                  <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'30MinutConsumption'\" [title]=\"'30 min Consumption'\"></app-print-preview>\r\n                </div>\r\n              </div>\r\n              <div class=\"chart-card-body p-3 position-relative\">\r\n                <app-total-comsumption [value] = \"dailyConsumptionData.chart.total\" [unit] = \"'kWh'\" [type] = \"'kWh'\"></app-total-comsumption>\r\n                <app-chart-loader [isDone] = \"isDone.dailyConsumptionData\">\r\n                  <app-trend *ngIf=\"dailyConsumptionData\" [dataSource]=\"dailyConsumptionData\"></app-trend>\r\n                </app-chart-loader>\r\n              </div>\r\n          </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"row ow-eq-height\">\r\n          <div class=\"col-md-12 col-lg-6 col-xl-4 p-1\">\r\n              <div class=\"chart-card h-100\" id=\"equipmentdistribution\">\r\n                  <div class=\"chart-card-header\">\r\n                    <span class=\"header-title\">Substation Distribution</span>\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <date-range-picker [disabled] = \"!isDone.substationDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\" (dateRangeChange)=\"substationDistributionChanged(0) \" [(dateRange)]=\"substationDistRange\"></date-range-picker>\r\n                      <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'equipmentdistribution'\" [title]=\"'Substation Distribution'\"></app-print-preview>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"chart-card-body p-3 position-relative\">\r\n                    <app-chart-loader [isDone] = \"isDone.substationDistribution\">\r\n                      <app-pie *ngIf=\"substationDistribution\" [dataSource]=\"substationDistribution\"></app-pie>\r\n                    </app-chart-loader>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-md-12 col-lg-6 col-xl-8 p-1\">\r\n            <div class=\"chart-card h-100\" id=\"consumptionSummary\">\r\n                <div class=\"chart-card-header\">\r\n                    <span class=\"header-title\">Consumption Summary</span>\r\n                    <div role=\"group\" class=\"d-flex align-items-center\" aria-label=\"Trend Log Modes\">\r\n                      <div class=\"chart-card-header\" style=\"margin-right: 10px;\">\r\n                        <span style=\"margin-right: 5px;\">From:</span>\r\n                        <date-range-picker [disabled] = \"!isDone.trendLogData\" *ngIf=\"_reload && !_isMonth && !_isYear\"  class=\"\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] = \"_maxDate\"\r\n                                            [(dateRange)]=\"_startDateTrendLog\"\r\n                                            [isSingleDate]=\"'true'\"\r\n                                            position=\"bottom-right\"></date-range-picker>\r\n                        <month-date-pciker *ngIf=\"(_reload && _isMonth) || (_reload && _isYear)\" [isYear]=\"_isYear\" [(dateRange)]=\"_startDateTrendLog\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] =\"today\"></month-date-pciker>\r\n                        \r\n                      </div>\r\n                      <span>Last</span>\r\n                      <button [disabled] = \"!isDone.trendLogData\" *ngFor=\"let item of _mapArrayTrendIndex\" class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == item.value}\" (click)=\"setTrendLogData(item.value)\">{{item.label}}</button>\r\n                      <app-print-preview [className]=\"'position-gorelative'\"  [targetHtml] = \"'consumptionSummary'\" [title]=\"'Consumption Summary'\"></app-print-preview>\r\n\r\n                      <!-- <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 0}\" (click)=\"setTrendLogData(0)\">7D</button>\r\n                      <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 1}\" (click)=\"setTrendLogData(1)\">30D</button>\r\n                      <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 2}\" (click)=\"setTrendLogData(2)\">12M</button>\r\n                      <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 3}\" (click)=\"setTrendLogData(3)\">5Y</button> -->\r\n                    </div>\r\n                </div>\r\n                <div class=\"chart-card-body p-3 position-relative\">\r\n                  <app-chart-loader [isDone] = \"isDone.trendLogData\">\r\n                    <app-trend *ngIf=\"trendLogData\" [dataSource]=\"trendLogData\"></app-trend>\r\n                  </app-chart-loader>\r\n                </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </section>\r\n\r\n<div class=\"chart-card m-1\" *ngIf=\"tabIndex == 1\">\r\n  <div class=\"chart-card-body p-3 position-relative\">\r\n    <div class=\"eq-breackdown-position\">\r\n      <date-range-picker [disabled] = \"!isDone.substationDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-left\"\r\n          [(dateRange)]=\"substationDistRange\" (dateRangeChange)=\"substationDistributionChanged(1)\">\r\n      </date-range-picker>\r\n    </div>\r\n    <div>\r\n      <app-print-preview [targetHtml] = \"'equipmentPiechartDistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n      <app-chart-loader [isDone] = \"isDone.substationDistribution\">\r\n        <app-doughnut2d *ngIf=\"substationDistribution\" [fixedWidth]=\"true\" [dataSource]=\"substationDistribution\">\r\n        </app-doughnut2d>\r\n      </app-chart-loader>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  <div class=\"row p-2 h-100\" *ngIf=\"tabIndex == 2\">\r\n    <div class=\"col-lg-12\">\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n          <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 pb-4\">\r\n            <app-form-container fieldName=\"Filter Substation\">\r\n              <app-ht-equipment-breakdown-filter [(substationId)]=\"breakdownSubstationId\" [(meterId)]=\"breakdownMeterId\" [dataSource]=\"equipBreakdown\" [dateRange]=\"eqBreakDownFilter\" [isSite]=\"false\" (onFilter)=\"onEquipmentBreakdownFiltered($event)\" (onDateRangeChanged)=\"onEqBreakdownDateChange($event)\"></app-ht-equipment-breakdown-filter>\r\n            </app-form-container>\r\n          </div>\r\n          <app-data-table [isLoading]=\"tableLoading\" [rows]=\"rows\" [columns]=\"columns\"></app-data-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.html":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.html ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\" id=\"main-dashboard-ht\">\r\n    <div class=\"card-header p-0\">\r\n        <div class=\"d-none d-xl-block\">\r\n            <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary header-title\">Electrical High Tension</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(2)\"\r\n                [ngClass]=\"{'active': tabIndex == 2}\">Substation Breakdown</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n                [ngClass]=\"{'active': tabIndex == 1}\">Loop Distribution</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n                [ngClass]=\"{'active': tabIndex == 0}\">Overview</span>\r\n        </div>\r\n        <div class=\"form-group row mb-0 row d-xl-none\">\r\n            <label class=\"col-6 col-sm-6 col-form-label\">Electrical High Tension</label>\r\n            <div class=\"col-6 col-sm-6 pl-0 pr-0\">\r\n            <app-combo-box class=\"select-box-dark\"></app-combo-box>\r\n                <select (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\"\r\n                    class=\"form-control mt-1 form-control-sm select-box-dark\">\r\n                    <option value=\"0\">Overview</option>\r\n                    <option value=\"1\">Loop Distribution</option>\r\n                    <option value=\"2\">Substation Breakdown</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-body  card-scroll\">\r\n        <section *ngIf=\"tabIndex == 0\">\r\n            <div class=\"row ow-eq-height\">\r\n                <div class=\"col-md-4 p-1\">\r\n                    <div class=\"chart-card h-100\">\r\n                        <div class=\"chart-card-header\">\r\n                                <span>Overall Consumption</span>\r\n                                <date-range-picker [disabled] = \"!isDone.overollConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\"\r\n                                    [(dateRange)]=\"overollConsumptionRange\"\r\n                                    (dateRangeChange)=\"overollConsumptionChanged()\"></date-range-picker>\r\n                        </div>\r\n                        <div class=\"chart-card-body p-0\">\r\n                            <div class=\"row d-flex align-items-center justify-content-center h-100\">\r\n                                <div class=\"col-md-12 h-100 w-100\">\r\n                                    <app-chart-loader [isDone] = \"isDone.overollConsumptionData\">\r\n                                        <app-data-pointer-none-image [color] = \"this.colorMap.electric.secondary\" [pointerText]=\"overollConsumptionData\" [unit]=\"'kWh'\" type=\"kwh\"\r\n                                            [description]=\"'Total Consumption'\"></app-data-pointer-none-image>\r\n                                    </app-chart-loader>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-8 p-1\">\r\n                    <div class=\"chart-card\" id=\"30MinutConsumption\">\r\n                        <div class=\"chart-card-header\">\r\n                            <span class=\"header-title\">30 min Consumption</span>\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <date-range-picker [disabled] = \"!isDone.dailyConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"_maxTodayConsumptionDate\" [minDate] = \"_minTodayConsumptionDate\" (dateRangeChange)=\"onChangeTodayConsumption()\"\r\n                                                    [(dateRange)]=\"_todayConsumptionDate\"\r\n                                                    [isSingleDate]=\"'true'\"\r\n                                                    position=\"bottom-right\"></date-range-picker>\r\n                                <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'30MinutConsumption'\" [title]=\"'30 min Consumption'\"></app-print-preview>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"chart-card-body p-3 position-relative\">\r\n                            <app-total-comsumption [value] = \"dailyConsumptionData.chart.total\" [unit] = \"'kWh'\" [type] = \"'kWh'\"></app-total-comsumption>\r\n                            <app-chart-loader [isDone] = \"isDone.dailyConsumptionData\">\r\n                                <app-trend *ngIf=\"dailyConsumptionData\" [dataSource]=\"dailyConsumptionData\"></app-trend>\r\n                            </app-chart-loader>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row ow-eq-height\">\r\n                <div class=\"col-md-4 p-1\">\r\n                    <div class=\"chart-card h-100\" id=\"equipmentdistribution\">\r\n                        <div class=\"chart-card-header\">\r\n                            <span class=\"header-title\">Loop Distribution</span>\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <date-range-picker [disabled] = \"!isDone.substationDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\"\r\n                                    [(dateRange)]=\"substationDistRange\"\r\n                                    (dateRangeChange)=\"loopDistributionChanged(0)\"></date-range-picker>\r\n                                <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'equipmentdistribution'\" [title]=\"'Loop Distribution'\"></app-print-preview>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"chart-card-body p-3 pie-chart-min-height position-relative\">\r\n                            <app-chart-loader [isDone] = \"isDone.substationDistribution\">\r\n                                <app-pie *ngIf=\"substationDistribution\" [dataSource]=\"substationDistribution\"></app-pie>\r\n                            </app-chart-loader>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-8 p-1\">\r\n                    <div class=\"chart-card h-100\" id=\"consumptionSummary\">\r\n                        <div class=\"chart-card-header\">\r\n                            <span class=\"header-title\">Consumption Summary</span>\r\n                            <div role=\"group\" class=\"d-flex align-items-center\" aria-label=\"Trend Log Modes\">\r\n                                <div class=\"chart-card-header\" style=\"margin-right: 10px;\">\r\n                                    <span style=\"margin-right: 5px;\">From:</span>\r\n                                    <date-range-picker [disabled] = \"!isDone.trendLogData\" *ngIf=\"_reload && !_isMonth && !_isYear\"  class=\"\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] = \"_maxDate\"\r\n                                                        [(dateRange)]=\"_startDateTrendLog\"\r\n                                                        [isSingleDate]=\"'true'\"\r\n                                                        position=\"bottom-right\"></date-range-picker>\r\n                                    <month-date-pciker [disabled] = \"!isDone.trendLogData\" *ngIf=\"(_reload && _isMonth) || (_reload && _isYear)\" [isYear]=\"_isYear\" [(dateRange)]=\"_startDateTrendLog\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] =\"today\"></month-date-pciker>\r\n                                    \r\n                                </div>\r\n                                <span>Last</span>\r\n                                <button [disabled] = \"!isDone.trendLogData\" *ngFor=\"let item of _mapArrayTrendIndex\" class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == item.value}\" (click)=\"setTrendLogData(item.value)\">{{item.label}}</button>\r\n                                <app-print-preview [className]=\"'position-gorelative'\"  [targetHtml] = \"'consumptionSummary'\" [title]=\"'Consumption Summary'\"></app-print-preview>\r\n\r\n                                <!-- <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 0}\" (click)=\"setTrendLogData(0)\">7D</button>\r\n                                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 1}\" (click)=\"setTrendLogData(1)\">30D</button>\r\n                                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 2}\" (click)=\"setTrendLogData(2)\">12M</button>\r\n                                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 3}\" (click)=\"setTrendLogData(3)\">5Y</button> -->\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"chart-card-body p-3 position-relative\">\r\n                            <app-chart-loader [isDone] = \"isDone.trendLogData\">\r\n                                <app-trend *ngIf=\"trendLogData\" [dataSource]=\"trendLogData\"></app-trend>\r\n                            </app-chart-loader>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <div class=\"chart-card m-1\" *ngIf=\"tabIndex == 1\">\r\n          <div class=\"chart-card-body p-3 position-relative\">\r\n            <div class=\"eq-breackdown-position\">\r\n              <date-range-picker [disabled] = \"!isDone.substationDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-left\"\r\n                  [(dateRange)]=\"substationDistRange\" (dateRangeChange)=\"loopDistributionChanged(1)\">\r\n              </date-range-picker>\r\n            </div>\r\n            <div>\r\n                <app-print-preview [targetHtml] = \"'main-dashboard-ht'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n                <app-chart-loader [isDone] = \"isDone.substationDistribution\">\r\n                    <app-doughnut2d *ngIf=\"substationDistribution\" [fixedWidth]=\"true\" [dataSource]=\"substationDistribution\">\r\n                    </app-doughnut2d>\r\n                </app-chart-loader>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"tabIndex == 2\">\r\n            <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n                <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 pb-4\">\r\n                  <app-form-container fieldName=\"Filter Substation\">\r\n                    <app-ht-equipment-breakdown-filter [(loopId)]=\"breakdownLoopId\" [(substationId)]=\"breakdownSubstationId\" [(meterId)]=\"breakdownMeterId\" [dataSource]=\"equipmentBreakdownData\" [dateRange]=\"eqBreakDownFilter\" [isSite]=\"true\" (onFilter)=\"onEquipmentBreakdownFiltered($event)\" (onDateRangeChanged)=\"onEqBreakdownDateChange($event)\"></app-ht-equipment-breakdown-filter>\r\n                  </app-form-container>\r\n                </div>\r\n                <app-data-table [isLoading]=\"tableLoading\" [rows]=\"rows\" [columns]=\"columns\"></app-data-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/overview/overview.component.html":
/*!************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/overview/overview.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height \">\r\n  <div class=\"card-body h-100 card-scroll\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-lg-4 col-xl-3 pl-1 pr-1 mt-2 \">\r\n        <div class=\"chart-card h-100\" id=\"energyConsumption\">\r\n          <app-print-preview [targetHtml] = \"'energyConsumption'\" [title]=\"'Change In Energy Consumption'\"></app-print-preview>\r\n          <div class=\"chart-card-header header-title\">\r\n            <div>\r\n              Change In Energy Consumption<br>\r\n              <small>Last Two Months</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"chart-card-body position-relative\">\r\n            <app-chart-loader [isDone] = \"isDone.elecChangeInConsumption\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-8 col-md-8 col-lg-8 col-xl-8 pt-4 pb-4 pl-4\">\r\n                  <app-trend3d *ngIf=\"elecChangeInConsumption\" [dataSource]=\"elecChangeInConsumption\"></app-trend3d>\r\n                </div>\r\n                <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4 pt-4 pb-4 pl-0\">\r\n                  <app-indicator *ngIf=\"elecChangeInConsumption\" [newValue]=\"elecNewValue\"\r\n                                 [oldValue]=\"elecOldValue\"\r\n                                 [unit]=\"'kWh'\"></app-indicator>\r\n                </div>\r\n              </div>\r\n            </app-chart-loader>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12 col-lg-4 col-xl-3 pl-1 pr-1 mt-2\">\r\n        <div class=\"chart-card h-100\" id=\"waterConsumption\">\r\n          <app-print-preview [targetHtml] = \"'waterConsumption'\" [title]=\"'Change In Water Consumption'\"></app-print-preview>\r\n          <div class=\"chart-card-header header-title\">\r\n            <div>\r\n              Change In Water Consumption<br>\r\n              <small>Last Two Months</small>\r\n            </div>\r\n            \r\n          </div>\r\n          <div class=\"chart-card-body position-relative\">\r\n            <app-chart-loader [isDone] = \"isDone.waterChangeInConsumption\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-8 col-md-8 col-lg-8 col-xl-8 pt-4 pb-4 \">\r\n                  <app-trend3d *ngIf=\"waterChangeInConsumption\" [dataSource]=\"waterChangeInConsumption\"></app-trend3d>\r\n                </div>\r\n                <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4 pt-4 pb-4 pl-0\">\r\n                  <app-indicator *ngIf=\"waterChangeInConsumption\" [newValue]=\"waterNewValue\"\r\n                                 [oldValue]=\"waterOldValue\"\r\n                                 [unit]=\"'m³'\"></app-indicator>\r\n                </div>\r\n              </div>\r\n            </app-chart-loader>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12 col-lg-4 col-xl-3 pl-1 pr-1 mt-2\">\r\n        <div class=\"chart-card h-100\" id=\"coolingConsumption\">\r\n          <app-print-preview [targetHtml] = \"'coolingConsumption'\" [title]=\"'Change In Cooling Load'\"></app-print-preview>\r\n          <div class=\"chart-card-header header-title\">\r\n            <div>\r\n              Change In Cooling Load<br>\r\n              <small>Last Two Months</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"chart-card-body position-relative\">\r\n            <app-chart-loader [isDone] = \"isDone.coolingChangeInConsumption\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-8 col-md-8 col-lg-8 col-xl-8 pt-4 pb-4 \">\r\n                  <app-trend3d *ngIf=\"coolingChangeInConsumption\" [dataSource]=\"coolingChangeInConsumption\"></app-trend3d>\r\n                </div>\r\n                <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4 pt-4 pb-4 pl-0\">\r\n                  <app-indicator *ngIf=\"coolingChangeInConsumption\" [newValue]=\"coolingNewValue\"\r\n                                 [oldValue]=\"coolingOldValue\"\r\n                                 [unit]=\"'RTh'\"></app-indicator>\r\n                </div>\r\n              </div>\r\n            </app-chart-loader>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-lg-4 col-xl-3 pl-1 pr-1 mt-2 d-none d-xl-block \">\r\n        <div class=\"chart-card h-100\">\r\n          <div class=\"chart-card-header\">\r\n            <div>\r\n              This Month Consumption<br>\r\n              <small>From {{ thisMonthConsumption.start | date:\"yyyy-MM-dd\" }} to {{ thisMonthConsumption.end.toString() | date:\"yyyy-MM-dd\" }}</small>\r\n            </div>\r\n          </div>\r\n          <div class=\"monthly-consumption customs-consuption\">\r\n            <div class=\"field position-relative\">\r\n              <div>\r\n                <div class=\"title\">Energy Consumption</div>\r\n                <app-chart-loader [isDone] = \"isDone.realTimeConsumptionElec\">\r\n                  <div class=\"value\" [style.color]=\"this.colorMap.electric.secondary\">\r\n                    {{ realTimeConsumptionElec }}{{suffix.elec}} {{ realTimeConsumptionElecUnit }}\r\n                  </div>\r\n                </app-chart-loader>\r\n              </div>\r\n              <div>\r\n                <img width=\"50px\" src=\"./assets/img/overview/electrical.png\" alt=\"\">\r\n              </div>\r\n            </div>\r\n            <div class=\"field position-relative\">\r\n              <div>\r\n                <div class=\"title\">Water Consumption</div>\r\n                <app-chart-loader [isDone] = \"isDone.realTimeConsumptionWater\">\r\n                  <div class=\"value\" [style.color]=\"this.colorMap.water.secondary\">\r\n                    {{ realTimeConsumptionWater}}{{suffix.water}} {{ realTimeConsumptionWaterUnit }}\r\n                  </div>\r\n                </app-chart-loader>\r\n              </div>\r\n              <div>\r\n                <img height=\"58px\" src=\"./assets/img/overview/water.png\" alt=\"\">\r\n              </div>\r\n            </div>\r\n            <div class=\"field position-relative\">\r\n              <div>\r\n                <div class=\"title\">Cooling Load</div>\r\n                <app-chart-loader [isDone] = \"isDone.realTimeConsumptionCoolingLoad\">\r\n                  <div class=\"value\" [style.color]=\"this.colorMap.cooling.secondary\">\r\n                    {{ realTimeConsumptionCoolingLoad }}{{suffix.cooling}} {{ realTimeConsumptionCoolingLoadUnit }}\r\n                  </div>\r\n                </app-chart-loader>\r\n              </div>\r\n              <div>\r\n                <img width=\"54px\" src=\"./assets/img/overview/coolingLoad.png\" alt=\"\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row d-xl-none\">\r\n      <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 pl-1 pr-1 mt-2\">\r\n        <div class=\"chart-card h-100\">\r\n          <div class=\"chart-card-header\">This Month Consumption |\r\n              <small>From {{ thisMonthConsumption.start | date:\"yyyy-MM-dd\" }}\r\n            to {{ thisMonthConsumption.end.toString() | date:\"yyyy-MM-dd\" }}</small></div>\r\n          <div class=\"chart-card-body p-3\">\r\n            <div class=\"row\">\r\n              <div class=\"topic col-sm-4 col-md-4 col-lg-4 col-xl-4 my-auto text-center column-seperator\">\r\n                <p class=\"mb-2\">Energy Consumption</p>\r\n                <app-chart-loader [isDone] = \"isDone.realTimeConsumptionElec\">\r\n                  <span class=\"text-elec\" [style.color]=\"this.colorMap.electric.secondary\">{{ realTimeConsumptionElec }}{{suffix.elec}}\r\n                  <span class=\"unit-size\" [style.color]=\"this.colorMap.electric.secondary\">{{ realTimeConsumptionElecUnit }} <br></span></span>\r\n                </app-chart-loader>\r\n\r\n              </div>\r\n              <div class=\"topic col-sm-4 col-md-4 col-lg-4 text-center col-xl-4 my-auto\">\r\n                <p class=\"mb-2\">Water Consumption</p>\r\n                <app-chart-loader [isDone] = \"isDone.realTimeConsumptionWater\">\r\n                  <span class=\"text-water\" [style.color]=\"this.colorMap.water.secondary\">{{ realTimeConsumptionWater }}{{suffix.water}}\r\n                  <span class=\"unit-size\" [style.color]=\"this.colorMap.water.secondary\">{{realTimeConsumptionWaterUnit}}</span></span>\r\n                </app-chart-loader>\r\n              </div>\r\n\r\n              <div class=\"topic col-sm-4 col-md-4 col-lg-4 text-center col-xl-4 my-auto\">\r\n                <p class=\"mb-2\">Cooling Load</p>\r\n                <app-chart-loader [isDone] = \"isDone.realTimeConsumptionCoolingLoad\">\r\n                  <span class=\"text-cooling\" [style.color]=\"this.colorMap.cooling.secondary\">{{ realTimeConsumptionCoolingLoad }}{{suffix.cooling}} \r\n                  <span class=\"unit-size\" [style.color]=\"this.colorMap.cooling.secondary\">{{realTimeConsumptionCoolingLoadUnit}}</span></span>\r\n                </app-chart-loader>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row \">\r\n      <div class=\"col-md-12 col-lg-6 pl-1 pr-1 mt-2\" >\r\n        <div class=\"chart-card h-100\" id=\"summary\">\r\n          <div class=\"chart-card-header\">\r\n            <div class=\"header-title\">{{serviceTypeChangeSummary?\"Water\":\"Electrical Energy / Cooling Load\"}} Summary - Last 6 Months</div>\r\n            <div class=\"d-flex align-items-center\">\r\n              <app-toggle-switch [disabled] =\"!isDone.consumptionSummary\" aria-disabled=\"true\" (onChange)=\"onSixMonthChartToggle($event)\">{{serviceTypeChangeSummary?\"Water\":\"Electrical Energy/Cooling Load\"}}</app-toggle-switch>\r\n              <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'summary'\" [title]=\"'Change In Cooling Load'\"></app-print-preview>\r\n            </div>\r\n          </div>\r\n          <div class=\"chart-card-body position-relative\">\r\n            <div class=\"row h-100\">\r\n              <div class=\"col-md-12 col-lg-12 col-xl-12 p-4\">\r\n                <!-- TODO: replaced stack chart with column3d chart -->\r\n                <!-- <app-stackedcolumn3dline *ngIf=\"elecCategoryOverview\" [dataSource]=\"elecCategoryOverview\"></app-stackedcolumn3dline> -->\r\n                <!-- <app-trend3d [dataSource]=\"mainIncomerConsumption\"></app-trend3d> -->\r\n                <app-chart-loader [isDone] = \"isDone.consumptionSummary\">\r\n                  <app-stackedcolumn3dline *ngIf=\"serviceTypeChangeSummary\" [dataSource]=\"consumptionSummary\"></app-stackedcolumn3dline>\r\n                  <app-mscolumn3dlinedy *ngIf=\"!serviceTypeChangeSummary\" [dataSource]=\"consumptionSummary\"></app-mscolumn3dlinedy>\r\n                </app-chart-loader>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-lg-6 pl-1 pr-1 mt-2\">\r\n        <div class=\"chart-card h-100 customs-activity-consumption\">\r\n          <div class=\"chart-card-header\">\r\n            <span>This Year Consumption - {{ today.getFullYear() }}</span>\r\n            <small>From {{ thisYearConsumption.start | date:\"yyyy-MM-dd\" }} to {{ thisYearConsumption.end.toString() | date:\"yyyy-MM-dd\" }}</small>\r\n          </div>\r\n          <div class=\"chart-card-body position-relative\">\r\n            <div class=\"row h-100 p-1 pb-2 content-item\">\r\n              <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 p-1\">\r\n                <app-data-pointer [isDone] = \"thisYearConsumptionElec\" [color] = \"this.colorMap.electric.secondary\" [image] = \"'./assets/img/overview/electrical.png'\" [description]=\"'Total Energy Consumption'\" [pointerText]=\"thisYearConsumptionElec\" [unit]=\"'kWh'\"\r\n                                  type=\"kwh\"></app-data-pointer>\r\n              </div>\r\n              <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 p-1\">\r\n                <app-data-pointer [isDone] = \"thisYearConsumptionFootPrint\" [color] = \"this.colorMap.carboon.secondary\" [image] = \"'./assets/img/overview/carbon_footprint.png'\" [pointerText]=\"thisYearConsumptionFootPrint\" type=\"kgco2\" [unit]=\"'kgCO<sub>2</sub>'\" [description]=\"'Total Carbon Footprint'\"></app-data-pointer>\r\n              </div>\r\n              <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 p-1\">\r\n                <app-data-pointer [isDone] = \"thisYearConsumptionWater\" [color] = \"this.colorMap.water.secondary\" [image] = \"'./assets/img/overview/water.png'\"  [description]=\"'Total Water Consumption'\"\r\n                                  [pointerText]=\"thisYearConsumptionWater\" [unit]=\"'m<sup>3</sup>'\"\r\n                                  type=\"m3\"></app-data-pointer>\r\n              </div>\r\n\r\n              <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 p-1\">\r\n                <app-data-pointer [isDone] = \"thisYearConsumptionCooling\" [color] = \"this.colorMap.cooling.secondary\" [image] = \"'./assets/img/overview/coolingLoad.png'\" [pointerText]=\"thisYearConsumptionCooling\" type=\"rth\" [unit]=\"'RTh'\" [description]=\"'Total Cooling Load'\"></app-data-pointer>\r\n              </div>\r\n\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/power-meter/power-meter.component.html":
/*!******************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/power-meter/power-meter.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\">\r\n  <div class=\"card-body overflow-auto col-lg-12\">\r\n <div class=\"row\">\r\n    <div class=\"col-md col-lg col-xl pl-1 pr-1 mt-2 \">\r\n      <fieldset>\r\n        <legend>Filtration</legend>\r\n        <div class=\"row\">\r\n          <div class=\"form-group\">\r\n            <label for=\"reportType\">Report Type</label><br>\r\n            <input class=\"form-check-input d-inline-block ml-0\" type=\"radio\" name=\"reportType\" (change)='setReportType(0)' id=\"reportType\" value=\"daily\" \r\n            [checked]=\"reportType == 0 ? true : false\">\r\n            <label class=\"form-check-label d-inline-block ml-4\" for=\"reportType\">\r\n              Daily\r\n            </label>\r\n            <input class=\"form-check-input d-inline-block ml-5\" type=\"radio\" name=\"reportType\" (change)='setReportType(1)' id=\"reportType\" value=\"monthly\" \r\n            [checked]=\"reportType == 1 ? true : false\">\r\n            <label class=\"form-check-label d-inline-block\" for=\"reportType\" style=\"margin-left: 72px;\">\r\n              Monthly\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"reportType == 0 || reportType == 1\">\r\n          <div class=\"form-group col-md-3 pl-0\" *ngIf=\"reportType == 0\">\r\n            <label>Month</label>\r\n            <select class=\"form-control\">\r\n              <option>January</option>\r\n              <option>February</option>\r\n              <option>March</option>\r\n              <option>April</option>\r\n              <option>May</option>\r\n              <option>June</option>\r\n              <option selected>July</option>\r\n              <option>August</option>\r\n              <option>September</option>\r\n              <option>October</option>\r\n              <option>November</option>\r\n              <option>December</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group col-md-3 pl-0\">\r\n            <label>Year</label>\r\n            <select class=\"form-control\">\r\n              <option>2016</option>\r\n              <option>2017</option>\r\n              <option>2018</option>\r\n              <option>2019</option>\r\n              <option>2020</option>\r\n              <option selected>2021</option>\r\n              <option>2022</option>\r\n              <option>2023</option>\r\n              <option>2024</option>\r\n              <option>2025</option>\r\n              <option>2026</option>\r\n              <option>2027</option>\r\n              <option>2028</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3 pl-0\">\r\n            <div class=\"form-group\">\r\n              <label for=\"reportType\">Service Type</label><br>\r\n              <input class=\"form-check-input d-inline-block ml-0\" type=\"radio\" name=\"serviceType\" (change)='setServiceType(0)' value=\"electrical\" \r\n              [checked]=\"reportType == 0 ? true : false\">\r\n              <label class=\"form-check-label d-inline-block ml-4\" for=\"reportType\">\r\n                Electrical\r\n              </label>\r\n              <input class=\"form-check-input d-inline-block ml-5\" type=\"radio\" name=\"serviceType\" (change)='setServiceType(1)' value=\"water\" \r\n              [checked]=\"reportType == 1 ? true : false\">\r\n              <label class=\"form-check-label d-inline-block\" for=\"reportType\" style=\"margin-left: 72px;\">\r\n                Water\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3 pl-0\">\r\n            <div class=\"form-group\">\r\n              <label for=\"reportType\">Building</label><br>\r\n              <select class=\"form-control\">\r\n                <option>N2.1</option>\r\n                <option>N3</option>\r\n                <option>N3.1</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3 pl-0\">\r\n            <div class=\"form-group\">\r\n              <label for=\"reportType\">Floor</label><br>\r\n              <select class=\"form-control\">\r\n                <option>All</option>\r\n                <option>Level 1</option>\r\n                <option>Level 2</option>\r\n                <option>Level 3</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3 pl-0\">\r\n            <div class=\"form-group\">\r\n              <label for=\"reportType\">Equipment Type</label><br>\r\n              <select class=\"form-control\">\r\n                <option>All</option>\r\n                <option>ACMV</option>\r\n                <option>Ligthing</option>\r\n                <option>Receptacle</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <button type=\"button\" class=\"btn btn-primary float-right\">Show Equipment</button>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 pl-0 pr-0\">\r\n      <fieldset>\r\n        <legend>Equipment</legend>\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let meter of meters; let i = index;\" class=\"col-md-2\">\r\n            <input type=\"checkbox\" [checked]='isChecked(i)'>\r\n            <label class=\"meter-check\">{{ meter }}</label><br>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <button type=\"button\" class=\"btn btn-primary float-right\">View Summary</button>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 pl-0 pr-0\">\r\n      <fieldset>\r\n        <legend>Consumption Summary</legend>\r\n        <div class=\"row\" *ngIf=\"reportType == 0 ? true : false\">\r\n          <div class=\"col-md-12\">\r\n          <fusioncharts\r\n            width=\"100%\"\r\n            type=\"mscolumn2d\"\r\n            dataFormat=\"JSON\"\r\n            [dataSource]=\"meterDailySource\">\r\n        </fusioncharts>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"reportType == 1 ? true : false\">\r\n        <div class=\"col-md-12\">\r\n        <fusioncharts\r\n          width=\"100%\"\r\n          type=\"mscolumn2d\"\r\n          dataFormat=\"JSON\"\r\n          [dataSource]=\"meterMonthlySource\">\r\n      </fusioncharts> \r\n      </div>\r\n    </div>\r\n        <div class=\"row mt-10\" *ngIf=\"reportType == 0 ? true : false\">\r\n          <div class=\"col-md-12\">\r\n            <a type=\"button\" class=\"btn btn-primary float-right text-colour-white\" href=\"../../../assets/data/demo/Daily.xlsx\" download=\"Daily.xlsx\">Export Report</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-10\" *ngIf=\"reportType == 1 ? true : false\">\r\n          <div class=\"col-md-12\">\r\n            <a type=\"button\" class=\"btn btn-primary float-right text-colour-white\" href=\"../../../assets/data/demo/Monthly.xlsx\" download=\"Monthly.xlsx\">Export Report</a>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/reports-dashboard/reports-dashboard.component.html":
/*!******************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/reports-dashboard/reports-dashboard.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>reports works!</p>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.html":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.html ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\">\r\n<div class=\"card-header p-0\">\r\n  <div class=\"d-none d-xl-block\">\r\n    <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary\">Electrical Low Tension</span>\r\n    <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\" [ngClass]=\"{'active': tabIndex == 1}\">Equipment Breakdown</span>\r\n    <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\" [ngClass]=\"{'active': tabIndex == 0}\">Overview</span>\r\n  </div>\r\n\r\n  <div class=\"form-group row mb-0 row d-xl-none\">\r\n    <label class=\"col-6 col-sm-6 col-form-label\">Electrical Dashboard</label>\r\n    <div class=\"col-6 col-sm-6 pl-0 pr-0\">\r\n      <select (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\" class=\"form-control mt-1 form-control-sm select-box-dark\">\r\n        <option value=\"0\">Overview</option>\r\n        <option value=\"1\">Equipment Breakdown</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"card-body  card-scroll\">\r\n\r\n    <!-- tab index 0 -->\r\n    <section *ngIf=\"tabIndex == 0\">\r\n    <div class=\"row ow-eq-height\">\r\n        <div class=\"col-md-4 p-1\">\r\n          <div class=\"chart-card h-100\">\r\n              <div class=\"chart-card-header card-header-max-height\">\r\n                <!-- <div class=\"d-flex justify-content-between\"> -->\r\n                  <span>Overall Consumption</span>\r\n                  <date-range-picker [disabled]=\"!isDone.overollConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\" [(dateRange)]=\"overollConsumptionRange\" (dateRangeChange)=\"overallConsumptionChanged()\"></date-range-picker>\r\n                <!-- </div> -->\r\n              </div>\r\n              <div class=\"chart-card-body p-0\">\r\n              <div class=\"row d-flex align-items-center justify-content-center h-100\">\r\n                  <div class=\"col-md-12  h-100 w-100\">\r\n                    <!-- <div class=\"col-12 input-date p-0 d-xl-none\">\r\n                      <date-range-picker *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-xl-none\" position=\"bottom-right\" [(dateRange)]=\"overollConsumptionRange\" (dateRangeChange)=\"overallConsumptionChanged()\"></date-range-picker>\r\n                    </div> -->\r\n                    <app-chart-loader [isDone] = \"isDone.overollConsumptionData\">\r\n                      <app-data-pointer-none-image [color] = \"this.colorMap.electric.secondary\" [pointerText]=\"overollConsumptionData\" [unit]=\"'kWh'\" type=\"kwh\" [description]=\"'Total Consumption'\"></app-data-pointer-none-image>\r\n                    </app-chart-loader>\r\n                    \r\n                  </div>\r\n              </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-8 p-1\">\r\n          <div class=\"chart-card h-100\" id=\"30MinutConsumption\">\r\n              <div class=\"chart-card-header\">\r\n                <span class=\"header-title\">30 min Consumption</span>\r\n                <div class=\"d-flex align-items-center\">\r\n                  <date-range-picker [disabled] = \"!isDone.dailyConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"_maxTodayConsumptionDate\" [minDate] = \"_minTodayConsumptionDate\" (dateRangeChange)=\"onChangeTodayConsumption()\"\r\n                                    [(dateRange)]=\"_todayConsumptionDate\"\r\n                                    [isSingleDate]=\"'true'\"\r\n                                    position=\"bottom-right\"></date-range-picker>\r\n                \r\n                  <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'30MinutConsumption'\" [title]=\"'30 min Consumption'\"></app-print-preview>\r\n                </div>\r\n              </div>\r\n              <div class=\"chart-card-body p-3\">\r\n                <app-total-comsumption [value] = \"dailyConsumptionData.chart.total\" [unit] = \"'kWh'\" [type] = \"'kWh'\"></app-total-comsumption>\r\n                <app-chart-loader [isDone] = \"isDone.dailyConsumptionData\">\r\n                  <app-trend *ngIf=\"dailyConsumptionData\" [dataSource]=\"dailyConsumptionData\"></app-trend>\r\n                </app-chart-loader>\r\n              </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row ow-eq-height\">\r\n        <div class=\"col-md-4 p-1\">\r\n          <div class=\"chart-card h-100\" id=\"equipmentdistribution\">\r\n              <div class=\"chart-card-header card-header-max-height\">\r\n                <!-- <div class=\"d-flex justify-content-between\"> -->\r\n                  <span class=\"header-title\">Equipment Distribution</span>\r\n                  <!-- </div> -->\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <date-range-picker [disabled] = \"!isDone.equipDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\" d-block\" position=\"bottom-right\" [(dateRange)]=\"equipmentDistRange\" (dateRangeChange)=\"equiDistributionChanged()\"></date-range-picker>\r\n                    <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'equipmentdistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n                  </div>\r\n              </div>\r\n              <div class=\"chart-card-body p-3 pie-chart-min-height\">\r\n                <!-- <date-range-picker *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-xl-none\" position=\"bottom-right\" [(dateRange)]=\"equipmentDistRange\" (dateRangeChange)=\"equiDistributionChanged()\"></date-range-picker> -->\r\n                <app-chart-loader [isDone] = \"isDone.equipDistribution\">\r\n                  <app-pie *ngIf=\"equipDistribution\" [dataSource]=\"equipDistribution\"></app-pie>\r\n                </app-chart-loader>\r\n                \r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-8 p-1\">\r\n        <div class=\"chart-card h-100\" id=\"consumptionSummary\">\r\n            <div class=\"chart-card-header\">\r\n              <span class=\"header-title\">Consumption Summary</span>\r\n              <div role=\"group\" class=\"d-flex align-items-center\" aria-label=\"Trend Log Modes\">\r\n                  <div class=\"chart-card-header\" style=\"margin-right: 10px;\">\r\n                    <span style=\"margin-right: 5px;\">From:</span>\r\n                    <date-range-picker [disabled]=\"!isDone.trendLogData\" *ngIf=\"_reload && !_isYear &&  !_isMonth\"  class=\"\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] = \"_maxDate\"\r\n                                        [(dateRange)]=\"_startDateTrendLog\"\r\n                                        [isSingleDate]=\"'true'\"\r\n                                        position=\"bottom-right\"></date-range-picker>\r\n                    <month-date-pciker *ngIf=\"(_reload && _isMonth) || (_reload && _isYear)\" [isYear]=\"_isYear\" [(dateRange)]=\"_startDateTrendLog\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] =\"today\"></month-date-pciker>\r\n                  </div>\r\n                  <span>Last</span>\r\n                  <button [disabled]=\"!isDone.trendLogData\" *ngFor=\"let item of _mapArrayTrendIndex\" class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == item.value}\" (click)=\"setTrendLogData(item.value)\">{{item.label}}</button>\r\n                  <app-print-preview [className]=\"'position-gorelative'\"  [targetHtml] = \"'consumptionSummary'\" [title]=\"'Consumption Summary'\"></app-print-preview>\r\n                  <!-- <div>\r\n                  </div> -->\r\n                  <!-- <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 0}\" (click)=\"setTrendLogData(0)\">7D</button>\r\n                  <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 1}\" (click)=\"setTrendLogData(1)\">30D</button>\r\n                  <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 2}\" (click)=\"setTrendLogData(2)\">12M</button>\r\n                  <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 3}\" (click)=\"setTrendLogData(3)\">5Y</button> -->\r\n              </div>\r\n            </div>\r\n            <div class=\"chart-card-body p-3\">\r\n              <app-chart-loader [isDone] = \"isDone.trendLogData\">\r\n                <app-trend *ngIf=\"trendLogData\" [dataSource]=\"trendLogData\"></app-trend>\r\n              </app-chart-loader>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </section>\r\n    <div class=\"row\" *ngIf=\"tabIndex == 1\">\r\n        <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n            <app-dynamic-date-label class=\"m-2\" [dateRange]=\"equipmentBreakdownDateRange\"></app-dynamic-date-label>\r\n            <app-data-table [isLoading]=\"tableLoading\" [rows]=\"rows\" [columns]=\"columns\"></app-data-table>\r\n      </div>\r\n    </div>\r\n    <div class=\"row pl-2 pr-2\" *ngIf=\"tabIndex == 2\">equipment-breakdown works!</div>\r\n    <div class=\"row pl-2 pr-2\" *ngIf=\"tabIndex == 4\"><app-reports></app-reports></div>\r\n</div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/site-water-dashboard/site-water-dashboard.component.html":
/*!************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/site-water-dashboard/site-water-dashboard.component.html ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card  main-card-height\">\r\n        <div class=\"card-header p-0\">\r\n          <div class=\"d-none d-xl-block\">\r\n            <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary\">Water</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\" [ngClass]=\"{'active': tabIndex == 1}\">Equipment Breakdown</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\" [ngClass]=\"{'active': tabIndex == 0}\">Overview</span>\r\n          </div>\r\n          <div class=\"form-group row mb-0 row d-xl-none\">\r\n            <label class=\"col-6 col-sm-6 col-form-label\">Water Dashboard</label>\r\n            <div class=\"col-6 col-sm-6 pl-0 pr-0\">\r\n              <select (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\" class=\"form-control mt-1 form-control-sm select-box-dark\">\r\n                <option value=\"0\">Overview</option>\r\n                <option value=\"1\">Equipment Breakdown</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-body h-100 card-scroll\">\r\n\r\n            <!-- tab index 0 -->\r\n            <section *ngIf=\"tabIndex == 0\">\r\n            <div class=\"row ow-eq-height\">\r\n                <div class=\"col-md-4 p-1\">\r\n                <div class=\"chart-card h-100\">\r\n                    <div class=\"chart-card-header\">\r\n                        <span> Overall Consumption</span>\r\n                        <date-range-picker [disabled] = \"!isDone.overollConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-none d-xl-block\" position=\"bottom-right\" [(dateRange)]=\"overollConsumptionRange\" (dateRangeChange)=\"overollConsuptionChanged()\"></date-range-picker>\r\n                    </div>\r\n                    <div class=\"chart-card-body p-0\">\r\n                    <div class=\"row d-flex align-items-center justify-content-center h-100\">\r\n                        <div class=\"col-md-12 h-100 w-100\">\r\n                          <app-chart-loader [isDone] = \"isDone.overollConsumptionData\">\r\n                            <app-data-pointer-none-image [color] = \"this.colorMap.water.secondary\" class=\"d-xl-none\" [description]=\"'Total Consumption'\" [pointerText]=\"overollConsumptionData\"\r\n                                              [unit]=\"'m<sup>3</sup>'\" class=\"\" type=\"m³\"></app-data-pointer-none-image>\r\n                          </app-chart-loader>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div class=\"col-md-8 p-1\">\r\n                <div class=\"chart-card h-100\" id=\"30MinutConsumption\">\r\n                    <div class=\"chart-card-header\">\r\n                      <span class=\"header-title\">30 min Consumption</span>\r\n                      <div class=\"d-flex align-items-center\">\r\n                        <date-range-picker [disabled] = \"!isDone.dailyConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"_maxTodayConsumptionDate\" [minDate] = \"_minTodayConsumptionDate\" class=\"d-none d-xl-block\" (dateRangeChange)=\"onChangeTodayConsumption()\"\r\n                                            [(dateRange)]=\"_todayConsumptionDate\"\r\n                                            [isSingleDate]=\"'true'\"\r\n                                            position=\"bottom-right\"></date-range-picker>\r\n                          \r\n                        <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'30MinutConsumption'\" [title]=\"'30 min Consumption'\"></app-print-preview>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"chart-card-body p-3\">\r\n                      <app-total-comsumption [value] = \"dailyConsumptionData.chart.total\" [unit] = \"'m<sup>3</sup>'\" [type] = \"'m3'\"></app-total-comsumption>\r\n                      <app-chart-loader [isDone] = \"isDone.dailyConsumptionData\">\r\n                        <app-trend *ngIf=\"dailyConsumptionData\" [dataSource]=\"dailyConsumptionData\"></app-trend>\r\n                      </app-chart-loader>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row ow-eq-height\">\r\n                <div class=\"col-md-4 p-1\">\r\n                <div class=\"chart-card h-100\" id=\"equipmentdistribution\">\r\n                    <div class=\"chart-card-header\">\r\n                        <span class=\"header-title\">Equipment Distribution</span>\r\n                        <div class=\"d-flex align-items-center\">\r\n                          <date-range-picker [disabled] = \"!isDone.equipDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" (dateRangeChange)=\"equiDistributionChanged()\"\r\n                                             [(dateRange)]=\"equipmentDistRange\"\r\n                                             position=\"bottom-right\"></date-range-picker>\r\n                          \r\n                          <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'equipmentdistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"chart-card-body p-3 pie-chart-min-height\">\r\n                      <app-chart-loader [isDone] = \"isDone.equipDistribution\">\r\n                        <app-pie *ngIf=\"equipDistribution\" [dataSource]=\"equipDistribution\"></app-pie>\r\n                      </app-chart-loader>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div class=\"col-md-8 p-1\">\r\n                <div class=\"chart-card h-100\" id=\"consumptionSummary\">\r\n                    <div class=\"chart-card-header\">\r\n                      <span class=\"header-title\">Consumption Summary</span>\r\n                      <div role=\"group\" class=\"d-flex align-items-center\" aria-label=\"Trend Log Modes\">\r\n                        \r\n                        <div class=\"chart-card-header\" style=\"margin-right: 10px;\">\r\n                          <span style=\"margin-right: 5px;\">From:</span>\r\n                          <date-range-picker [disabled] = \"!isDone.trendLogData\" *ngIf=\"_reload && !_isYear && !_isMonth\"  class=\"\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] = \"_maxDate\"\r\n                                              [(dateRange)]=\"_startDateTrendLog\"\r\n                                              [isSingleDate]=\"'true'\"\r\n                                              position=\"bottom-right\"></date-range-picker>\r\n                          <month-date-pciker [disabled] = \"!isDone.trendLogData\" *ngIf=\"(_reload && _isMonth) || (_reload && _isYear)\" [isYear]=\"_isYear\" [(dateRange)]=\"_startDateTrendLog\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] =\"today\" ></month-date-pciker>\r\n                        </div>\r\n                        <span>Last</span>\r\n                        <button [disabled] = \"!isDone.trendLogData\" *ngFor=\"let item of _mapArrayTrendIndex\" class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == item.value}\" (click)=\"setTrendLogData(item.value)\">{{item.label}}</button>\r\n                        <app-print-preview [className]=\"'position-gorelative'\"  [targetHtml] = \"'consumptionSummary'\" [title]=\"'Consumption Summary'\"></app-print-preview>\r\n\r\n                        <!-- <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 0}\" (click)=\"setTrendLogData(0)\">7D</button>\r\n                        <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 1}\" (click)=\"setTrendLogData(1)\">30D</button>\r\n                        <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 2}\" (click)=\"setTrendLogData(2)\">12M</button>\r\n                        <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 3}\" (click)=\"setTrendLogData(3)\">5Y</button> -->\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"chart-card-body p-3\">\r\n                      <app-chart-loader [isDone] = \"isDone.trendLogData\">\r\n                        <app-trend *ngIf=\"trendLogData\" [dataSource]=\"trendLogData\"></app-trend>\r\n                      </app-chart-loader>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </section>\r\n            <div class=\"row\" *ngIf=\"tabIndex == 1\">\r\n                <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n                    <app-dynamic-date-label class=\"m-2\" [dateRange]=\"equipmentBreakdownDateRange\"></app-dynamic-date-label>\r\n                    <app-data-table [isLoading]=\"tableLoading\" [rows]=\"rows\" [columns]=\"columns\"></app-data-table>\r\n                </div>\r\n            </div>\r\n            <div class=\"row pl-2 pr-2\" *ngIf=\"tabIndex == 2\">equipment-breakdown works!</div>\r\n            <div class=\"row pl-2 pr-2\" *ngIf=\"tabIndex == 4\"><app-reports></app-reports></div>\r\n        </div>\r\n        </div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/solar/solar.component.html":
/*!******************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/solar/solar.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>solar works!</p>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/water-dashboard/water-dashboard.component.html":
/*!**************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/water-dashboard/water-dashboard.component.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card main-card-height\" id=\"waterDistribution\">\r\n    <div class=\"card-header p-0\">\r\n\r\n      <div class=\"d-none d-xl-block\">\r\n        <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary header-title\">Water > {{buildingGroupName}} ></span>\r\n        <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary\">\r\n          <app-combo-box class=\"select-box-dark\" [dataSource]=\"buildingList\" [selected]=\"selectedBuilding\" (selectedChange)=\"buildingChanged($event)\"></app-combo-box>\r\n        </span>\r\n        <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(6)\" [ngClass]=\"{'active': tabIndex == 6}\">EUI</span>\r\n        <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(2)\" [ngClass]=\"{'active': tabIndex == 2}\">Meter Tree</span>\r\n        <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(4)\" [ngClass]=\"{'active': tabIndex == 4}\">8-Day Profile</span>\r\n        <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\" [ngClass]=\"{'active': tabIndex == 1}\">Equipment Breakdown</span>\r\n        <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(3)\" [ngClass]=\"{'active': tabIndex == 3}\">Equipment Distribution</span>\r\n        <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\" [ngClass]=\"{'active': tabIndex == 0}\">Overview</span>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-0 row d-xl-none\">\r\n        <label class=\"col-6 col-sm-6 col-form-label\">Water Dashboard</label>\r\n        <div class=\"col-6 col-sm-6 pl-0 pr-0\">\r\n          <app-combo-box class=\"select-box-dark\" [dataSource]=\"buildingList\" [selected]=\"selectedBuilding\" (selectedChange)=\"buildingChanged($event)\"></app-combo-box>\r\n          <select (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\" class=\"form-control mt-1 form-control-sm select-box-dark\">\r\n            <option value=\"0\">Overview</option>\r\n            <option value=\"3\">Equipment Distribution</option>\r\n            <option value=\"1\">Equipment Breakdown</option>\r\n            <option value=\"4\">8-Day Profile</option>\r\n            <option value=\"2\">Meter Tree</option>\r\n            <option value=\"6\">EUI</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"card-body h-100 card-scroll\">\r\n\r\n      <!-- tab index 0 -->\r\n      <section *ngIf=\"tabIndex == 0\">\r\n        <div class=\"row ow-eq-height\">\r\n          <div class=\"col-md-4 p-1\">\r\n            <div class=\"chart-card h-100\">\r\n              <div class=\"chart-card-header\">\r\n                  <span>Overall Consumption</span>\r\n                  <date-range-picker [disabled] =\"!isDone.overallConsumptioSquareData\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\" d-block\" position=\"bottom-right\" [(dateRange)]=\"overollConsumptionRange\" (dateRangeChange)=\"overallConsumptionChanged()\"></date-range-picker>\r\n              </div>\r\n              <div class=\"chart-card-body custom-card-body\">\r\n                <div class=\"row h-100\">\r\n                  <!-- <date-range-picker *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-xl-none m-3\" [(dateRange)]=\"overollConsumptionRange\" (dateRangeChange)=\"overallConsumptionChanged()\"></date-range-picker> -->\r\n                  <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 custom-view-pointer\">\r\n                    <app-chart-loader [isDone] = \"isDone.overollConsumptionData\">\r\n                      <app-data-pointer-none-image [color] = \"this.colorMap.water.secondary\" [description]=\"'Total Consumption'\" [pointerText]=\"overollConsumptionData\"\r\n                                        [unit]=\"'m<sup>3</sup>'\" class=\"\"></app-data-pointer-none-image>\r\n                    </app-chart-loader>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 custom-view-pointer\">\r\n                    <app-chart-loader [isDone] = \"isDone.overallConsumptioSquareData\">\r\n                      <app-data-pointer-none-image [color] = \"this.colorMap.water.secondary\" type=\"m³\" [description]=\"squareMeterPointerDescription\"\r\n                                        [pointerText]=\"overallConsumptioSquareData\"\r\n                                        [unit]=\"'m<sup>3</sup>/m<sup>2</sup>'\"></app-data-pointer-none-image>\r\n                    </app-chart-loader>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-8 p-1\">\r\n            <div class=\"chart-card h-100\" id=\"30MinutConsumption\">\r\n              <div class=\"chart-card-header\">\r\n                <span class=\"header-title\">30 min Consumption</span>\r\n                <div class=\"d-flex align-items-center\">\r\n                  <date-range-picker [disabled] = \"!isDone.dailyConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"_maxTodayConsumptionDate\" [minDate] = \"_minTodayConsumptionDate\" class=\"\" (dateRangeChange)=\"onChangeTodayConsumption()\"\r\n                                      [(dateRange)]=\"_todayConsumptionDate\"\r\n                                      [isSingleDate]=\"'true'\"\r\n                                      position=\"bottom-right\"></date-range-picker>\r\n                  <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'30MinutConsumption'\" [title]=\"'30 min Consumption'\"></app-print-preview>\r\n                </div>\r\n              </div>\r\n              <div class=\"chart-card-body p-3\">\r\n                <app-total-comsumption [value] = \"dailyConsumptionData.chart.total\" [unit] = \"'m<sup>3</sup>'\" [type] = \"'m3'\"></app-total-comsumption>\r\n                <app-chart-loader [isDone] = \"isDone.dailyConsumptionData\">\r\n                  <app-trend *ngIf=\"dailyConsumptionData\" [dataSource]=\"dailyConsumptionData\"></app-trend>\r\n                </app-chart-loader>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row ow-eq-height\">\r\n          <div class=\"col-md-4 p-1\">\r\n            <div class=\"chart-card h-100\" id=\"equipmentdistribution\">\r\n              <div class=\"chart-card-header\">\r\n                  <span class=\"header-title\">Equipment Distribution</span>\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <date-range-picker [disabled] = \"!isDone.equipDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\" [(dateRange)]=\"eqDIstDateRange\" (dateRangeChange)=\"eqDateRangeChange()\"></date-range-picker>\r\n                    \r\n                    <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'equipmentdistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n                  </div>\r\n              </div>\r\n              <div class=\"chart-card-body p-3  pie-chart-min-height\">\r\n                <app-chart-loader [isDone] = \"isDone.equipDistribution\">\r\n                  <app-pie *ngIf=\"equipDistribution\" [dataSource]=\"equipDistribution\"></app-pie>\r\n                </app-chart-loader>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-8 p-1\">\r\n            <div class=\"chart-card h-100\" id=\"consumptionSummary\">\r\n              <div class=\"chart-card-header\">\r\n                <span class=\"header-title\">Consumption Summary</span>\r\n                <div role=\"group\" class=\"d-flex align-items-center\" aria-label=\"Trend Log Modes\">\r\n                        \r\n                  <div class=\"chart-card-header\" style=\"margin-right: 10px;\">\r\n                    <span style=\"margin-right: 5px;\">From:</span>\r\n                    <date-range-picker [disabled] = \"!isDone.trendLogData\" *ngIf=\"_reload && !_isMonth && !_isYear\"  class=\"\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] = \"_maxDate\"\r\n                                        [(dateRange)]=\"_startDateTrendLog\"\r\n                                        [isSingleDate]=\"'true'\"\r\n                                        position=\"bottom-right\"></date-range-picker>\r\n                    <month-date-pciker [disabled] = \"!isDone.trendLogData\" *ngIf=\"(_reload && _isMonth) || (_reload && _isYear)\" [isYear]=\"_isYear\" [(dateRange)]=\"_startDateTrendLog\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] =\"today\"></month-date-pciker>\r\n                    \r\n                  </div>\r\n                  <span>Last</span>\r\n                  <button [disabled] = \"!isDone.trendLogData\" *ngFor=\"let item of _mapArrayTrendIndex\" class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == item.value}\" (click)=\"setTrendLogData(item.value)\">{{item.label}}</button>\r\n                  <app-print-preview [className]=\"'position-gorelative'\"  [targetHtml] = \"'consumptionSummary'\" [title]=\"'Consumption Summary'\"></app-print-preview>\r\n\r\n                  <!-- <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 0}\" (click)=\"setTrendLogData(0)\">7D</button>\r\n                  <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 1}\" (click)=\"setTrendLogData(1)\">30D</button>\r\n                  <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 2}\" (click)=\"setTrendLogData(2)\">12M</button>\r\n                  <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 3}\" (click)=\"setTrendLogData(3)\">5Y</button> -->\r\n                </div>\r\n              </div>\r\n              <div class=\"chart-card-body p-3\">\r\n                <app-chart-loader [isDone] = \"isDone.trendLogData\">\r\n                  <app-trend *ngIf=\"trendLogData\" [dataSource]=\"trendLogData\"></app-trend>\r\n                </app-chart-loader>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div class=\"row\" *ngIf=\"tabIndex == 1\">\r\n        <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 pb-4\">\r\n          <app-form-container fieldName=\"Filter\">\r\n            <app-equipment-breakdown-filter  serviceType=\"serviceType.WATER\" (onFilter)=\"onBreakdownFiltered($event)\" [dataSource]=\"equipmentBreakdownData\" [eqBreakDownFilter]=\"equipmentBreakdownDateRange\" (onDateRangeChanged)=\"onEqBreakdownFilter($event)\"></app-equipment-breakdown-filter>\r\n          </app-form-container>\r\n          </div>\r\n          <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n          <app-data-table [isLoading]=\"tableLoading\" [rows]=\"rows\" [columns]=\"columns\"></app-data-table>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chart-card m-1\" *ngIf=\"tabIndex == 3\">\r\n        <div class=\"chart-card-body p-3 position-relative\">\r\n          <div class=\"eq-breackdown-position\">\r\n            <date-range-picker [disabled] = \"!isDone.equipDistributionLg\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-left\"\r\n                [(dateRange)]=\"eqdistlg\" (dateRangeChange)=\"getEqDistributionLg()\">\r\n            </date-range-picker>\r\n          </div>\r\n          <div>\r\n            <app-print-preview [targetHtml] = \"'waterDistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n            <app-chart-loader [isDone] = \"isDone.equipDistributionLg\">\r\n              <app-doughnut2d *ngIf=\"equipDistributionLg\" [fixedWidth]=\"true\" [dataSource]=\"equipDistributionLg\">\r\n              </app-doughnut2d>\r\n            </app-chart-loader>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row pl-2 pr-2 h-100\" *ngIf=\"tabIndex == 2\">\r\n        <app-dynamic-date-label [dateRange]=\"meterTreeDateRange\"></app-dynamic-date-label>\r\n        <!-- <app-meter-tree [isLoading]=\"meterTreeLoading\" type=\"m³\" mode=\"false\" [dataSource]=\"meterTreeDatas\" class=\"w-100 h-100 p-3\"></app-meter-tree> -->\r\n        <app-chart-loader [isDone] = \"!meterTreeLoading\">\r\n          <app-meter-tree *ngIf=\"!meterTreeLoading\"  type=\"m³\" mode=\"false\" [dataSource]=\"meterTreeDatas\" class=\"w-100 h-100 p-3\"></app-meter-tree>\r\n        </app-chart-loader>\r\n        <app-floating-button *ngIf=\"meterTreeDatas\" (clickOn)=\"exportMeter()\" [icon]=\"FileDownloadIcon\"></app-floating-button>\r\n      </div>\r\n      <div class=\"row pl-0 pr-0 h-100\" *ngIf=\"tabIndex == 4\">\r\n        <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 h-100 position-relative\">\r\n          <app-print-preview [className]=\"'days8'\"  [targetHtml] = \"'waterDistribution'\" [title]=\"'Water 8 Days Profile'\"></app-print-preview>\r\n\r\n          <app-profile-chart level=\"building\" [buildingId]=\"buildingId\" [serviceType]=\"serviceType.WATER\"></app-profile-chart>\r\n        </div>\r\n      </div>\r\n\r\n      <section *ngIf=\"tabIndex == 6\">\r\n        <ums-eui [id]=\"buildingId\" [type]=0></ums-eui>\r\n      </section>\r\n    </div>\r\n  </div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/water-group-dashboard/water-group-dashboard.component.html":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/water-group-dashboard/water-group-dashboard.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card h-100\" id=\"waterDistribution\">\r\n  <div class=\"card-header p-0\">\r\n    <div class=\"d-none d-xl-block\">\r\n      <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary header-title\">Water > {{buildingName}} ></span>\r\n      <span class=\"d-inline-block pl-3 pt-3 pb-3 font-secondary\">\r\n        <app-combo-box class=\"select-box-dark\" [dataSource]=\"buildings\" (selectedChange)=\"buildingChanged($event)\"></app-combo-box>\r\n      </span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(6)\" [ngClass]=\"{'active': tabIndex == 6}\">EUI</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(3)\" [ngClass]=\"{'active': tabIndex == 3}\">Meter Tree</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(5)\" [ngClass]=\"{'active': tabIndex == 5}\">8-Day Profile</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(2)\" [ngClass]=\"{'active': tabIndex == 2}\">Equipment Breakdown</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\" [ngClass]=\"{'active': tabIndex == 1}\">Equipment Distribution</span>\r\n      <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\" [ngClass]=\"{'active': tabIndex == 0}\">Overview</span>\r\n    </div>\r\n    <div class=\"form-group row mb-0 row d-xl-none\">\r\n      <label class=\"col-6 col-sm-6 col-form-label\">Electrical Dashboard</label>\r\n      <div class=\"col-6 col-sm-6 pl-0 pr-0\">\r\n        <app-combo-box class=\"select-box-dark\" [dataSource]=\"buildings\" (selectedChange)=\"buildingChanged($event)\"></app-combo-box>\r\n        <select (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\" class=\"form-control mt-1 form-control-sm select-box-dark\">\r\n          <option value=\"0\">Overview</option>\r\n          <option value=\"1\">Equipment Distribution</option>\r\n          <option value=\"2\">Equipment Breakdown</option>\r\n          <option value=\"5\">8-Day Profile</option>\r\n          <option value=\"6\">EUI</option>\r\n          <option value=\"3\">Meter Tree</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"card-body  h-100 card-scroll\">\r\n\r\n    <!-- tab index 0 -->\r\n    <section *ngIf=\"tabIndex == 0\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 col-lg-6 col-xl-4 p-1\">\r\n          <div class=\"chart-card h-100\">\r\n            <div class=\"chart-card-header\">\r\n                <span>Overall Consumption</span>\r\n                <date-range-picker [disabled] = \"!isDone.overallConsumptioSquareData\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-right\" (dateRangeChange)=\"dateRangeListner('overall')\" [(dateRange)]=\"overallDateRange\"></date-range-picker>\r\n            </div>\r\n            <div class=\"chart-card-body custom-card-body\">\r\n              <div class=\"row h-100\">\r\n                <!-- <div class=\"col-12\">\r\n                  <date-range-picker *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-xl-none m-3\" (dateRangeChange)=\"dateRangeListner('overall')\" [(dateRange)]=\"overallDateRange\"></date-range-picker>\r\n                </div> -->\r\n                <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 custom-view-pointer\">\r\n                  <app-chart-loader [isDone] = \"isDone.overallConsumptioTotalData\">\r\n                    <app-data-pointer-none-image [color] = \"this.colorMap.water.secondary\" [pointerText]=\"overallConsumptioTotalData\" [unit]=\"'m<sup>3</sup>'\" type=\"m³\" [description]=\"'Total Consumption'\" class=\"\"></app-data-pointer-none-image>\r\n                  </app-chart-loader>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6 col-md-6 col-lg-6 col-xl-6 custom-view-pointer\">\r\n                  <app-chart-loader [isDone] = \"isDone.overallConsumptioSquareData\">\r\n                    <app-data-pointer-none-image [color] = \"this.colorMap.water.secondary\" [description]=\"squareMeterPointerDescription\"\r\n                                      [pointerText]=\"overallConsumptioSquareData\" [unit]=\"'m<sup>3</sup>/m<sup>2</sup>'\"\r\n                                      type=\"m³\"></app-data-pointer-none-image>\r\n                  </app-chart-loader>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-lg-6 col-xl-8 p-1 pt-0\">\r\n          <div class=\"chart-card h-100\" id=\"30MinutConsumption\">\r\n            <div class=\"chart-card-header\">\r\n              <span class=\"header-title\">30 min Consumption</span>\r\n              <div class=\"d-flex align-items-center\">\r\n                <date-range-picker [disabled] = \"!isDone.dailyConsumptionData\" *ngIf=\"_reload\" [maxDate]=\"_maxTodayConsumptionDate\" [minDate] = \"_minTodayConsumptionDate\" class=\"\" (dateRangeChange)=\"onChangeTodayConsumption()\"\r\n                                    [(dateRange)]=\"_todayConsumptionDate\"\r\n                                    [isSingleDate]=\"'true'\"\r\n                                    position=\"bottom-right\"></date-range-picker>\r\n                <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'30MinutConsumption'\" [title]=\"'30 min Consumption'\"></app-print-preview>\r\n              </div>\r\n            </div>\r\n            <div class=\"chart-card-body\">\r\n              <app-total-comsumption [value] = \"dailyConsumptionData.chart.total\" [unit] = \"'m<sup>3</sup>'\" [type] = \"'m3'\"></app-total-comsumption>\r\n              <app-chart-loader [isDone] = \"isDone.dailyConsumptionData\">\r\n                <app-trend *ngIf=\"dailyConsumptionData\" [dataSource]=\"dailyConsumptionData\"></app-trend>\r\n              </app-chart-loader>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row ow-eq-height\">\r\n        <div class=\"col-md-12 col-lg-6 col-xl-4 p-1\">\r\n          <div class=\"chart-card h-100\" id=\"equipmentdistribution\">\r\n            <div class=\"chart-card-header\">\r\n              <span class=\"header-title\">Equipment Distribution</span>\r\n              <div class=\"d-flex align-items-center\">\r\n                <date-range-picker [disabled] = \"!isDone.equipDistribution\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" (dateRangeChange)=\"dateRangeListner('eqDist')\" [(dateRange)]=\"eqDIstDateRange\"></date-range-picker>\r\n                <app-print-preview [className]=\"'position-gorelative'\" [targetHtml] = \"'equipmentdistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n              </div>\r\n            </div>\r\n            <div class=\"chart-card-body p-3\">\r\n              <!-- <date-range-picker *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-xl-none\" (dateRangeChange)=\"dateRangeListner('eqDist')\" [(dateRange)]=\"eqDIstDateRange\"></date-range-picker> -->\r\n              <app-chart-loader [isDone] = \"isDone.equipDistribution\">\r\n                <app-pie *ngIf=\"equipDistribution\" [dataSource]=\"equipDistribution\"></app-pie>\r\n              </app-chart-loader>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-lg-6 col-xl-8 p-1\">\r\n          <div class=\"chart-card h-100\" id=\"consumptionSummary\">\r\n            <div class=\"chart-card-header\">\r\n              <span class=\"header-title\">Consumption Summary</span>\r\n              <div role=\"group\" class=\"d-flex align-items-center\" aria-label=\"Trend Log Modes\">\r\n                        \r\n                <div class=\"chart-card-header\" style=\"margin-right: 10px;\">\r\n                  <span style=\"margin-right: 5px;\">From:</span>\r\n                  <date-range-picker [disabled] = \"!isDone.trendLogData\" *ngIf=\"_reload && !_isMonth && !_isYear\"  class=\"\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] = \"_maxDate\"\r\n                                      [(dateRange)]=\"_startDateTrendLog\"\r\n                                      [isSingleDate]=\"'true'\"\r\n                                      position=\"bottom-right\"></date-range-picker>\r\n                  <month-date-pciker [disabled] = \"!isDone.trendLogData\" *ngIf=\"(_reload && _isMonth) || (_reload && _isYear)\" [isYear]=\"_isYear\" [(dateRange)]=\"_startDateTrendLog\" (dateRangeChange)=\"onChangeTrendLogByDate(true)\" [maxDate] =\"today\"></month-date-pciker>\r\n                  \r\n                </div>\r\n                <span>Last</span>\r\n                <button [disabled] = \"!isDone.trendLogData\" *ngFor=\"let item of _mapArrayTrendIndex\" class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == item.value}\" (click)=\"setTrendLogData(item.value)\">{{item.label}}</button>\r\n                <app-print-preview [className]=\"'position-gorelative'\"  [targetHtml] = \"'consumptionSummary'\" [title]=\"'Consumption Summary'\"></app-print-preview>\r\n\r\n                <!-- <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 0}\" (click)=\"setTrendLogData(0)\">7D</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 1}\" (click)=\"setTrendLogData(1)\">30D</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 2}\" (click)=\"setTrendLogData(2)\">12M</button>\r\n                <button class=\"btn btn-primary btn-circle\" [ngClass]=\"{'active': trendLogTabIndex == 3}\" (click)=\"setTrendLogData(3)\">5Y</button> -->\r\n              </div>\r\n            </div>\r\n            <div class=\"chart-card-body p-3\">\r\n              <app-chart-loader [isDone] = \"isDone.trendLogData\">\r\n                <app-trend *ngIf=\"trendLogData\" [dataSource]=\"trendLogData\"></app-trend>\r\n              </app-chart-loader>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"chart-card m-1\" *ngIf=\"tabIndex == 1\">\r\n      <div class=\"chart-card-body p-3 position-relative\">\r\n        <div class=\"eq-breackdown-position\">\r\n          <date-range-picker [disabled] = \"!isDone.equipDistributionLg\" *ngIf=\"_reload\" [maxDate]=\"today\" class=\"d-block\" position=\"bottom-left\"\r\n              [(dateRange)]=\"eqdistlg\" (dateRangeChange)=\"dateRangeListner('eqdistlg')\">\r\n          </date-range-picker>\r\n        </div>\r\n        <div>\r\n          <app-print-preview [targetHtml] = \"'waterDistribution'\" [title]=\"'Equipment Distribution'\"></app-print-preview>\r\n          <app-chart-loader [isDone] = \"isDone.equipDistributionLg\">\r\n            <app-doughnut2d *ngIf=\"equipDistributionLg\" [fixedWidth]=\"true\" [dataSource]=\"equipDistributionLg\">\r\n            </app-doughnut2d>\r\n          </app-chart-loader>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"tabIndex == 2\">\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 pb-4\">\r\n        <app-form-container fieldName=\"Filter\">\r\n          <app-equipment-breakdown-filter-group  serviceType=\"serviceType.WATER\" (onFilter)=\"dataSourceOut($event)\" [eqBreakDownFilter]=\"equipmentBreakdownDateRange\" [dataSource]=\"eqBreakdownFiltered\" (onDateRangeChanged)=\"onEqBreakdownFilter($event)\"></app-equipment-breakdown-filter-group>\r\n        </app-form-container>\r\n      </div>\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n        <app-data-table [isLoading]=\"tableLoading\" [rows]=\"rows\" [columns]=\"columns\"></app-data-table>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row pl-2 pr-2 h-100 \" *ngIf=\"tabIndex == 3\">\r\n      <app-dynamic-date-label [dateRange]=\"meterTreeDateRange\"></app-dynamic-date-label>\r\n      <!-- <app-meter-tree [isLoading]=\"meterTreeLoading\" type=\"m³\" mode=\"true\" [dataSource]=\"meterTreeData\" class=\"w-100 p-3 h-100\"></app-meter-tree> -->\r\n      <app-chart-loader [isDone] = \"!meterTreeLoading\">\r\n        <app-meter-tree *ngIf=\"!meterTreeLoading\" type=\"m³\" mode=\"true\" [dataSource]=\"meterTreeData\" class=\"w-100 p-3 h-100\"></app-meter-tree>\r\n      </app-chart-loader>\r\n      <app-floating-button  *ngIf=\"meterTreeData\" (clickOn)=\"exportMeter()\" [icon]=\"FileDownloadIcon\"></app-floating-button>\r\n    </div>\r\n    <div class=\"row pl-2 pr-2\" *ngIf=\"tabIndex == 4\"><app-reports></app-reports></div>\r\n    <div class=\"row pl-0 pr-0 h-100\" *ngIf=\"tabIndex == 5\">\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0 h-100 position-relative\">\r\n        <app-print-preview [className]=\"'days8'\"  [targetHtml] = \"'waterDistribution'\" [title]=\"'Water 8 Days Profile'\"></app-print-preview>\r\n        <app-profile-chart level=\"group\" [buildingId]=\"groupId\" [serviceType]=\"serviceType.WATER\"></app-profile-chart>\r\n      </div>\r\n    </div>\r\n\r\n    <section *ngIf=\"tabIndex == 6\">\r\n      <ums-eui [id]=\"groupId\" [type]=1></ums-eui>\r\n    </section>\r\n\r\n    <section *ngIf=\"tabIndex == 7\"><app-alerts></app-alerts></section>\r\n  </div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/dashboards/water-report/water-report.component.html":
/*!********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/dashboards/water-report/water-report.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"card h-100\">\r\n    <div class=\"card-header p-0\">\r\n        <span class=\"d-none d-xl-block  pl-3 pt-3 pb-3 font-secondary\">\r\n            <span>Water Report</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(1)\"\r\n                [ngClass]=\"{'active': tabIndex == 1}\">Schedule</span>\r\n            <span class=\"tab-primary float-right font-primary\" (click)=\"setTabIndex(0)\"\r\n                [ngClass]=\"{'active': tabIndex == 0}\">Export</span>\r\n        </span>\r\n        <div class=\"d-xl-none pl-3 pt-3 pb-3 font-secondary\">\r\n            <div class=\"row w-100\">\r\n                <div class=\"col-4\">\r\n                    <select class=\"form-control form-control-sm styled-select-box\"\r\n                        (change)=\"setTabIndex($event.target.value)\" [(ngModel)]=\"tabIndex\">\r\n                        <option value=\"0\">Export</option>\r\n                        <option value=\"1\">Schedule</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  <div class=\"card-body m-0 p-2\">\r\n    <section *ngIf=\"tabIndex == 0\" class=\"min-height-100\">\r\n        <div class=\"chart-card\" class=\"min-height-100\">\r\n            <div class=\"chart-card-body\" class=\"min-height-100\">\r\n                <app-report-form\r\n                    [serviceType]=\"serviceType.WATER\"\r\n                    [isLoading]=\"isLoading\"\r\n                    [buttonText]=\"buttonText\"\r\n                    (initialData)=\"initialData($event)\"\r\n                    (reGenerate)=\"reGenerate($event)\"\r\n                    (download)=\"downloadExcel($event)\">\r\n                </app-report-form>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section *ngIf=\"tabIndex == 1\" class=\"min-height-100 m-2\">\r\n        <div class=\"chart-card\" class=\"min-height-100\">\r\n            <div class=\"chart-card-body\" class=\"min-height-100\">\r\n                <app-schedule-download\r\n                    [serviceType]=\"serviceType.WATER\"\r\n                    [isLoading]=\"isSchedulesLoading\"\r\n                    [rows]=\"scheduleData\"\r\n                    (locationType)=\"onChangeLocation($event)\"\r\n                    (insertData)=\"insertData($event)\"\r\n                    (updateData)=\"updateData($event)\"\r\n                    (deleteData)=\"deleteSchedule($event)\">\r\n                </app-schedule-download>\r\n            </div>\r\n        </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/error_pages/maintainence/maintainence.component.html":
/*!*********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/error_pages/maintainence/maintainence.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"page-container\">\r\n    <div class=\"logo-container\">\r\n        <img src=\"../../../assets/img/logo.png\" alt=\"LOGO\">\r\n        <p>Azbil Singapore</p>\r\n    </div>\r\n    <div class=\"d-flex page-content\">\r\n       <div style=\"display: table; height: 100%;\">\r\n            <div class=\"maintain-text\">\r\n                <p class=\"page-sub-header\">This site is currently</p>\r\n                <p class=\"page-header\">Under Maintenance</p>\r\n                <p class=\"page-description\">We are performing maintenance and upgrades to our site. this maintenance may effect our site and it's operations. we plan on this scheduled maintenance to be completed before the begining of business on <span class=\"highlight-date\">{{ dueDate }}</span></p>\r\n            </div>\r\n       </div>\r\n       <div style=\"display: table; ; height: 100%;\">\r\n            <div class=\"maintain-image\">\r\n                <img src=\"../../../assets/img/maintenance_img.png\" alt=\"Under Maintenance\">\r\n            </div>\r\n       </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/alert-configuration-box/alert-configuration-box.component.html":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/alert-configuration-box/alert-configuration-box.component.html ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-modal titleText=\"Manual Mode Settings\" [fullHeight]=\"false\">\r\n    <div class=\"row\" >\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 p-0\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-lg-12 col-xl-12 p-3 d-flex\">\r\n                <div class=\"flex-fill\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.buildingGroup\">\r\n                                <td>Building Group</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.buildingGroup.name}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.building\">\r\n                                <td>Building</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.building.name}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.level\">\r\n                                <td>Level</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.level.name}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.location.name\">\r\n                                <td>Location</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.location.name}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.meterType\">\r\n                                <td>Meter Type</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.meterType.name}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.loop\">\r\n                                <td>Loop</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.loop.name}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.substation\">\r\n                                <td>Substation</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.substation.name}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.plant\">\r\n                                <td>Plant</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.plant.name}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.equipment\">\r\n                                <td>Equipment</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.equipment}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\" *ngIf=\"alertInfo.data.row.toggle\">\r\n                                <td>Status</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.row.toggle?'Enabled':'Disabled'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"field-container\">\r\n                    <form [formGroup]=\"benchMarkForm\" (ngSubmit)=\"submitForm()\">\r\n                        <table>\r\n                            <tr>\r\n                                <td>Monday</td>\r\n                                <td><input formControlName=\"mondayBV\" [ngClass]=\"{'error': mondayBV.invalid && mondayBV.touched}\" class=\"form-full-width\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Tuesday</td>\r\n                                <td><input formControlName=\"tuesdayBV\" [ngClass]=\"{'error': tuesdayBV.invalid && tuesdayBV.touched}\" class=\"form-full-width\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Wednesday</td>\r\n                                <td><input formControlName=\"wednesdayBV\" [ngClass]=\"{'error': wednesdayBV.invalid && wednesdayBV.touched}\" class=\"form-full-width\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Thursday</td>\r\n                                <td><input formControlName=\"thursdayBV\" [ngClass]=\"{'error': thursdayBV.invalid && thursdayBV.touched}\" class=\"form-full-width\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Friday</td>\r\n                                <td><input formControlName=\"fridayBV\" [ngClass]=\"{'error': fridayBV.invalid && fridayBV.touched}\" class=\"form-full-width\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Saturday</td>\r\n                                <td><input formControlName=\"saturdayBV\" [ngClass]=\"{'error': saturdayBV.invalid && saturdayBV.touched}\" class=\"form-full-width\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Sunday</td>\r\n                                <td><input formControlName=\"sundayBV\" [ngClass]=\"{'error': sundayBV.invalid && sundayBV.touched}\" class=\"form-full-width\"></td>\r\n                            </tr>\r\n                        </table>\r\n                        <button type=\"submit\" [disabled]=\"benchMarkForm.invalid\" class=\"btn btn-primary btn-primary-fill mt-3 float-right\">Save</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </app-modal>\r\n  "

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/alert-configuration-table/alert-configuration-table.component.html":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/alert-configuration-table/alert-configuration-table.component.html ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"!isLoading\" class=\"mb-3 mt-3 row-limit\">\r\n    No of Rows &nbsp;\r\n    <app-combo-box class=\"select-box-dark\" [dataSource]=\"rowLimits\" [fullWidth]=\"false\" [selected]=\"2\"\r\n        [enableAll]=\"false\" (selectedChange)=\"changeNoOfRows($event)\"></app-combo-box>\r\n</div>\r\n\r\n<div *ngIf=\"!isLoading\">\r\n    <ngx-datatable\r\n        class=\"dark mt-2\"\r\n        [columnMode]=\"ColumnMode.standard\"\r\n        [headerHeight]=\"40\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [limit]=\"limit\"\r\n        [rows]=\"dataSource\">\r\n        <ngx-datatable-column [sortable]=\"false\" prop=\"activate\" name=\"Activate\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <span>\r\n                    <app-toggle-button [switch]=\"row.toggle\" (switchChange)=\"onToggle($event, row.meterID, row)\">\r\n                    </app-toggle-button>\r\n                </span>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"true\" prop=\"equipment\" name=\"Equipment\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{row.equipment}}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"true\" prop=\"mondayBenchMark\" name=\"Mon-Benchmark\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{row.mondayBenchMark}}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"true\" prop=\"tuesdayBenchMark\" name=\"Tue-Benchmark\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{row.tuesdayBenchMark}}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"true\" prop=\"wednesdayBenchMark\" name=\"Wed-Benchmark\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{row.wednesdayBenchMark}}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"true\" prop=\"thursdayBenchMark\" name=\"Thu-Benchmark\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{row.thursdayBenchMark}}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"true\" prop=\"fridayBenchMark\" name=\"Fri-Benchmark\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{row.fridayBenchMark}}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"true\" prop=\"saturdayBenchMark\" name=\"Sat-Benchmark\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{row.saturdayBenchMark}}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"true\" prop=\"sundayBenchMark\" name=\"Sun-Benchmark\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{row.sundayBenchMark}}\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column [sortable]=\"false\" prop=\"changeMode\" name=\"Mode\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\r\n                <div class=\"btn-group\">\r\n                    <button [disabled]=\"!row.toggle\" *ngFor=\"let item of row.changeMode\" class=\"btn btn-primary\"\r\n                        [ngClass]=\"{'active': item.selected}\"\r\n                        (click)=\"selectButtonClick(row, item.key)\">{{item.text}}</button>\r\n                </div>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n    </ngx-datatable>\r\n</div>\r\n\r\n<div *ngIf=\"isLoading\" class=\"loading-area\">\r\n    <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/alert-info/alert-info.component.html":
/*!*************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/alert-info/alert-info.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-modal titleText=\"Alert Information\" [fullHeight]=\"false\">\r\n    <div class=\"row\" >\r\n      <div class=\"col-md-12 col-lg-12 col-xl-12 p-0\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-lg-12 col-xl-12 p-3 d-flex\">\r\n                <div>\r\n                    <table>\r\n                        <tbody *ngIf=\"alertInfo.type==='lt' || alertInfo.type==='water'\">\r\n                            <tr class=\"data-row\">\r\n                                <td>Equipment Name</td>\r\n                                <td class=\"data-cell\">{{ alertInfo.data.selected[0].equipment }}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Detected Time ( 24 hours )</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].time}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Detected Value</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].detectedValue}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Threshold</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].benchmarkValue}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Building Group</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].buildingGroup}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Building</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].building}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Level</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].level}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Location</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].location}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Status</td>\r\n                                <td class=\"data-cell\">{{ alertInfo.data.selected[0].status}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                        <tbody *ngIf=\"alertInfo.type==='ht'\">\r\n                            <tr class=\"data-row\">\r\n                                <td>Equipment Name</td>\r\n                                <td class=\"data-cell\">{{ alertInfo.data.selected[0].equipment }}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Detected Time ( 24 hours )</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].time}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Detected Value</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].detectedValue}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Threshold</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].benchmarkValue}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Substation</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].substation}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Loop</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].loop}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Status</td>\r\n                                <td class=\"data-cell\">{{ alertInfo.data.selected[0].status}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                        <tbody *ngIf=\"alertInfo.type==='chiller'\">\r\n                            <tr class=\"data-row\">\r\n                                <td>Equipment Name</td>\r\n                                <td class=\"data-cell\">{{ alertInfo.data.selected[0].equipment }}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Detected Time ( 24 hours )</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].time}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Detected Value</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].detectedValue}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Threshold</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].benchmarkValue}}</td>\r\n                            </tr>\r\n                            <tr class=\"data-row\">\r\n                                <td>Plant</td>\r\n                                <td class=\"data-cell\">{{alertInfo.data.selected[0].plant}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Status</td>\r\n                                <td class=\"data-cell\">{{ alertInfo.data.selected[0].status}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button [disabled]=\"alertInfo.data.selected[0].status=='Pending'?false:true\" class=\"btn btn-primary btn-primary-fill w-100 mt-2\" (click)=\"confirmAknowledge()\">Acknowledge</button>\r\n                </div>\r\n                <div [ngClass]=\"{'chart-holder-flex':!chartData}\" class=\"chart-holder flex-fill\">\r\n                    <app-line2d [dataSource]=\"chartData\" *ngIf=\"chartData\"></app-line2d>\r\n                    <p *ngIf=\"!chartData\">Loading...</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </app-modal>\r\n  "

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/alert-summary-filter/alert-summary-filter.component.html":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/alert-summary-filter/alert-summary-filter.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\" *ngIf=\"type=='ht'\">\r\n    <div class=\"col-12 col-sm-6 col-md-6 pl-0 col-lg-3 col-xl-2\">\r\n        <app-input-field label=\"Loop\">\r\n            <app-combo-box [disable]=\"disabled\" dark=\"false\" [dataSource]=\"loops\" (selectedChange)=\"onLoopChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n        <app-input-field label=\"Substation\">\r\n            <app-combo-box dark=\"false\" [selected]=\"substationId\" [dataSource]=\"substations\" [disable]=\"loopId==0 || disabled\" (selectedChange)=\"onSubstationChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\" *ngIf=\"tabType=='summary'\">\r\n        <app-input-field label=\"Status\">\r\n            <app-combo-box dark=\"false\" [dataSource]=\"status\" (selectedChange)=\"onStatusChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\" *ngIf=\"tabType=='configs' && showActive\">\r\n        <app-input-field label=\"Activate\">\r\n            <app-combo-box dark=\"false\" [dataSource]=\"activates\" (selectedChange)=\"onActivateChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n</div>\r\n  \r\n<div class=\"row\" *ngIf=\"type == 'lt' || type == 'water'\">\r\n    <div class=\"col-12 col-sm-6 col-md-6 pl-0 col-lg-3 col-xl-2\">\r\n        <app-input-field label=\"Building Group\">\r\n            <app-combo-box [disable]=\"disabled\" dark=\"false\" [dataSource]=\"buildingGroups\" (selectedChange)=\"onBuildingGroupChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n        <app-input-field label=\"Building\">\r\n            <app-combo-box dark=\"false\" [selected]=\"buildingId\" [dataSource]=\"buildings\" [disable]=\"buildingGroupId == 0 || disabled\" (selectedChange)=\"onBuildingChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n        <app-input-field label=\"Level\">\r\n            <app-combo-box dark=\"false\" [selected]=\"levelId\" [dataSource]=\"levels\" [disable]=\"buildingGroupId == 0 || buildingId == 0 || disabled\" (selectedChange)=\"onLevelChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\" *ngIf=\"tabType=='summary'\">\r\n        <app-input-field label=\"Status\">\r\n            <app-combo-box dark=\"false\" [dataSource]=\"status\" (selectedChange)=\"onStatusChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\" *ngIf=\"tabType=='configs' && showActive\">\r\n        <app-input-field label=\"Activate\">\r\n            <app-combo-box dark=\"false\" [dataSource]=\"activates\" (selectedChange)=\"onActivateChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"type=='chiller'\">\r\n    <div class=\"col-12 col-sm-6 col-md-6 pl-0 col-lg-3 col-xl-2\">\r\n        <app-input-field label=\"Plant\">\r\n            <app-combo-box [disable]=\"disabled\" dark=\"false\" [dataSource]=\"plants\" (selectedChange)=\"onPlantChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\" *ngIf=\"tabType=='summary'\">\r\n        <app-input-field label=\"Status\">\r\n            <app-combo-box dark=\"false\" [dataSource]=\"status\" (selectedChange)=\"onStatusChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\" *ngIf=\"tabType=='configs' && showActive\">\r\n        <app-input-field label=\"Activate\">\r\n            <app-combo-box dark=\"false\" [dataSource]=\"activates\" (selectedChange)=\"onActivateChange($event)\"></app-combo-box>\r\n        </app-input-field>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/alerts/alerts.component.html":
/*!*****************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/alerts/alerts.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>alerts works!</p>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/badge-icon/badge-icon.component.html":
/*!*************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/badge-icon/badge-icon.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"clickable badge-icon\" (click)=\"iconOnClick($event)\">\r\n    <fa-icon class=\"fa-lg icon-style\" [icon]=\"icon\"></fa-icon>\r\n    <span class=\"badge badge-danger badge-notify\">{{ badgeText }}</span>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/breadcrumb/breadcrumb.component.html":
/*!*************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/breadcrumb/breadcrumb.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<nav aria-label=\"breadcrumb\">\r\n  <ol class=\"breadcrumb background\">\r\n    <li class=\"breadcrumb-item\" *ngFor=\"let item of dataSource; index as i;\" [ngClass]=\"{'active': i === (dataSource.length-1)}\">\r\n      <a *ngIf=\"i !== (dataSource.length-1)\" [routerLink]=\"[item.url]\" >{{ item.name | titlecase}}</a>\r\n      <span *ngIf=\"i === (dataSource.length-1)\">{{ item.name | titlecase}}</span>\r\n    </li>\r\n  </ol>\r\n</nav>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/chart-loader/chart-loader.component.html":
/*!*****************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/chart-loader/chart-loader.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"chart-loader\" *ngIf=\"!isDone\">\r\n    <div  class=\"loading-area\">\r\n        <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n    </div>\r\n</div>\r\n<ng-content ></ng-content>\r\n\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/combo-box/combo-box.component.html":
/*!***********************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/combo-box/combo-box.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<select [attr.disabled]=\"disable ? '' : null\" [ngClass]=\"{'select-box-dark': dark == 'true', 'w-100': fullWidth == 'true'}\" [(ngModel)]=\"selected\" class=\"comb-select select-box-dark\"(change)=\"onChangedSelect($event)\">\r\n  <option *ngIf=\"enableAll\" value=\"0\" selected=\"selected\">All</option>\r\n  <option *ngFor=\"let item of dataSource\" value=\"{{item.id}}\">{{item.name}}</option>\r\n</select>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/configuration-table/configuration-table.component.html":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/configuration-table/configuration-table.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form *ngIf=\"!isLoading\" [formGroup]=\"configurationForm\">\r\n  <ngx-datatable #table class=\"dark\"\r\n    [rows]=\"rows\"\r\n    [sortType]=\"SortType.multi\"\r\n    [headerHeight]=\"40\"\r\n    [footerHeight]=\"40\"\r\n    [columnMode]=\"ColumnMode.standard\"\r\n    rowHeight=\"auto\"\r\n    [limit]=\"8\"\r\n    [loadingIndicator]=\"true\"\r\n    [reorderable]=\"true\"\r\n    rowHeight=\"auto\"\r\n    [offset]=\"tableOffset\"\r\n    (page)=\"onPageChange($event)\">\r\n    <ngx-datatable-column name=\"Building Group\" prop=\"buildingGroup.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'lt' || type == 'water'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action != 'insert'\">\r\n          {{ row.buildingGroup.name?row.buildingGroup.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action == 'insert'\">\r\n          <select formControlName=\"buildingGroup\" (change)=\"changeBuildingGroup($event.target.value)\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let buildingGroup of buildingGroups\" [value]=\"buildingGroup.id\">{{buildingGroup.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Building\" prop=\"building.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'lt' || type == 'water'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action != 'insert'\">\r\n          {{ row.building.name?row.building.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action == 'insert'\">\r\n          <select formControlName=\"building\" [value]=\"row.building.id\" (change)=\"changeBuilding($event.target.value)\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let building of buildings\" [value]=\"building.id\">{{building.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Level\" prop=\"level.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'lt' || type == 'water'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.level.name?row.level.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"level\" [value]=\"row.level.id\" (change)=\"changeLevel($event.target.value)\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let level of levels\" [value]=\"level.id\">{{level.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Location\" prop=\"location.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'lt' || type == 'water'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action != 'insert' && row.action != 'update'\">\r\n          {{ row.location.name?row.location.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"location\" (change)=\"changeLocation($event.target.value)\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let location of locations\" [value]=\"location.id\">{{location.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Meter Type\" prop=\"meterType.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'lt' || type == 'water'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action != 'insert' && row.action != 'update'\">\r\n          {{ row.meterType.name?row.meterType.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"meterType\" [value]=\"row.meterType.id\" (change)=\"changeMeterType($event.target.value)\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let meterType of meterTypes\" [value]=\"meterType.id\">{{meterType.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Loop\" prop=\"loop.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'ht'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action != 'insert'\">\r\n          {{ row.loop.name?row.loop.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action == 'insert'\">\r\n          <select formControlName=\"loop\" [value]=\"row.loop.id\" (change)=\"changeLoop($event.target.value)\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let loop of loops\" [value]=\"loop.id\">{{loop.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Substation\" prop=\"substation.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'ht'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action != 'insert'\">\r\n          {{ row.substation.name?row.substation.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action == 'insert'\">\r\n          <select formControlName=\"substation\" [value]=\"row.substation.id\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let substation of substations\" [value]=\"substation.id\">{{substation.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Chiller Plant\" prop=\"plant.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'chiller'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action != 'insert'\">\r\n          {{ row.plant.name?row.plant.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action == 'insert'\">\r\n          <select formControlName=\"plant\" [value]=\"row.plant.id\" (change)=\"changePlant($event.target.value)\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let plant of plants\" [value]=\"plant.id\">{{plant.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Equipment Type\" prop=\"equipmentType.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'chiller'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.equipmentType.name?row.equipmentType.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"equipmentType\" [value]=\"row.equipmentType.id\" (change)=\"changeEquipmentType($event.target.value)\" class=\"w-100 white-select-box\">\r\n            <option *ngFor=\"let equipmentType of equipmentTypes\" [value]=\"equipmentType.id\">{{equipmentType.name}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Meter Name\" prop=\"meter.name\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.meter.name?row.meter.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <input type=\"text\" placeholder=\"Meter Name\" formControlName=\"meterName\"  class=\"form-control search-box\">\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"OPC Tag\" prop=\"opcTag.name\" [width]=\"2 * (tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.opcTag.name?row.opcTag.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <input type=\"text\" placeholder=\"OPC Tag\" formControlName=\"opcTag\" class=\"form-control search-box\">\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Relationship\" prop=\"relationship.name\" [width]=\"(tableWidth | async)\" *ngIf=\"type == 'lt' || type == 'water'\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.relationship.name?row.relationship.name:'N/A' }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <input type=\"text\" placeholder=\"Meter Relationship\" formControlName=\"relationShip\" class=\"form-control search-box\">\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n\r\n    <ngx-datatable-column name=\"Action\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <div *ngIf=\"row.action  != 'insert' && row.action != 'update'\" class=\"btn-group w-100\" role=\"group\" aria-label=\"Actions\">\r\n          <button [disabled]=\"isEditEnabled\" type=\"button\" (click)=\"editRowAction(row)\" class=\"btn btn-primary btn-green btn-sm form-control search-box\">Edit</button>\r\n          <button type=\"button\" (click)=\"deleteRow(row)\" [disabled]=\"isEditEnabled\" class=\"btn btn-primary btn-red btn-sm form-control search-box\">Delete</button>\r\n        </div>\r\n        <div class=\"btn-group w-100\" role=\"group\" aria-label=\"Actions\" *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <button type=\"button\" [disabled]=\"configurationForm.invalid\" (click)=\"onSaveButtonClicked(row)\" class=\"btn btn-primary btn-sm btn-green form-control search-box\">Save</button>\r\n          <button type=\"button\" (click)=\"cancelEditInsertAction(row)\" class=\"btn btn-primary btn-sm btn-red form-control search-box\">Cancel</button>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n  </ngx-datatable>\r\n  <div class=\"d-flex justify-content-end mt-3  mb-3\">\r\n    <button (click)=\"addNewRow($event)\" [disabled]=\"isEditEnabled\" type=\"button\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">\r\n      <fa-icon [icon]=\"plusIcon\"></fa-icon> Add New {{buttonText}}\r\n    </button>\r\n  </div>\r\n</form>\r\n<div *ngIf=\"isLoading\" class=\"loading-area\">\r\n  <img alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/confirmation-box/confirmation-box.component.html":
/*!*************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/confirmation-box/confirmation-box.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"confirm-box\">\r\n    <p class=\"confirm-box-description\">{{massage}}</p>\r\n\r\n    <div class=\" d-flex justify-content-end\">\r\n        <div class=\"btn-group\">\r\n            <button type=\"button\" (click)=\"close('Cross click')\" class=\"btn btn-primary-fill\">Yes</button>\r\n            <button type=\"button\" (click)=\"dismiss('Cross click');\" class=\"btn btn-primary\">No</button>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/consumption-summery-chart/consumption-summery-chart.component.html":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/consumption-summery-chart/consumption-summery-chart.component.html ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\n    width=\"100%\"\n    [type]=\"type\"\n    dataFormat=\"JSON\"\n    [dataSource]=\"dataSource\"\n    placeholder=\"Loading...\"\n></fusioncharts>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/data-pointer-non-image/data-pointer-none-image.component.html":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/data-pointer-non-image/data-pointer-none-image.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"pointer-container pointer-min-height p-0 customs-circle\" >\r\n    <div class=\"img-container position-relative mt-3 pointer-min-height\">\r\n        <!-- <img class=\"d-inline-block position-absolute h-100 pointer-img d-inline-block mob-res\" src=\"assets/img/data-pointer.svg\" alt=\"\"> -->\r\n        <!-- <span class=\"pointer-text position-absolute d-inline-block\">{{ pointerText }}</span> -->\r\n        <!-- <img class=\"d-xl-none position-absolute h-100 pointer-img  mob-res\" src=\"assets/img/data-pointer.svg\" alt=\"\"> -->\r\n        <!-- <span class=\"pointer-text  d-inline-block\" [style.color] = \"this.color\" >{{ pointerText===null || pointerText === undefined ? 'N/A': pointerText | number: '.2'}}{{suffix}} <span class=\"pointer-unit d-inline-block\" [style.color] = \"this.color\" [innerHTML]=\"unit\"></span></span> -->\r\n        <span class=\"pointer-text  d-inline-block\" [style.color] = \"this.color\" >{{this.pointerText}}{{suffix}} <span class=\"pointer-unit d-inline-block\" [style.color] = \"this.color\" [innerHTML]=\"unit\"></span></span>\r\n        \r\n    </div>\r\n    <div class=\"text-center p-3\" [innerHTML]=\"description\"></div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/data-pointer/data-pointer.component.html":
/*!*****************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/data-pointer/data-pointer.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"pointer-container pointer-min-height p-0 d-flex flex-1\" >\r\n    <div class=\"text-left labeling\" [innerHTML]=\"description\"></div>\r\n    <app-chart-loader [isDone] = \"isDone\">\r\n        <div class=\"img-container position-relative pointer-min-height\">\r\n            <!-- <img class=\"d-inline-block position-absolute h-100 pointer-img d-inline-block mob-res\" src=\"assets/img/data-pointer.svg\" alt=\"\"> -->\r\n            <!-- <span class=\"pointer-text position-absolute d-inline-block\">{{ pointerText }}</span> -->\r\n            <!-- <span class=\"pointer-text d-inline-block value-detail\" [style.color] = \"this.color\">{{ pointerText===null || pointerText===undefined? 'N/A': pointerText | number: '.2'}}{{suffix}} <span class=\"pointer-unit d-inline-block\" [innerHTML]=\"unit\"></span> </span> -->\r\n            <span class=\"pointer-text  d-inline-block\" [style.color] = \"this.color\" >{{ pointerText}}{{suffix}} <span class=\"pointer-unit d-inline-block\" [style.color] = \"this.color\" [innerHTML]=\"unit\"></span></span>\r\n    \r\n        </div>\r\n    </app-chart-loader>\r\n    <img class=\"image\" src=\"{{this.image}}\" alt=\"\">\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/data-table/data-table.component.html":
/*!*************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/data-table/data-table.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"!isLoading\" class=\"mt-3 mb-3 row-limit\">\r\n    No of Rows &nbsp;<app-combo-box class=\"select-box-dark\" [dataSource]=\"rowLimits\" [fullWidth]=\"false\" [selected]=\"2\" [enableAll]=\"false\" (selectedChange)=\"changeNoOfRows($event)\"></app-combo-box>\r\n</div>\r\n<div *ngIf=\"!isLoading\">\r\n    <ngx-datatable\r\n        #dataTable\r\n        class=\"dark\"\r\n        [columnMode]=\"ColumnMode.standard\"\r\n        [headerHeight]=\"40\"\r\n        [footerHeight]=\"50\"\r\n        [selectionType]=\"clickable?SelectionType.single:''\"\r\n        (select)=\"onRowClickedEvent($event)\"\r\n        rowHeight=\"auto\"\r\n        [selected]=\"selectedRows\"\r\n        [limit]=\"limit\"\r\n        [rows]=\"rows\">\r\n        <ngx-datatable-column [sortable]=\"true\" *ngFor=\"let colum of columns\" [prop]=\"colum.key\" [name]=\"colum.name\" [width]=\"(tableWidth | async)\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <div *ngIf=\"colum.key == 'buttonGroupAction'\">\r\n                    <div class=\"btn-group\" role=\"group\">\r\n                        <button [disabled]=\"row['status']=='Pending'?false:true\" type=\"button\" (click)=\"$event.preventDefault(); $event.stopPropagation(); onActionButtonClicked (row, action.actionKey);\" *ngFor=\"let action of row[colum.key]\" class=\"d-inline-block clickable  btn-sm btn btn-primary \">{{ action.buttonName }}</button>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!isActionColumn(colum.key)\">\r\n                    {{\r\n                        row[colum.key] == null ? 'N/A' : row[colum.key]\r\n                    }}\r\n                </div>\r\n                <div *ngIf=\"colum.key == 'switchAction'\">\r\n                    <app-toggle-button [(switch)]=\"row[colum.key]\">\r\n                    </app-toggle-button>\r\n                </div>\r\n                <!-- <div *ngIf=\"colum.key == 'buttonSelectAction'\">\r\n                    <app-button-group [dataSource]=\"row[colum.key]\"></app-button-group>\r\n                </div> -->\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n    </ngx-datatable>\r\n</div>\r\n<div *ngIf=\"isLoading\" class=\"loading-area\">\r\n    <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.html":
/*!*************************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.html ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"input-group date-picker-month\">\r\n  <input ngbDatepicker type=\"text\" [class.w-100]=\"fullWidth==='true'\" class=\"form-control-sm date-picker-input\" readonly [value]=\"_value\"\r\n     (click)=\"openPopup()\" [disabled] = \"disabled\" (dateSelect)=\"onDateChange($event)\">\r\n  <div class=\"date-picker-month-windows\" *ngIf=\"_showPop\">\r\n    <div class=\"date-picker-month-windows-inside\">\r\n\r\n      <div class=\"year-picker d-flex align-items-center justify-content-center\" *ngIf = \"!_isYearOpened\">\r\n        <div class=\"year-picker-inside\" (click) = \"openPopupYear()\">\r\n          <span>{{_selectedYear}}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"year-picker d-flex align-items-center justify-content-center\" *ngIf = \"_isYearOpened\">\r\n        <div class=\"year-picker-inside d-flex align-items-center justify-content-between w-100\">\r\n          <div class=\"arrow-icon\" (click)=\"onArrowClick('back')\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 278.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z\"/></svg>\r\n          </div>\r\n          <span>{{_selectedYear}}</span>\r\n          <div class=\"arrow-icon\" (click)=\"onArrowClick('next')\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M342.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L274.7 256 105.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z\"/></svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"wraper-dates\" *ngIf = \"!_isYearOpened\">\r\n        <div class=\"date-list d-flex align-items-center flex-wrap\" >\r\n          <div class=\"date-item\" *ngFor=\"let item of _monthList\" (click) = \"onPickMonth(item.value)\" >\r\n            <span [className] = \"_selectedMonth == item.value && 'selected'\">{{item.label}}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"wraper-dates\" *ngIf = \"_isYearOpened\">\r\n        <div class=\"wraper-dates-inside d-flex\" [style.width]=\"_boxWidth + '%'\" [style.marginLeft]=\"_leftPos + '%'\">\r\n          <div class=\"year-box d-flex align-items-center\" *ngFor=\"let yeargroup of _yearList; i as indexOfelement;\" [style.width]=\"(_yearList.length * 100)+'%'\">\r\n            <div class=\"date-list d-flex align-items-center flex-wrap\" >\r\n              <div class=\"date-item\" *ngFor=\"let item of yeargroup\" (click)= \"onPickYear(item.value)\" >\r\n                <span [className] = \"_selectedYear == item.value && 'selected'\">{{item.label}}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/date-range-picker/lib/date-picker/date-picker.component.html":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/date-range-picker/lib/date-picker/date-picker.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"input-group\">\r\n  <input ngbDatepicker #d=\"ngbDatepicker\" class=\"form-control\" name=\"dp\" [(ngModel)]=\"ngbDate\" (click)=\"d.toggle()\"\r\n    [disabled]=\"disabled\" readonly (dateSelect)=\"onDateChange($event)\" style=\"max-width:200px;\">\r\n  <div class=\"input-group-append\">\r\n    <button class=\"btn btn-outline-secondary d-flex align-items-center\" (click)=\"d.toggle()\" type=\"button\">\r\n      <svg aria-hidden=\"true\" role=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n        <path fill=\"#ffffff\" d=\"M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"></path>\r\n      </svg>\r\n    </button>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.html":
/*!*************************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.html ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"input-group\">\r\n  <input ngbDatepicker [placement]=\"position\"  #dp=\"ngbDatepicker\" type=\"text\" [class.w-100]=\"fullWidth==='true'\" class=\"form-control-sm date-picker-input\" readonly\r\n    [disabled]=\"disabled\" [autoClose]=\"false\" [displayMonths]=\"1\" [dayTemplate]=\"t\" [showWeekNumbers]=\"false\"\r\n    [displayMonths]=\"1\"\r\n    [markDisabled]=\"isDisabled\" [firstDayOfWeek]=\"7\" (click)=\"dp.toggle()\" (dateSelect)=\"onDateChange($event, dp)\">\r\n</div>\r\n\r\n<ng-template #t let-date=\"date\" let-focused=\"focused\" let-disabled=\"disabled\">\r\n  <span class=\"custom-day\" [class.focused]=\"focused\" [class.range]=\"isFrom(date) || isTo(date) || isInside(date) || isHovered(date)\"\r\n    [class.faded]=\"isHovered(date) || isInside(date)\" [class.weekend]=\"isWeekend(date)\" [class.disabled]=\"disabled\"\r\n    (mouseenter)=\"hoveredDate = date\" (mouseleave)=\"hoveredDate = null\">\r\n    {{ date.day }}\r\n  </span>\r\n</ng-template>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/doughnut2d/doughnut2d.component.html":
/*!*************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/doughnut2d/doughnut2d.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  [width]=\"(chartWidth | async)\"\r\n  height=\"735\"\r\n  type=\"doughnut2d\"\r\n  dataFormat=\"JSON\"\r\n  [dataSource]=\"dataSource\"\r\n></fusioncharts>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/dynamic-date-label/meter-tree-date-view.component.html":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/dynamic-date-label/meter-tree-date-view.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"dateViewContainer\">\r\n  <p class=\"dateViewHeader\">Date Range</p>\r\n  <p>From: {{ dateRange.start | date:'yyyy-MM-dd HH:mm' }} To: {{ dateRange.end | date:'yyyy-MM-dd HH:mm' }}</p>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.html":
/*!*********************************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.html ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n    <app-input-field label=\"Date Range\">\r\n      <date-range-picker fullWidth=\"true\" [maxDate]=\"today\" position=\"bottom-left\" (dateRangeChange)=\"onDateRangeChange()\" [(dateRange)]=\"eqBreakDownFilterGroup\"></date-range-picker>\r\n    </app-input-field>\r\n  </div>\r\n  <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n    <app-input-field label=\"Block\">\r\n      <app-combo-box dark=\"false\" [dataSource]=\"blockList\" [selected]=\"blockId\" (selectedChange)=\"onBlockChange($event)\"></app-combo-box>\r\n    </app-input-field>\r\n  </div>\r\n  <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n    <app-input-field label=\"Level\">\r\n      <app-combo-box dark=\"false\" [dataSource]=\"levelList\" [selected]=\"levelId\" (selectedChange)=\"onLevelChange($event)\"></app-combo-box>\r\n    </app-input-field>\r\n  </div>\r\n  <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n  <app-input-field label=\"Equipment Type\">\r\n    <app-combo-box dark=\"false\" [dataSource]=\"eqType\" [selected]=\"eqTypeId\" (selectedChange)=\"onEquipmentTypeChange($event)\"></app-combo-box>\r\n  </app-input-field>\r\n  </div>\r\n  <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n    <app-input-field label=\"Equipment Code\">\r\n      <app-combo-box dark=\"false\" [dataSource]=\"eqCode\" [selected]=\"eqCodeId\" (selectedChange)=\"onEquipmentCode($event)\"></app-combo-box>\r\n    </app-input-field>\r\n  </div>\r\n  </div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.html":
/*!*********************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n<div class=\"pr-3 pl-3\">\r\n  <app-input-field label=\"Date Range\">\r\n    <date-range-picker fullWidth=\"true\" [maxDate]=\"today\" position=\"bottom-left\" (dateRangeChange)=\"onDateRangeChange()\" [(dateRange)]=\"eqBreakDownFilter\"></date-range-picker>\r\n  </app-input-field>\r\n</div>\r\n<div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n  <app-input-field label=\"Level\">\r\n    <app-combo-box dark=\"false\" [selected]=\"levelId\" [dataSource]=\"levelList\" (selectedChange)=\"onLevelChange($event)\"></app-combo-box>\r\n  </app-input-field>\r\n</div>\r\n<div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n<app-input-field label=\"Equipment Type\">\r\n  <app-combo-box dark=\"false\" [dataSource]=\"eqType\" [selected]=\"eqTypeId\" (selectedChange)=\"onEquipmentTypeChange($event)\"></app-combo-box>\r\n</app-input-field>\r\n</div>\r\n<div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n  <app-input-field label=\"Equipment Code\">\r\n    <app-combo-box dark=\"false\" [dataSource]=\"eqCode\" [selected]=\"eqCodeId\" (selectedChange)=\"onEquipmentCode($event)\"></app-combo-box>\r\n  </app-input-field>\r\n</div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/floating-button/floating-button.component.html":
/*!***********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/floating-button/floating-button.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [ngClass]=\"{'disabled': disable}\" class=\"floating-button\" (click)=\"onClick()\">\r\n  <fa-icon class=\"icon-center\" [icon]=\"icon\"  placement=\"top\" ngbTooltip=\"Export\"></fa-icon>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/form-container/form-container.component.html":
/*!*********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/form-container/form-container.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fieldset class=\"fieldset-border-color\">\r\n  <legend>{{fieldName}}</legend>\r\n  <div class=\"content\"><ng-content></ng-content></div>\r\n </fieldset>\r\n\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.html":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.html ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>group-equipment-breakdown works!</p>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/grouped-trend/grouped-trend.component.html":
/*!*******************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/grouped-trend/grouped-trend.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  [width]=\"(chartWidth | async)\"\r\n  [height]=\"height\"\r\n  type=\"scrollcombidy2d\"\r\n  dataFormat=\"JSON\"\r\n  [dataSource]=\"dataSourse\">\r\n</fusioncharts>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/header/header.component.html":
/*!*****************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/header/header.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row fluid-margin\">\r\n  <div class=\"col-md-12 p-3 header text-center\">\r\n    <button class=\"d-inline-block clickable btn btn-primary mr-2 ml-2 float-left\" (click)=\"toggleSideBar()\"><fa-icon [icon]=\"homeIcon\"></fa-icon></button>\r\n    <p [ngClass]=\"(isMobile())?'mobileHeader':'desktopHeader'\" class=\"d-inline-block mb-0\">{{ selectedItem }} <fa-icon class=\"browse fa-lg ml-3\" [icon]=\"editIcon\" *ngIf=\"boardLevel != 2\" (click)=\"open()\"></fa-icon></p>\r\n    <app-notification-panel [notifications]=\"allNotifications\" class=\"float-right pr-4 mt-2\"></app-notification-panel>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.html":
/*!***************************************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.html ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\" *ngIf=\"isSite\">\r\n      <app-input-field label=\"Loop\">\r\n          <app-combo-box dark=\"false\" [(selected)]=\"loopId\" [dataSource]=\"loop\" (selectedChange)=\"onLoopChange($event)\"></app-combo-box>\r\n      </app-input-field>\r\n  </div>\r\n  <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n      <app-input-field label=\"Substation\">\r\n          <app-combo-box dark=\"false\" [(selected)]=\"substationId\" [dataSource]=\"substation\" (selectedChange)=\"onSubstationChange($event)\"></app-combo-box>\r\n      </app-input-field>\r\n  </div>\r\n  <div class=\"col-12 col-sm-6 col-md-6 col-lg-3 col-xl-2\">\r\n    <app-input-field label=\"Meter\">\r\n        <app-combo-box dark=\"false\" [(selected)]=\"meterId\" [dataSource]=\"meter\" (selectedChange)=\"onMeterChange($event)\"></app-combo-box>\r\n    </app-input-field>\r\n</div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/image-map/image-map.component.html":
/*!***********************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/image-map/image-map.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row h-100\">\r\n  <div class=\"col-md-12 col-lg-12-col-xl-12 pl-0 pr-0\">\r\n    <div class=\"card h-100\" *ngIf=\"datasourse\">\r\n      <div>\r\n        <div class=\"card-header\">{{ title }}</div>\r\n      </div>\r\n\r\n      <div class=\"card-header-body card-scroll\" (scroll) = \"cardHide()\">\r\n        <div class=\"breadcrumb-date-picker\">\r\n          <app-breadcrumb [dataSource]=\"breadcrumbData\"></app-breadcrumb>\r\n          <date-range-picker\r\n            *ngIf=\"building != 'main-map'\"\r\n            [maxDate]=\"today\"\r\n            [minDate]=\"minDate\"\r\n            position=\"bottom-left\"\r\n            [(dateRange)]=\"dateRange\"\r\n            (dateRangeChange)=\"dateRangedChanged()\">\r\n          </date-range-picker>\r\n        </div>\r\n        <button *ngIf=\"mapPicker\" (click)=\"getData()\">GENERATE, MAP ZONE</button>\r\n        <button *ngIf=\"mapPicker && !_tempMapCoordinate\" (click)=\"higlightMap()\">MARKING</button>\r\n        \r\n        <div [@simpleFadeAnimation]=\"'in'\" class=\"p-4 d-flex align-items-center justify-content-center\" (ontouchmove)=\"onPnaImage($event)\">\r\n          <img [alt]=\"datasourse.imageAlt\" (load)=\"imageDimension($event)\"  [src]=\"datasourse.imageUrl\" id=\"mapImage\" usemap=\"#image_map\">\r\n          <svg [attr.height]=\"imageHeight\" style=\"position:absolute;\" [attr.width]=\"imageWidth\" id=\"xxx\">\r\n            <svg:text *ngFor=\"let dataZone of datasourse.zoneMap\" font-size=\"22px\" [attr.class]=\"dataZone.hide ? 'color_text_hide': 'color_text draggable'\" [attr.fill] = \"dataZone.hide\" [attr.x]=\"dataZone.x\" [attr.y]=\"dataZone.y\" [attr.label]=\"dataZone.label\"  >{{dataZone.label}}</text>\r\n            <polygon (click)=\"onClicked($event)\" (mouseout)=\"mouseOut($event)\" (mouseover)=\"mouseEnter($event)\"\r\n                     *ngFor=\"let coordinate of datasourse.map\" [attr.alt]=\"coordinate.title\"\r\n                     [attr.href]=\"coordinate.link\" [attr.points]=\"coordinate.coords\" data-id=\"{{ coordinate.building }}\"\r\n                     style=\"fill:transparent;stroke:transparent;stroke-width:2;cursor: pointer\" />\r\n            <polyline *ngIf=\"mapPicker\" id=\"polyline\" style=\"fill:white;stroke:red;stroke-width:3\"/>\r\n            \r\n          </svg>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div #myDetailDiv class=\"triangle-pointer\" >\r\n  <div class=\"image\">\r\n    <img height=\"50px\" [src]=\"iconURL\" alt=\"icon\">\r\n  </div>\r\n  <div class=\"tooltip-details\">\r\n    <div class=\"building-name\">\r\n      <span class=\"building-name\">{{ buildingName }}</span>\r\n    </div>\r\n    <div class=\"consumption\">\r\n      <span *ngIf=\"cardDetails\">{{ cardDetails }}{{suffix}} {{ unit }}</span>\r\n      <span *ngIf=\"!cardDetails\">N/A</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- TODO: Old tooltip design -->\r\n<!-- <div #myDetailDiv class=\"triangle-pointer\" >\r\n  <p class=\"card-text-position\">{{ buildingName }}</p>\r\n  <div style=\"display: flex; margin-top: 5px;\">\r\n    <img height=\"40px\" [src]=\"iconURL\" alt=\"icon\">\r\n    <span *ngIf=\"cardDetails\" class=\"card-text-position\">{{ cardDetails }} {{ unit }}</span>\r\n    <span *ngIf=\"!cardDetails\" class=\"card-text-position\">N/A</span>\r\n    <span *ngIf=\"!cardDetails && !disableLoading\" class=\"card-text-position\">Loading...</span>\r\n  </div>\r\n</div> -->\r\n\r\n\r\n<div #myZoneDev class=\"triangle-pointer\" >\r\n  <h4 class=\"zone\">{{ buildingName }}</h4>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/indicator/indicator.component.html":
/*!***********************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/indicator/indicator.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"indi-container d-flex justify-content-center flex-column align-items-center h-100 text-center\">\r\n    <div class=\"value mb-3 value-image\">\r\n        <img *ngIf=\"isIncreased && diffValue != 0\" src=\"assets/img/indi-up.svg\" alt=\"Increased\" class=\"indi-img\">\r\n        <img *ngIf=\"!isIncreased && diffValue != 0\" src=\"assets/img/indi-down.svg\" alt=\"Increased\" class=\"indi-img\">\r\n        <span [classList]=\"isIncreased ? 'danger' : 'neutral'\">{{ percentile ? percentile : '' }}</span>\r\n    </div>\r\n    <span [ngClass]=\"{'sub-value': true, 'danger': isIncreased, 'neutral': !isIncreased}\">\r\n        {{ changeInConsumption }}\r\n    </span>\r\n    <div *ngIf=\"diffValue != 0\" class=\"w-100 text-center p-2 custom-fonts\">{{ isIncreased ? 'Increase' : 'Decrease' }} in Consumption</div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/input-field/input-field.component.html":
/*!***************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/input-field/input-field.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"form-group\">\r\n  <label class=\"label\">{{label}}</label><br>\r\n  <ng-content></ng-content>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/ld-configuration/ld-configuration.component.html":
/*!*************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/ld-configuration/ld-configuration.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"!isLoading\" class=\"mt-3 mb-3 row-limit\">\r\n    No of Rows &nbsp;<app-combo-box class=\"select-box-dark\" [dataSource]=\"rowLimits\" [fullWidth]=\"false\" [selected]=\"2\" [enableAll]=\"false\" (selectedChange)=\"changeNoOfRows($event)\"></app-combo-box>\r\n</div>\r\n<div *ngIf=\"!isLoading\">\r\n    <ngx-datatable\r\n        class=\"dark\"\r\n        [columnMode]=\"ColumnMode.flex\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [limit]=\"limit\"\r\n        rowHeight=\"auto\"\r\n        [rows]=\"rows\">\r\n        <ngx-datatable-column name=\"Action\" [flexGrow]=\"1\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <app-toggle-button\r\n                    [switch]=\"row.status\"\r\n                    (switchChange)=\"onToggle($event, row)\">\r\n                </app-toggle-button>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Scenario\" [flexGrow]=\"3\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <div *ngIf=\"row.edit\" style=\"width: 320px;\">\r\n                    <app-combo-box\r\n                        dark=\"false\"\r\n                        [enableAll]=\"false\"\r\n                        [selected]=\"row.scenarioId\"\r\n                        [dataSource]=\"[ {id: 1, name: 'Without sub meters between main ring meters'}, {id: 2, name: 'With sub meters between main ring meters'} ]\"\r\n                        (selectedChange)=\"onScenarioChange(row, $event)\">\r\n                    </app-combo-box>\r\n                </div>\r\n                <div *ngIf=\"!row.edit\">{{ row.scenarioId == 1 ? 'Without sub meters between main ring meters' : row.scenarioId == 2 ? 'With sub meters between main ring meters' : 'N/A'}}</div>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Ring Meter 1\" [flexGrow]=\"1\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <div *ngIf=\"row.edit\">\r\n                    <app-combo-box\r\n                        dark=\"false\"\r\n                        [enableAll]=\"false\"\r\n                        [selected]=\"row.meterAId\"\r\n                        [dataSource]=\"meterList\"\r\n                        (selectedChange)=\"onMeterAChange(row, $event)\">\r\n                    </app-combo-box>\r\n                </div>\r\n                <div *ngIf=\"!row.edit\">{{ row.meterA }}</div>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Ring Meter 2\" [flexGrow]=\"1\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <div *ngIf=\"row.edit\">\r\n                    <app-combo-box\r\n                        dark=\"false\"\r\n                        [enableAll]=\"false\"\r\n                        [selected]=\"row.meterBId\"\r\n                        [dataSource]=\"meterList\"\r\n                        (selectedChange)=\"onMeterBChange(row, $event)\">\r\n                    </app-combo-box>\r\n                </div>\r\n                <div *ngIf=\"!row.edit\">{{ row.meterB }}</div>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Sub Meters\" [flexGrow]=\"3\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <div *ngIf=\"row.edit && row.scenarioId == 2\">\r\n                    <a (click)=\"openMeterPopup(row)\" class=\"popup-link\">\r\n                        <span *ngIf=\"row.subMeters.length == 0\">Add Meters</span>\r\n                        <span *ngFor=\"let subMeter of row.subMeters\">{{ subMeter.meterName }},&nbsp;</span>\r\n                    </a>\r\n                </div>\r\n                <div *ngIf=\"!row.edit && row.scenarioId == 2\">\r\n                    <span *ngFor=\"let subMeter of row.subMeters\">{{ subMeter.meterName }},&nbsp;</span>\r\n                </div>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Action\" [flexGrow]=\"1\">\r\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <div *ngIf=\"!row.edit\" class=\"btn-group w-100\" role=\"group\" aria-label=\"Actions\">\r\n                    <button [disabled]=\"!row.status\" (click)=\"editClick(row)\" class=\"btn btn-primary btn-green btn-sm form-control search-box\">Edit</button>\r\n                    <button [disabled]=\"!row.status\" (click)=\"deleteClick(row.id)\" class=\"btn btn-primary btn-red btn-sm form-control search-box\">Delete</button>\r\n                </div>\r\n                <div *ngIf=\"row.edit\" class=\"btn-group w-100\" role=\"group\" aria-label=\"Actions\" >\r\n                    <button (click)=\"saveClick(row)\" class=\"btn btn-primary btn-sm btn-green form-control search-box\">Save</button>\r\n                    <button (click)=\"cancelClick(row)\" class=\"btn btn-primary btn-sm btn-red form-control search-box\">Cancel</button>\r\n                </div>\r\n            </ng-template>\r\n        </ngx-datatable-column>\r\n    </ngx-datatable>\r\n    <div class=\"d-flex justify-content-end mt-3  mb-3\">\r\n        <button (click)=\"addNewScenario()\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">\r\n          <fa-icon [icon]=\"plusIcon\"></fa-icon> Add New Scenario\r\n        </button>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"isLoading\" class=\"loading-area\">\r\n    <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/ld-meter-select/ld-meter-select.component.html":
/*!***********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/ld-meter-select/ld-meter-select.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"chart-card content\">\r\n    <div class=\"chart-card-header\">\r\n        <div class=\"header-content\">\r\n            <div class=\"header-title\">Select Meters</div>\r\n        </div>\r\n        <div>\r\n            <button (click)=\"close()\" class=\"close-button\" title=\"close\" type=\"button\">\r\n                <svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\">\r\n                    <path fill=\"#fff\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"chart-card-body body-content\">\r\n        <app-form-container fieldName=\"Filtration\">\r\n            <div class=\"row ml-3\">\r\n                <app-input-field label=\"Building Group\" class=\"mr-3\">\r\n                    <app-combo-box\r\n                    dark=\"false\"\r\n                    [dataSource]=\"buildingGroups\"\r\n                    (selectedChange)=\"onBuildingGroupChange($event.value)\">\r\n                    </app-combo-box>\r\n                </app-input-field>\r\n                <app-input-field label=\"Building\" class=\"mr-3\">\r\n                    <app-combo-box\r\n                    dark=\"false\"\r\n                    [dataSource]=\"buildings\"\r\n                    (selectedChange)=\"onBuildingChange($event.value)\">\r\n                    </app-combo-box>\r\n                </app-input-field>\r\n                <app-input-field label=\"Level\">\r\n                    <app-combo-box\r\n                    dark=\"false\"\r\n                    [dataSource]=\"levels\"\r\n                    (selectedChange)=\"onLevelChange($event.value)\">\r\n                    </app-combo-box>\r\n                </app-input-field>\r\n                <app-input-field label=\"Search\" style=\"position: absolute; right: 40px;\">\r\n                    <input type=\"search\" placeholder=\"Search Meter\" (input)=\"onSearchChange($event.target.value)\">\r\n                </app-input-field>\r\n            </div>\r\n        </app-form-container>\r\n        <div *ngIf=\"!isLoading\" class=\"table-buttons\">\r\n            <ngx-datatable\r\n                class=\"dark mt-3\"\r\n                [rows]=\"rows\"\r\n                [columnMode]=\"ColumnMode.force\"\r\n                [headerHeight]=\"50\"\r\n                [footerHeight]=\"50\"\r\n                rowHeight=\"auto\"\r\n                [limit]=\"5\"\r\n                [selected]=\"selected\"\r\n                [selectionType]=\"SelectionType.checkbox\"\r\n                [selectAllRowsOnPage]=\"false\"\r\n                (select)=\"onSelect($event)\">\r\n                <ngx-datatable-column\r\n                    [width]=\"30\"\r\n                    [sortable]=\"false\"\r\n                    [canAutoResize]=\"false\"\r\n                    [draggable]=\"false\"\r\n                    [resizeable]=\"false\"\r\n                    [headerCheckboxable]=\"true\"\r\n                    [checkboxable]=\"true\">\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Building Group\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.buildingGroupName}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Building\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.buildingName}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Level\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.level}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Meter Type\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.meterTypeName}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column name=\"Meter Name\">\r\n                    <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                        {{row.meterName}}\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            </ngx-datatable>\r\n            <div class=\"d-flex justify-content-end mt-3  mb-3\">\r\n                <button [disabled]=\"selected.length == 0\" (click)=\"onSelectMeters()\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">Select</button>\r\n                <button (click)=\"onCancel()\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\">Cancel</button>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"isLoading\" class=\"loading-area\">\r\n            <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/leakage-information/leakage-information.component.html":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/leakage-information/leakage-information.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"chart-card content\">\r\n    <div class=\"chart-card-header\">\r\n        <div class=\"header-content\">\r\n            <div><img src=\"../../../assets/img/leakageInformation.png\" alt=\"leakageInformation\" width=\"30\"></div>\r\n            <div class=\"header-title\">Leakage Information</div>\r\n        </div>\r\n        <div>\r\n            <button (click)=\"close()\" class=\"close-button\" title=\"close\" type=\"button\">\r\n                <svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\">\r\n                    <path fill=\"#fff\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"chart-card-body body-content\">\r\n        <div>\r\n            System has detected a possible water leak between {{data.meters}} meters on {{data.time}}.\r\n        </div>\r\n        <div class=\"summary-text\">Summary</div>\r\n        <div class=\"info-table\">\r\n            <table>\r\n                <tr>\r\n                    <td>#</td>\r\n                    <td>Description</td>\r\n                </tr>\r\n                <hr>\r\n                <tr>\r\n                    <td>Scenario</td>\r\n                    <td>{{data.meters}}</td>\r\n                </tr>\r\n                <hr>\r\n                <tr>\r\n                    <td>Recorded Consumption</td>\r\n                    <td>{{data.error}}%</td>\r\n                </tr>\r\n                <hr>\r\n                <tr>\r\n                    <td>Recorded Base Consumption</td>\r\n                    <td>{{data.maxError}}%</td>\r\n                </tr>\r\n                <ng-container *ngIf = \"data.directionName != null\">\r\n                <hr>\r\n                <tr> \r\n                    <td>Direction</td>\r\n                    <td>{{data.directionName}}</td>\r\n                </tr>\r\n            </ng-container>\r\n                <hr>\r\n                <tr>\r\n                    <td>Duration</td>\r\n                    <td>{{data.time}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/line2d/line2d.component.html":
/*!*****************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/line2d/line2d.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n    type=\"line\"\r\n    width=\"100%\"\r\n    height=\"100%\"\r\n    dataFormat=\"JSON\"\r\n    [dataSource]=\"dataSource\"\r\n    placeholder=\"Loading...\"\r\n></fusioncharts>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/linear-scale-gradient/linear-scale-gradient.component.html":
/*!***********************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/linear-scale-gradient/linear-scale-gradient.component.html ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"linear-gauge\">\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/linear-scale/linear-scale.component.html":
/*!*****************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/linear-scale/linear-scale.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  width=\"100%\"\r\n  [height]=\"height\"\r\n  type=\"hlineargauge\"\r\n  dataFormat=\"json\"\r\n  [dataSource]=\"dataSource\"\r\n>\r\n</fusioncharts>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/meter-tree/meter-tree.component.html":
/*!*************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/meter-tree/meter-tree.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"position: relative;\">\r\n    <div *ngIf=\"!noData && !isLoading\" id=\"meter-tree\"></div>\r\n    <!-- <div *ngIf=\"!noData && !isLoading\" id=\"preview\" class=\"preview\"></div> -->\r\n    <div id=\"fakeTree\" class=\"d-none\"></div>\r\n\r\n    <div *ngIf=\"noData && !isLoading\" class=\"w-100 h-100 text-center middle-text text-muted\"><small>No data to display</small></div>\r\n\r\n    <div *ngIf=\"isLoading\" class=\"loading-area\">\r\n        <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/modal/modal.component.html":
/*!***************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/modal/modal.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row app-navigator\">\r\n    <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n        <div class=\"chart-card\">\r\n            <div class=\"chart-card-header\">\r\n                {{ titleText  }}\r\n                <button type=\"button\" class=\"btn float-right btn-close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n                    <span class=\"icon-close pt-1 pl-2 pr-2 pb-1\" aria-hidden=\"true\">X</span>\r\n                </button>\r\n            </div>\r\n            <div [className]=\"fullHeight?'full-height':'chart-card-body'\" class=\"m-3\">\r\n              <ng-content></ng-content>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.html":
/*!*************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  width=\"100%\"\r\n  type=\"mscolumn3dlinedy\"\r\n  dataFormat=\"JSON\"\r\n  [dataSource]=\"dataSource\"\r\n></fusioncharts>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/multi-level-pie/multi-level-pie.component.html":
/*!***********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/multi-level-pie/multi-level-pie.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n    width=\"100%\"\r\n    type=\"pie3d\"\r\n    dataFormat=\"json\"\r\n    [dataSource]=\"dataSource\"\r\n></fusioncharts>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/multi-series/multi-series.component.html":
/*!*****************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/multi-series/multi-series.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  [width]=\"(chartWidth | async)\"\r\n  [height]=\"height\"\r\n  type=\"msline\"\r\n  dataFormat=\"json\"\r\n  [dataSource]=\"dataSource\"\r\n  placeholder=\"Data Processing...\"\r\n>\r\n</fusioncharts>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/multiple-select/multiple-select.component.html":
/*!***********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/multiple-select/multiple-select.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"multiselect\">\n    <label class=\"label-text\"><ng-content></ng-content></label>\n    \n    <div class=\"selectBox\" (click)=\"showCheckboxes()\">\n      <select>\n        <option>{{selectedNames}}</option>\n      </select>\n      <div class=\"overSelect\"></div>\n  \n      <div class=\"checkboxes\" [class.expanded]=\"expanded\">\n        <label>\n          <input #checks type=\"checkbox\" (change)=\"selectAll($event)\">\n          All\n        </label>\n        <label *ngFor=\"let option of options\">\n          <input #checks type=\"checkbox\" (change)=\"select(option.id)\">\n          {{option.name}}\n        </label>\n      </div>\n    </div>\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/multiplechart-2d/multiplechart-2d.component.html":
/*!*************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/multiplechart-2d/multiplechart-2d.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  width=\"100%\"\r\n  type=\"mscombidy2d\"\r\n  dataFormat=\"JSON\"\r\n  [dataSource]=\"dataSource\"\r\n></fusioncharts>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/navigator/navigator.component.html":
/*!***********************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/navigator/navigator.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-modal titleText=\"Locations\">\r\n  <div class=\"row\" >\r\n    <div class=\"col-md-12 col-lg-12 col-xl-12 p-0 app-navigator\">\r\n\r\n      <section *ngIf=\"boardLevel == 0\">\r\n        <ul style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n          <li *ngFor=\"let site of datasourse\">\r\n            <div class=\"top-level pt-2 pb-2 pl-3 item\" style=\"padding-left: 10px !important;\">{{ site.siteName }}</div>\r\n            <ul style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n              <li *ngFor=\"let category of site.siteCategories; let i = index\">\r\n                <div *ngIf=\"category.buildingList.length != 0\" (click)=\"expandCallpse(i)\" [ngStyle]=\"{'background-color': callapseCat[i] ? '#007bff' : '#3c617d'}\" class=\"second-level pt-2 pb-2 pl-2 pr-2 active-item item container\">\r\n                  {{ category.categoryName }}\r\n                  <fa-icon class=\"browse fa-lg ml-3 float-right clickable\" [icon]=\"callapseCat[i]?arrowUp:arrowDown\"></fa-icon>\r\n                </div>\r\n                <ul *ngIf=\"callapseCat[i]\" style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n                  <li *ngFor=\"let buildingGroup of category.buildingList; let j = index\">\r\n                    <div class=\"second-level p-0 ml-2\" [ngStyle]=\"{'background-color': buildingGroups[i][j] ? '#007bff' : '#293946'}\">\r\n                      <div class=\"item pt-2 pb-2 pl-2 pr-2\" (click)=\"expandGroup(i, j)\">\r\n                        <div class=\"row p-0\">\r\n                          <!-- <div class=\"col col-sm-11 clickable p-0\" (click)=\"navigateToUrl('/electrical-building-group/'+buildingGroup.buildingGroupID, buildingGroup.buildingGroupID, buildingGroup.buildingGroupName)\"> -->\r\n                          \r\n                          <div class=\"col col-sm-11 clickable p-0\">\r\n                            <span>{{ buildingGroup.buildingGroupName }}</span>\r\n                          </div>\r\n                          <div class=\"col col-sm-1 p-0\">\r\n                            <fa-icon class=\"browse fa-md ml-2 float-right clickable\"  [icon]=\"buildingGroups[i][j]?arrowUp:arrowDown\"></fa-icon>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ul *ngIf=\"buildingGroups[i][j]\" style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n                      <li *ngIf=\"buildingGroup.data.length > 1\">\r\n                        <div class=\"second-level pt-2 pb-2 item pl-2 pr-2 ml-4 clickable\" (click)=\"navigateToUrl('/electrical-building-group/'+buildingGroup.buildingGroupID, buildingGroup.buildingGroupID, buildingGroup.buildingGroupName)\">\r\n                          <span>(All)</span>\r\n                        </div>\r\n                      </li>\r\n                      <li *ngFor=\"let data of buildingGroup.data\">\r\n                        <div *ngIf=\"buildingGroup.data.length != 0\" (click)=\"navigateToUrl('/electrical/'+data.buildingID, data.buildingID, data.buildingName)\" class=\"second-level pt-2 pb-2 item pl-2 pr-2 ml-4 clickable\">\r\n                          {{data.buildingName}}\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n\r\n      <section *ngIf=\"boardLevel == 1\">\r\n        <ul style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n          <li *ngFor=\"let site of datasourse\">\r\n            <div class=\"top-level pt-2 pb-2 pl-3 item\">{{ site.siteName }}</div>\r\n            <ul style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n              <li *ngFor=\"let category of site.siteCategories; let i = index\">\r\n                <div *ngIf=\"category.buildingList.length != 0\" (click)=\"expandCallpse(i)\" [ngStyle]=\"{'background-color': callapseCat[i] ? '#007bff' : '#3c617d'}\" class=\"second-level pt-2 pb-2 pl-2 pr-2 active-item item container\">\r\n                  {{ category.categoryName }}\r\n                  <fa-icon class=\"browse fa-lg ml-3 float-right clickable\" [icon]=\"callapseCat[i]?arrowUp:arrowDown\"></fa-icon>\r\n                </div>\r\n                <ul *ngIf=\"callapseCat[i]\" style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n                  <li *ngFor=\"let buildingGroup of category.buildingList; let j = index\">\r\n                    <div class=\"second-level p-0 ml-2\" [ngStyle]=\"{'background-color': buildingGroups[i][j] ? '#007bff' : '#293946'}\">\r\n                      <div class=\"item pt-2 pb-2 pl-2 pr-2\" (click)=\"expandGroup(i, j)\">\r\n                        <div class=\"row p-0\">\r\n                          <div class=\"col col-sm-11 clickable p-0\" >\r\n                            <span>{{ buildingGroup.buildingGroupName }}</span>\r\n                          </div>\r\n                          <div class=\"col col-sm-1 p-0\">\r\n                            <fa-icon class=\"browse fa-md ml-2 float-right clickable\"  [icon]=\"buildingGroups[i][j]?arrowUp:arrowDown\"></fa-icon>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ul *ngIf=\"buildingGroups[i][j]\" style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n                      <li *ngIf=\"buildingGroup.data.length > 1\">\r\n                        <div class=\"second-level pt-2 pb-2 item pl-2 pr-2 ml-4 clickable\" (click)=\"navigateToUrl('/water-building-group/'+buildingGroup.buildingGroupID, buildingGroup.buildingGroupID, buildingGroup.buildingGroupName)\">\r\n                          <span>(All)</span>\r\n                        </div>\r\n                      </li>\r\n                      <li *ngFor=\"let data of buildingGroup.data\">\r\n                        <div *ngIf=\"buildingGroup.data.length != 0\" (click)=\"navigateToUrl('/water/'+data.buildingID, data.buildingID, data.buildingName)\" class=\"second-level pt-2 pb-2 item pl-2 pr-2 ml-4 clickable\">\r\n                          {{data.buildingName}}\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n\r\n    </div>\r\n  </div>\r\n</app-modal>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/notification-panel/notification-panel.component.html":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/notification-panel/notification-panel.component.html ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-badge-icon (onClick)=\"iconClicked($event)\" [icon]=\"bellIcon\" [badgeText]=\"badgeText\"></app-badge-icon>\r\n<div #panel (onClick)=\"clickout($event)\" *ngIf=\"showPanel\" class=\"notification-panel arrow-top\">\r\n    <!-- <div class=\"d-flex justify-content-between w-100\">\r\n        <p class=\"panel-header\">Notifications</p> <p (click)=\"clearAllNotifications()\" class=\"float-right mt-1 clear-text\">Clear All</p>\r\n        \r\n    </div>\r\n    <div class=\"panel-content\">\r\n        <div *ngFor=\"let item of notifications\" [ngClass]=\"{'notification-item': !isViewedNotification(item), 'notification-item-notviewed': isViewedNotification(item)}\" (mouseenter)=\"removeFromCount(item)\">\r\n            <b class=\"text-warning\">Abnormal usage!</b>, detected value is {{item.SpikeValue}} on {{item.MeterName}}.<br>\r\n            <span class=\"date-time\">{{getMomentAgo(item.AlertTimeStamp)}}</span>\r\n        </div>\r\n    </div> -->\r\n\r\n    <!-- TODO: modify notification panel -->\r\n    <div class=\"panel-header\">\r\n        <div class=\"panel-title\">Notifications</div>\r\n        <div class=\"clear-button\" (click)=\"clearAllNotifications()\">\r\n            <img src=\"../../../assets/img/clear.svg\" alt=\"clear\">\r\n        </div>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n        <div *ngFor=\"let item of notifications\" [ngStyle]=\"{'background-color': !isViewedNotification(item) ? '#293946' : null}\" class=\"notification-card\" (mouseenter)=\"removeFromCount(item)\">\r\n            <div class=\"notification-card-header\">\r\n                <img [src]=\"item.Meter2 != '' ? '../../../assets/img/leakDetection.png' : '../../../assets/img/danger.png'\" alt=\"notification-icon\" class=\"notification-icon\">\r\n                <p class=\"notification-card-title text-warning\" *ngIf=\"item.Meter2 == ''\">Abnormal usage!</p>\r\n                <p class=\"notification-card-title text-warning\" *ngIf=\"item.Meter2 != ''\">Water Leakage!</p>\r\n            </div>\r\n            <hr>\r\n            <div class=\"notification-card-body\">\r\n                <span *ngIf=\"item.Meter2 != ''\">System has detected a possible water leak between {{item.MeterName}} and {{item.Meter2}} meters.</span>\r\n                <span *ngIf=\"item.Meter2 == ''\">System has detected an abnormal usage in {{item.MeterName}}</span>\r\n                <br>\r\n                <span class=\"notification-time\">{{getMomentAgo(item.AlertTimeStamp)}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/pie/pie.component.html":
/*!***********************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/pie/pie.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  width=\"100%\"\r\n  type=\"pie3d\"\r\n  dataFormat=\"JSON\"\r\n  [dataSource]=\"dataSource\"\r\n></fusioncharts>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/print-preview/print-preview.component.html":
/*!*******************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/print-preview/print-preview.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [className]=\"'print-icon '+ className\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><!--! Font Awesome Pro 6.2.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z\"/></svg>\r\n    <div class=\"menu-dropdown\">\r\n        <div class=\"menu-dropdown-inside\">\r\n            <div class=\"menu-dropdown-item\" (click) = \"generateImage()\">\r\n                <span>Export as Image</span>\r\n            </div>\r\n            <div class=\"menu-dropdown-item\" (click) = \"generateImage('pdf')\">\r\n                <span>Export as PDF</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/profile-chart-container/chart-container.component.html":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/profile-chart-container/chart-container.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row pl-0 pr-0\">\r\n  <div class=\"col-md-12 col-lg-12 col-xl-12 pt-2\">\r\n    <div>\r\n      <span class=\"float-left d-inline-block mr-3\"><small>Pick a Range:</small></span>\r\n      <span class=\"float-left\"><date-range-picker [maxDate]=\"today\" [(dateRange)]=\"dateRange\" (dateRangeChange)=\"dateChanged($event)\"></date-range-picker></span>\r\n    </div>\r\n    <div class=\"float-right widget-marge d-none d-xl-block\" *ngIf=\"isCompare\">\r\n      <app-toggle-switch (onChange)=\"onToggleChanged($event)\"><small>Compare</small></app-toggle-switch>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-12 pt-3 pl-2 pr-2 card-bg-color\">\r\n    <div class=\"row  pl-0 pr-0 d-xl-none\">\r\n      <div class=\"col pl-0 pr-0\" *ngIf=\"isCompare\">\r\n        <app-toggle-switch (onChange)=\"onToggleChanged($event)\" class=\"float-right\"><small>Compare</small></app-toggle-switch>\r\n      </div>\r\n    </div>\r\n    <app-grouped-trend *ngIf=\"dataSource\" [dataSourse]=\"dataSource\" [height]=\"450\"></app-grouped-trend>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/profile-chart/profile-chart.component.html":
/*!*******************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/profile-chart/profile-chart.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"chart-card\">\r\n    <div>\r\n        <app-chart-container [isCompare]=\"true\" serviceType=\"1\" [dataSource]=\"dataSource\" (dateChangeEvent)=\"dateChanged($event)\" (compareChange)=\"compareChange($event)\" ></app-chart-container>\r\n        <app-chart-container class=\"pt-6\" *ngIf=\"compare\" serviceType=\"1\" [dataSource]=\"compareDataSource\"  (dateChangeEvent)=\"dateChanged($event)\" [isCompare]=\"false\"></app-chart-container>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/real-time-line/real-time-line.component.html":
/*!*********************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/real-time-line/real-time-line.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  width=\"100%\"\r\n  [height]=\"height\"\r\n  type=\"realtimeline\"\r\n  dataFormat=\"json\"\r\n  [dataSource]=\"dataSource\"\r\n>\r\n</fusioncharts>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/report-form/report-form.component.html":
/*!***************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/report-form/report-form.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"isLoading\" class=\"loading-area\">\r\n    <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n</div>\r\n<div *ngIf=\"!isLoading\" class=\"d-flex justify-content-center form-content\">\r\n    <fieldset class=\"fieldset\">\r\n        <legend>Download Now</legend>\r\n        <form class=\"m-3\" [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n            <div class=\"form-group mr-1 ml-1\">\r\n                <label for=\"locationType\">Location Category</label><br>\r\n                <select class=\"w-100 white-select-box\" formControlName=\"locationType\" id=\"locationType\" (change)=\"onChangedLocation($event)\">\r\n                    <option value=\"1\">Site</option>\r\n                    <option value=\"2\">Building Group</option>\r\n                    <option value=\"3\">Building</option>\r\n                </select>\r\n            </div>\r\n            Location\r\n            <hr>\r\n            <div class=\"form-group\" formGroupName=\"location\">\r\n                <div class=\"mr-1 ml-1\">\r\n                    <label for=\"site\">Site</label><br>\r\n                    <select class=\"w-100 white-select-box\" formControlName=\"site\" id=\"site\" (change)=\"onChangedSite($event)\">\r\n                        <option value=\"1\">NTU</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"d-flex justify-content-around\">\r\n                    <div *ngIf=\"showBuildingGroup\" class=\"mt-3 mr-1 ml-1 w-100\">\r\n                        <label for=\"buildingGroup\">Building Group</label><br>\r\n                        <select class=\"w-100 white-select-box\" formControlName=\"buildingGroup\" id=\"buildingGroup\" (change)=\"onChangedGroup($event.target.value)\">\r\n                            <option *ngFor=\"let buildingGroup of buildingGroups\" [value]=\"buildingGroup.buildingGroupID\">{{buildingGroup.description}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div *ngIf=\"showBuilding\" class=\"mt-3 mr-1 ml-1 w-100\">\r\n                        <label for=\"building\">Building</label><br>\r\n                        <select class=\"w-100 white-select-box\" formControlName=\"building\" id=\"building\" (change)=\"onChangedBuilding($event.target.value)\">\r\n                            <option *ngFor=\"let building of buildings\" [value]=\"building.buildingID\">{{building.buildingName}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            Report Type\r\n            <hr>\r\n            <div class=\"form-group ml-1 d-flex justify-content-between\">\r\n                <div class=\"form-check w-100\">\r\n                    <input formControlName=\"reportType\" class=\"form-check-input\" type=\"radio\" (change)=\"onChangedType($event.target.value)\" id=\"yearly\" value=\"1\" checked>\r\n                    <label class=\"form-check-label\" for=\"yearly\">\r\n                        Yearly\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check w-100\">\r\n                    <input formControlName=\"reportType\" class=\"form-check-input\" type=\"radio\" (change)=\"onChangedType($event.target.value)\" id=\"monthly\" value=\"2\">\r\n                    <label class=\"form-check-label\" for=\"monthly\">\r\n                        Monthly\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            Time\r\n            <hr>\r\n            <div class=\"form-group d-flex justify-content-around\" formGroupName=\"dateTime\">\r\n                <div class=\"w-100 mr-1 ml-1\">\r\n                    <label for=\"year\">Year</label><br>\r\n                    <select class=\"w-100 white-select-box\" formControlName=\"year\" id=\"year\" (change)=\"onChangeYear()\">\r\n                        <option *ngFor=\"let year of years\" [value]=\"year.value\">{{year.year}}</option>\r\n                    </select>\r\n                </div>\r\n                <div *ngIf=\"showMonth\" class=\"w-100 mr-1 ml-1\">\r\n                    <label for=\"month\">Month</label><br>\r\n                    <select class=\"w-100 white-select-box\" formControlName=\"month\" id=\"month\" (change)=\"getDates($event.target.value); onChangeMonth();\">\r\n                        <option *ngFor=\"let month of months\" [value]=\"month.value\">{{month.name}}</option>\r\n                    </select>\r\n                </div>\r\n                <div *ngIf=\"showDate\" class=\"w-100 mr-1 ml-1\">\r\n                    <label for=\"date\">Date</label><br>\r\n                    <select class=\"w-100 white-select-box\" formControlName=\"date\" id=\"date\" (change)=\"onChangeDate()\">\r\n                        <option *ngFor=\"let date of dates\" [value]=\"date\">{{date}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"selectedReportType == tariffReportType\">\r\n                Tariff Details\r\n                <hr>\r\n                <div class=\"form-group\">\r\n                    <ums-tariff [type]=\"selectedType\" [buildingId]=\"selectedBuilding\" [buildingGroupId]=\"selectedBuildingGroup\"></ums-tariff>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-md-12 pl-0 pr-0\">\r\n                    <div class=\"btn-group w-100\" role=\"group\">\r\n                        <button class=\"btn btn-primary w-50 button-border\" (click)=\"regenerate()\" type=\"button\">{{buttonText}}</button>\r\n                        <button [disabled]=\"buttonText == 'Generate'\" class=\"btn btn-primary w-50 button-border\" (click)=\"downloadAsExcel()\" type=\"button\">Download as Excel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </fieldset>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/reports/reports.component.html":
/*!*******************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/reports/reports.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>reports works!</p>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/schedule-download/schedule-download.component.html":
/*!***************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/schedule-download/schedule-download.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"isLoading\" class=\"loading-area\">\r\n  <img  alt=\"loader\" class=\"loading-icon\" src=\"assets/img/loader.svg\" />\r\n</div>\r\n<div *ngIf=\"!isLoading\" class=\"d-flex justify-content-between mt-3  mb-3\">\r\n    <div class=\"form-group field-min-width\">\r\n      <label for=\"levelType\">Location Category</label><br>\r\n      <select class=\"white-select-box\" [(ngModel)]=\"selectedLocation\" (change)=\"changeLocationType($event.target.value)\">\r\n        <option value=\"1\">Site</option>\r\n        <option value=\"2\">Building Group</option>\r\n        <option value=\"3\">Building</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group field-min-width\">\r\n      <label for=\"search\">Search</label><br>\r\n      <input type=\"text\" id=\"search\" [(ngModel)]=\"searchTerm\" class=\"form-control search-box\" placeholder=\"Search...\">\r\n    </div>\r\n  </div>\r\n  <form *ngIf=\"!isLoading\" [formGroup]=\"scheduleForm\">\r\n    <ngx-datatable\r\n    #table\r\n    class=\"dark\"\r\n    [rows]=\"searchByTermAction(rows)\"\r\n    [sortType]=\"SortType.multi\"\r\n    [headerHeight]=\"40\"\r\n    [footerHeight]=\"40\"\r\n    [columnMode]=\"ColumnMode.standard\"\r\n    rowHeight=\"auto\"\r\n    [limit]=\"8\"\r\n    [loadingIndicator]=\"true\"\r\n    [reorderable]=\"true\"\r\n    rowHeight=\"auto\"\r\n  >\r\n    <ngx-datatable-column name=\"Schedule Name\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.scheduleName }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <input formControlName=\"scheduleName\" (change)=\"changeScheduleName(row, $event)\" type=\"text\" class=\"form-control search-box\" placeholder=\"Schedule Name\">\r\n        </div>\r\n      </ng-template>\r\n  \r\n    </ngx-datatable-column>\r\n    <ngx-datatable-column name=\"Report Type\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.reportType }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"reportType\" (click)=\"changeReportType(row, $event)\" class=\"w-100 white-select-box\">\r\n            <option value=\"Daily\">Daily</option>\r\n            <option value=\"Monthly\">Monthly</option>\r\n            <option value=\"Yearly\">Yearly</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n    <ngx-datatable-column name=\"Site\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.site.name }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"site\" class=\"w-100 white-select-box\" (change)=\"changeSite(row, $event.target.value)\">\r\n            <option *ngFor=\"let site of sites\" [value]=\"site.siteID\">{{site.siteName}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n    <ngx-datatable-column name=\"Building Group\" *ngIf=\"selectedLocation == 2 || selectedLocation == 3\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.buildingGroup.name }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"buildingGroup\" class=\"w-100 white-select-box\" (change)=\"changeBuildingGroup(row, $event.target.value)\">\r\n            <option *ngFor=\"let buildingGroup of buildingGroups\" [value]=\"buildingGroup.buildingGroupID\">{{buildingGroup.description}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n    <ngx-datatable-column name=\"Building\" *ngIf=\"selectedLocation == 3\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.building.name }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"building\" class=\"w-100 white-select-box\" (change)=\"changeBuilding(row, $event.target.value)\">\r\n            <option *ngFor=\"let building of buildings\" [value]=\"building.buildingID\">{{building.buildingName}}</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n    <ngx-datatable-column name=\"Starting Date\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.startDate  | date : 'yyyy-MM-dd'}}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <input formControlName=\"startDate\" (change)=\"changeStartingTime(row, $event)\" type=\"date\" min=\"{{today | date : 'yyyy-MM-dd'}}\" class=\"form-control search-box\">\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n    <ngx-datatable-column name=\"Status\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <span *ngIf=\"row.action  != 'insert' && row.action != 'update'\">\r\n          {{ row.status }}\r\n        </span>\r\n        <div *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <select formControlName=\"status\" (click)=\"changeStatus(row, $event)\" class=\"w-100 white-select-box\">\r\n            <option value=\"ACTIVE\" [selected]=\"row.status===null?true:false\">ACTIVE</option>\r\n            <option value=\"INACTIVE\">INACTIVE</option>\r\n          </select>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n    <ngx-datatable-column name=\"Actions\" [width]=\"(tableWidth | async)\">\r\n      <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n        <div  *ngIf=\"row.action  != 'insert' && row.action != 'update'\" class=\"btn-group w-100\" role=\"group\" aria-label=\"Actions\">\r\n          <button  type=\"button\" [disabled]=\"disabledAddEdit\" (click)=\"editRowAction(row)\" [ngClass]=\"{'btn-green': !disabledAddEdit}\" class=\"btn btn-primary btn-sm form-control search-box\">Edit</button>\r\n          <button type=\"button\" [disabled]=\"disabledAddEdit\" (click)=\"deleteRow(row)\" [ngClass]=\"{'btn-red': !disabledAddEdit}\" class=\"btn btn-primary btn-sm form-control search-box\">Delete</button>\r\n        </div>\r\n        <div class=\"btn-group w-100\" role=\"group\" aria-label=\"Actions\" *ngIf=\"row.action  == 'insert' || row.action == 'update'\">\r\n          <button type=\"button\" [disabled]=\"scheduleForm.invalid\" (click)=\"saveRow(row)\" [ngClass]=\"{'btn-green': !scheduleForm.invalid}\" class=\"btn btn-primary btn-sm form-control search-box\">Save</button>\r\n          <button type=\"button\" (click)=\"cancelEditInsertAction(row)\" class=\"btn btn-primary btn-sm btn-red form-control search-box\">Cancel</button>\r\n        </div>\r\n      </ng-template>\r\n    </ngx-datatable-column>\r\n  </ngx-datatable>\r\n  </form>\r\n  <div *ngIf=\"!isLoading\" class=\"d-flex justify-content-end mt-3  mb-3\">\r\n    <button (click)=\"addNewRow()\" [disabled]=\"disabledAddEdit\" type=\"button\" class=\"d-inline-block clickable  btn-sm btn btn-primary mr-2 ml-2 float-left\"><fa-icon [icon]=\"plusIcon\"></fa-icon> Add Schedule</button>\r\n  </div>\r\n  "

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/side-bar/side-bar.component.html":
/*!*********************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/side-bar/side-bar.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"h-100 w-100 position-relative\">\r\n  <div class=\"row\" style=\"height: 100px; display: flex;\">\r\n    <div class=\"col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1 mt-2 d-xl-none d-lg-none\" style=\"position: absolute; z-index: 100;\">\r\n      <fa-icon class=\"browse fa-lg cursor-pointer\" [icon]=\"backArrow\"  (click)=\"toggleSideBar()\"></fa-icon>\r\n    </div>\r\n    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 pl-5 pr-5 pt-4 text-center\">\r\n      <img src=\"/assets/img/logo.png\"  class=\"img-fluid w-75\" alt=\"Logo\">\r\n      <p class=\"text-center\">\r\n        <small>Azbil Singapore</small>\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" style=\"height: calc(100vh - 140px); overflow-y: auto;\">\r\n    <div class=\"col-md-12 col-lg-12 col-xl-12 pl-0 pr-0\">\r\n      <ul class=\"menu top-level\" *ngIf=\"menuItems.length > 0\">\r\n        <li *ngFor=\"let item of menuItems\">\r\n          <span class=\"pl-3 pt-2 pr-3 pb-2 d-block menu-item\" (click)=\"onMainItemSelected(item.url)\" [ngClass]=\"[item.subMenus.length != 0 ? 'inactive' : '', mainItemURL == item.url ? 'active': '']\" [routerLink]=\"item.url == '#' ? [] : [item.url]\" [innerHtml]=\"showProgress(item.item)\"></span>\r\n          <ul *ngIf=\"item.subMenus.length > 0\">\r\n            <li *ngFor=\"let subItem of item.subMenus\">\r\n              <span class=\"pl-5 pt-2 pr-3 pb-2 d-block menu-item sub-menu-item\" (click)=\"onSubItemSelected(subItem.url)\" [ngClass]=\"{'active': subItemURL == subItem.url}\" [routerLink]=\"subItem.url\" [innerHtml]=\"showProgress(subItem.item)\"></span>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div> \r\n  <p class=\"text-center footer-version\">Version {{version}}</p>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.html":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n  width=\"100%\"\r\n  type=\"stackedcolumn3dline\"\r\n  dataFormat=\"JSON\"\r\n  [dataSource]=\"dataSource\"\r\n></fusioncharts>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/substation-navigator/substation-navigator.component.html":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/substation-navigator/substation-navigator.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-modal titleText=\"Locations\">\r\n  <div class=\"row app-navigator\" >\r\n    <div class=\"col-md-12 col-lg-12 col-xl-12 p-0\">\r\n\r\n      <section>\r\n        <ul style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n          <li>\r\n            <div class=\"top-level pt-2 pb-2 pl-3 item\" style=\"padding-left: 10px !important;\">{{ siteName }}</div>\r\n            <ul style=\"margin: 0; padding: 0; list-style-type: none;\">\r\n              <li *ngFor=\"let loop of loops; let i = index\">\r\n                <div (click)=\"navigate(loop.htLoopID, loop.htLoopName)\" class=\"second-level pt-2 pb-2 pl-2 pr-2 active-item item container\">{{ loop.htLoopName }}</div>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n\r\n    </div>\r\n  </div>\r\n</app-modal>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/table/table.component.html":
/*!***************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/table/table.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<ng-container *ngIf=\"!tableData.data\">\r\n  <div class=\"text-center middle-text text-muted\"><img  alt=\"loader\" class=\"loader-icon\" src=\"assets/img/loader.svg\" /></div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"tableData.data\">\r\n  <div class=\"table-content\">\r\n    <table *ngIf=\"tableData.data.length != 0\" class=\"table table-striped table-dark table-width\">\r\n      <thead>\r\n          <tr>\r\n            <th valign=\"middle\" [innerHTML]=\"colHead\" *ngFor=\"let colHead of tableData.columns\"></th>\r\n          </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td  [attr.colspan]=\"tableData.columns.length\">\r\n            <div class=\"scroll-tbody\" [style.height.px]=\"isSite ? 700 : 560\">\r\n              <table class=\" table-dark w-100\">\r\n                <tr *ngFor=\"let row of tableData.data;  let i = index\">\r\n                  <td *ngFor=\"let data of row\">{{ getValue(data) }}</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"tableData.data\">\r\n  <div *ngIf=\"tableData.data.length == 0\" class=\"text-center middle-text text-muted\"><small>No data to display</small> </div>\r\n</ng-container>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/tariff/tariff.component.html":
/*!*****************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/tariff/tariff.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <div class=\"col-md-12 pl-0 pr-0\">\r\n        <table class=\"w-100\">\r\n            <tbody>\r\n                <tr>\r\n                    <td class=\"info\">Tariff: </td>\r\n                    <td class=\"info\">S$ {{ currentTariff | number : '1.2-2' }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"info\">Effective  Since: </td>\r\n                    <td class=\"info\">{{ currentEffectiveFrom | date: 'MMM, yyyy' }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td class=\"pt-3 pb-2\">\r\n                        Check to update tariff\r\n                    </td>\r\n                    <td>\r\n                        <input [(ngModel)]=\"isEdit\" type=\"checkbox\" class=\"mt-2 float-right\">\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"isEdit\" class=\"animate__bounceIn\">\r\n                    <td colspan=\"2\">\r\n                        <div class=\"input-group\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\">S$</span>\r\n                            </div>\r\n                            <input type=\"number\" [(ngModel)]=\"tariff\" class=\"form-control\" min=\"0\" name=\"tariff\" step='0.01'>\r\n                            <div class=\"input-group-append\">\r\n                                <button class=\"btn btn-success clickable\" (click)=\"updateTariff()\">Update</button>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"isEdit\" class=\"animate__bounceIn\">\r\n                    <td class=\"pt-2\">Apply since: </td>\r\n                    <td class=\"pt-2\">{{ effectiveFrom | date: 'MMM, yyyy' }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/toggle-button/toggle-button.component.html":
/*!*******************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/toggle-button/toggle-button.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<input type=\"checkbox\" [attr.id]=\"key\" [(ngModel)]=\"switch\" (change)=\"switchChange.emit($event.target.checked)\">\r\n<label class=\"toggle-button-switch\" [attr.for]=\"key\"></label>\r\n<label class=\"toggle-button-text\" [attr.for]=\"key\">\r\n    <div class=\"toggle-button-text-on\">O</div>\r\n    <div class=\"toggle-button-text-off\">O</div>\r\n</label>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/toggle-switch/toggle-switch.component.html":
/*!*******************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/toggle-switch/toggle-switch.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row flex-nowrap align-items-center justify-content-center\">\r\n  <label class=\"label-text\"><ng-content></ng-content></label>\r\n  <label class=\"switch\">\r\n   <input [disabled] = \"disabled\" [(ngModel)]=\"toggle\" (change)=\"toggleChanged()\" type=\"checkbox\">\r\n  <span class=\"slider round\"></span>\r\n  </label>\r\n</div>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/total-comsumption/total-comsumption.component.html":
/*!***************************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/total-comsumption/total-comsumption.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"total-consumption\">\r\n    <span class=\"label\">Current Total Consumption</span>\r\n    <span class=\"label-total\" [style.color]=\"color\">{{value}}{{suffix}} <span [innerHTML]=\"unit\"></span></span>\r\n</div>"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/trend/trend.component.html":
/*!***************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/trend/trend.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n    width=\"100%\"\r\n    type=\"Column2D\"\r\n    dataFormat=\"JSON\"\r\n    [dataSource]=\"dataSource\"\r\n></fusioncharts>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/trend3d/trend3d.component.html":
/*!*******************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/trend3d/trend3d.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n    width=\"100%\"\r\n    type=\"column3d\"\r\n    dataFormat=\"JSON\"\r\n    [dataSource]=\"dataSource\"\r\n></fusioncharts>\r\n\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/version/version.component.html":
/*!*******************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/version/version.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-modal titleText=\"Change Log\">\r\n  <div class=\"row\" style=\"height: 100%\">\r\n    <div class=\"col-md-12 col-lg-12 col-xl-12 p-0\">\r\n      <section style=\"height: 100%\">\r\n        <object class=\"pdf\" data=\"assets/docs/release.pdf\" type=\"application/pdf\" width=\"100%\" height=\"100%\">\r\n          alt : <a href=\"assets/docs/release.pdf\">Release Note.pdf</a>\r\n        </object>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</app-modal>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/zoomline/zoomline.component.html":
/*!*********************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/zoomline/zoomline.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n    type=\"zoomline\"\r\n    [width]=\"(chartWidth | async)\"\r\n    [height]=\"height\"\r\n    dataFormat=\"JSON\"\r\n    [dataSource]=\"dataSource\"\r\n    placeholder=\"Data Processing...\"\r\n></fusioncharts>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/zoomlinedy/zoomlinedy.component.html":
/*!*************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/zoomlinedy/zoomlinedy.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n    type=\"zoomlinedy\"\r\n    [width]=\"(chartWidth | async)\"\r\n    height=\"80%\"\r\n    dataFormat=\"JSON\"\r\n    [dataSource]=\"dataSource\"\r\n    placeholder=\"Data Processing...\"\r\n></fusioncharts>\r\n"

/***/ }),

/***/ "../node_modules/raw-loader/index.js!./app/widgets/zoomscatter/zoomscatter.component.html":
/*!***************************************************************************************!*\
  !*** ../node_modules/raw-loader!./app/widgets/zoomscatter/zoomscatter.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<fusioncharts\r\n    type=\"zoomscatter\"\r\n    renderAt=\"chartContainer\"\r\n    [width]=\"(chartWidth | async)\"\r\n    height=\"80%\"\r\n    dataFormat=\"json\"\r\n    [dataSource]=\"dataSource\"\r\n    placeholder=\"Data Processing...\"\r\n></fusioncharts>\r\n"

/***/ }),

/***/ "./app/app-routing.module.ts":
/*!***********************************!*\
  !*** ./app/app-routing.module.ts ***!
  \***********************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _dashboards_electrical_dashboard_electrical_dashboard_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dashboards/electrical-dashboard/electrical-dashboard.component */ "./app/dashboards/electrical-dashboard/electrical-dashboard.component.ts");
/* harmony import */ var _dashboards_water_dashboard_water_dashboard_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dashboards/water-dashboard/water-dashboard.component */ "./app/dashboards/water-dashboard/water-dashboard.component.ts");
/* harmony import */ var _dashboards_site_electrical_dashboard_site_electrical_dashboard_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dashboards/site-electrical-dashboard/site-electrical-dashboard.component */ "./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.ts");
/* harmony import */ var _dashboards_site_water_dashboard_site_water_dashboard_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dashboards/site-water-dashboard/site-water-dashboard.component */ "./app/dashboards/site-water-dashboard/site-water-dashboard.component.ts");
/* harmony import */ var _dashboards_overview_overview_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dashboards/overview/overview.component */ "./app/dashboards/overview/overview.component.ts");
/* harmony import */ var _dashboards_chiller_plant_chiller_plant_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dashboards/chiller-plant/chiller-plant.component */ "./app/dashboards/chiller-plant/chiller-plant.component.ts");
/* harmony import */ var _widgets_image_map_image_map_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./widgets/image-map/image-map.component */ "./app/widgets/image-map/image-map.component.ts");
/* harmony import */ var _widgets_reports_reports_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./widgets/reports/reports.component */ "./app/widgets/reports/reports.component.ts");
/* harmony import */ var _dashboards_electrical_group_dashboard_electrical_group_dashboard_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dashboards/electrical-group-dashboard/electrical-group-dashboard.component */ "./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.ts");
/* harmony import */ var _dashboards_water_group_dashboard_water_group_dashboard_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dashboards/water-group-dashboard/water-group-dashboard.component */ "./app/dashboards/water-group-dashboard/water-group-dashboard.component.ts");
/* harmony import */ var _dashboards_ht_electrical_loop_dashboard_ht_electrical_loop_dashboard_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component */ "./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.ts");
/* harmony import */ var _dashboards_alerts_dashboard_alerts_dashboard_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./dashboards/alerts-dashboard/alerts-dashboard.component */ "./app/dashboards/alerts-dashboard/alerts-dashboard.component.ts");
/* harmony import */ var _dashboards_ht_electrical_site_dashboard_ht_electrical_site_dashboard_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component */ "./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.ts");
/* harmony import */ var src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var _dashboards_carbon_footprint_carbon_footprint_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./dashboards/carbon-footprint/carbon-footprint.component */ "./app/dashboards/carbon-footprint/carbon-footprint.component.ts");
/* harmony import */ var _dashboards_chiller_efficiency_chiller_efficiency_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./dashboards/chiller-efficiency/chiller-efficiency.component */ "./app/dashboards/chiller-efficiency/chiller-efficiency.component.ts");
/* harmony import */ var _dashboards_condenser_performance_condenser_performance_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./dashboards/condenser-performance/condenser-performance.component */ "./app/dashboards/condenser-performance/condenser-performance.component.ts");
/* harmony import */ var _dashboards_heat_balance_heat_balance_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./dashboards/heat-balance/heat-balance.component */ "./app/dashboards/heat-balance/heat-balance.component.ts");
/* harmony import */ var _dashboards_electrical_report_electrical_report_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./dashboards/electrical-report/electrical-report.component */ "./app/dashboards/electrical-report/electrical-report.component.ts");
/* harmony import */ var _dashboards_water_report_water_report_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./dashboards/water-report/water-report.component */ "./app/dashboards/water-report/water-report.component.ts");
/* harmony import */ var _dashboards_configurations_configurations_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dashboards/configurations/configurations.component */ "./app/dashboards/configurations/configurations.component.ts");
/* harmony import */ var _error_pages_maintainence_maintainence_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./error_pages/maintainence/maintainence.component */ "./app/error_pages/maintainence/maintainence.component.ts");
/* harmony import */ var _dashboards_power_meter_power_meter_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./dashboards/power-meter/power-meter.component */ "./app/dashboards/power-meter/power-meter.component.ts");


























const routes = [
    { path: '', redirectTo: 'overview', pathMatch: 'full' },
    { path: 'overview', component: _dashboards_overview_overview_component__WEBPACK_IMPORTED_MODULE_7__["OverviewComponent"] },
    {
        path: 'site-electrical',
        component: _dashboards_site_electrical_dashboard_site_electrical_dashboard_component__WEBPACK_IMPORTED_MODULE_5__["SiteElectricalDashboardComponent"],
        data: {
            electricalType: src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_16__["DashboardType"].LOW_TENSION
        }
    },
    {
        path: 'electrical-building-group/:id',
        component: _dashboards_electrical_group_dashboard_electrical_group_dashboard_component__WEBPACK_IMPORTED_MODULE_11__["ElectricalGroupDashboardComponent"],
        data: {
            electricalType: src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_16__["DashboardType"].LOW_TENSION
        }
    },
    { path: 'water-building-group/:id', component: _dashboards_water_group_dashboard_water_group_dashboard_component__WEBPACK_IMPORTED_MODULE_12__["WaterGroupDashboardComponent"] },
    { path: 'site-water', component: _dashboards_site_water_dashboard_site_water_dashboard_component__WEBPACK_IMPORTED_MODULE_6__["SiteWaterDashboardComponent"] },
    { path: 'electrical/:id', component: _dashboards_electrical_dashboard_electrical_dashboard_component__WEBPACK_IMPORTED_MODULE_3__["ElectricalDashboardComponent"] },
    { path: 'water/:id', component: _dashboards_water_dashboard_water_dashboard_component__WEBPACK_IMPORTED_MODULE_4__["WaterDashboardComponent"] },
    { path: 'plant', component: _dashboards_chiller_plant_chiller_plant_component__WEBPACK_IMPORTED_MODULE_8__["ChillerPlantComponent"] },
    { path: 'map/:type/:building', component: _widgets_image_map_image_map_component__WEBPACK_IMPORTED_MODULE_9__["ImageMapComponent"] },
    { path: 'reports', component: _widgets_reports_reports_component__WEBPACK_IMPORTED_MODULE_10__["ReportsComponent"] },
    { path: 'alerts', component: _dashboards_alerts_dashboard_alerts_dashboard_component__WEBPACK_IMPORTED_MODULE_14__["AlertsDashboardComponent"] },
    { path: 'maintenence', component: _error_pages_maintainence_maintainence_component__WEBPACK_IMPORTED_MODULE_24__["MaintainenceComponent"] },
    {
        path: 'ht-electrical-loop/:id',
        component: _dashboards_ht_electrical_loop_dashboard_ht_electrical_loop_dashboard_component__WEBPACK_IMPORTED_MODULE_13__["HtElectricalLoopDashboardComponent"],
        data: {
            electricalType: src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_16__["DashboardType"].HIGH_TENSION,
        }
    },
    { path: 'alerts', component: _dashboards_alerts_dashboard_alerts_dashboard_component__WEBPACK_IMPORTED_MODULE_14__["AlertsDashboardComponent"] },
    {
        path: 'ht-site-electrical',
        component: _dashboards_ht_electrical_site_dashboard_ht_electrical_site_dashboard_component__WEBPACK_IMPORTED_MODULE_15__["HtElectricalSiteDashboardComponent"],
        data: {
            electricalType: src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_16__["DashboardType"].HIGH_TENSION,
        }
    },
    { path: 'heat-balance', component: _dashboards_heat_balance_heat_balance_component__WEBPACK_IMPORTED_MODULE_20__["HeatBalanceComponent"] },
    { path: 'carbon-footprint', component: _dashboards_carbon_footprint_carbon_footprint_component__WEBPACK_IMPORTED_MODULE_17__["CarbonFootprintComponent"] },
    { path: 'chiller-efficiency', component: _dashboards_chiller_efficiency_chiller_efficiency_component__WEBPACK_IMPORTED_MODULE_18__["ChillerEfficiencyComponent"] },
    { path: 'condenser-performance', component: _dashboards_condenser_performance_condenser_performance_component__WEBPACK_IMPORTED_MODULE_19__["CondenserPerformanceComponent"] },
    { path: 'electrical-report', component: _dashboards_electrical_report_electrical_report_component__WEBPACK_IMPORTED_MODULE_21__["ElectricalReportComponent"] },
    { path: 'water-report', component: _dashboards_water_report_water_report_component__WEBPACK_IMPORTED_MODULE_22__["WaterReportComponent"] },
    { path: 'configurations', component: _dashboards_configurations_configurations_component__WEBPACK_IMPORTED_MODULE_23__["ConfigurationsComponent"] },
    { path: 'water-report', component: _dashboards_water_report_water_report_component__WEBPACK_IMPORTED_MODULE_22__["WaterReportComponent"] },
    { path: 'power-meter', component: _dashboards_power_meter_power_meter_component__WEBPACK_IMPORTED_MODULE_25__["PowerMeterComponent"] },
];
let AppRoutingModule = class AppRoutingModule {
};
AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], AppRoutingModule);



/***/ }),

/***/ "./app/app.component.scss":
/*!********************************!*\
  !*** ./app/app.component.scss ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.wrapper {\n  align-items: stretch;\n  overflow-x: hidden;\n}\n\n#side-bar {\n  margin-left: -250px;\n  width: 250px;\n  min-width: 220px;\n  height: 100vh;\n  background-color: #242c33;\n  z-index: 99999;\n  transition: all ease-in-out 0.3s;\n}\n\n#side-bar.active {\n  margin-left: 0;\n}\n\n#menu-toggle {\n  margin-left: 250px;\n  background-color: #fff;\n  position: absolute;\n}\n\n::ng-deep .modal-width .modal-dialog {\n  max-width: 60% !important;\n  width: 60% !important;\n}\n\n::ng-deep .config-modal-width .modal-dialog {\n  max-width: 45% !important;\n  width: 45% !important;\n}\n\n.show-overlay {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 0;\n}\n\n.show-overlay .hide-overlay {\n  z-index: -1;\n}\n\n.push-side-bar {\n  position: relative;\n  z-index: 2;\n}\n\n.overlay-side-bar {\n  position: fixed;\n  z-index: 2;\n}\n\n.notification-card {\n  color: #fff;\n  min-height: 80px;\n  width: 350px;\n  display: flex;\n  position: relative;\n}\n\n.notification-card .notification-icon-container {\n  width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.notification-card .notification-text {\n  padding-left: 10px;\n  padding-right: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.notification-card .notification-text .notification-message {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.notification-card .notification-text .footer-texts {\n  display: flex;\n  align-items: center;\n}\n\n.notification-card .notification-text .footer-texts .more-text {\n  cursor: pointer;\n  text-decoration: underline;\n}\n\n.notification-card .notification-text .footer-texts .moment-text {\n  color: #9e9e9e;\n}\n\n.notification-card .close-button {\n  position: absolute;\n  right: 0;\n  top: -10px;\n}\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./app/app.component.ts":
/*!******************************!*\
  !*** ./app/app.component.ts ***!
  \******************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _services_initial_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _aspnet_signalr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aspnet/signalr */ "../node_modules/@aspnet/signalr/dist/esm/index.js");
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");
/* harmony import */ var _models_notification__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./models/notification */ "./app/models/notification.ts");
/* harmony import */ var _store_navigation_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./store/navigation.service */ "./app/store/navigation.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! moment */ "../node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_widgets_leakage_information_leakage_information_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/widgets/leakage-information/leakage-information.component */ "./app/widgets/leakage-information/leakage-information.component.ts");












let AppComponent = class AppComponent {
    constructor(headerService, initialService, router, notifierService, navigationStore, modalService) {
        this.headerService = headerService;
        this.initialService = initialService;
        this.router = router;
        this.notifierService = notifierService;
        this.navigationStore = navigationStore;
        this.modalService = modalService;
        this.ldPopupData = {
            time: undefined,
            meters: undefined,
            maxError: undefined,
            error: undefined,
            direction: undefined
        };
        this.headerService.isSideBarActive.subscribe(isActive => {
            this.isSideMenuActive = isActive;
        });
        if (this.initialService.isUnderMaintenece()) {
            this.router.navigate(['maintenence']);
            this.isUnderMaintenence = initialService.isUnderMaintenece();
        }
        this.notifier = this.notifierService;
    }
    ngOnInit() {
        this._hubConnection = new _aspnet_signalr__WEBPACK_IMPORTED_MODULE_5__["HubConnectionBuilder"]().withUrl(`${this.initialService.getHost()}/notify`).build();
        this._hubConnection
            .start()
            .then(() => console.log('Connection started!'))
            .catch(err => console.log('Error while establishing connection :('));
        this._hubConnection.on('BroadcastMessage', (MeterName, SpikeValue, BenchmarkValue, AlertTimeStamp) => {
            const notification = new _models_notification__WEBPACK_IMPORTED_MODULE_7__["default"](MeterName, SpikeValue, BenchmarkValue, AlertTimeStamp, undefined, undefined, undefined);
            this.navigationStore.addNotification(notification);
            if (this.navigationStore.notifications.length >= 100) {
                this.navigationStore.removeOldestNotification();
            }
            this.time = `${moment__WEBPACK_IMPORTED_MODULE_9___default()(new Date(AlertTimeStamp)).fromNow()}`;
            this.notifier.show({
                message: `System has detected an abnormal usage in ${MeterName}.`,
                type: 'default',
                template: this.normalNotificationTmpl
            });
        });
        this._hubConnection.on('BroadcastRingMeterAlert', (meter1, meter2, error, maxError, to, from, id, type, directionId) => {
            const notification = new _models_notification__WEBPACK_IMPORTED_MODULE_7__["default"](meter1, error, maxError, from, meter2, to, directionId);
            this.navigationStore.addNotification(notification);
            if (this.navigationStore.notifications.length >= 100) {
                this.navigationStore.removeOldestNotification();
            }
            this.time = `${moment__WEBPACK_IMPORTED_MODULE_9___default()(new Date(to)).fromNow()}`;
            this.notifier.show({
                message: `System has detected a possible water leak between ${meter1} and ${meter2} meters.`,
                type: 'default',
                template: this.ldNotificationTmpl
            });
            this.ldPopupData.meters = `${meter1} and ${meter2}`;
            this.ldPopupData.error = error;
            this.ldPopupData.maxError = maxError;
            this.ldPopupData.direction = directionId;
            this.ldPopupData.time = `${moment__WEBPACK_IMPORTED_MODULE_9___default()(from).format('MM/DD/YYYY h:mm A')} to ${moment__WEBPACK_IMPORTED_MODULE_9___default()(to).format('MM/DD/YYYY h:mm: A')}`;
        });
        this.headerService.panelView.subscribe(view => this.showPanel = view);
    }
    onClickMore() {
        this.notifier.hideAll();
        const modalRef = this.modalService.open(src_app_widgets_leakage_information_leakage_information_component__WEBPACK_IMPORTED_MODULE_11__["LeakageInformationComponent"], { size: 'lg', centered: true });
        modalRef.componentInstance.data = this.ldPopupData;
        modalRef.result.then(() => { }, () => { });
    }
    closeNotification() {
        this.notifier.hideAll();
    }
    overlayClicked() {
        this.isSideMenuActive = false;
    }
    detectmob() {
        if (window.innerWidth <= 800) {
            return true;
        }
        else {
            return false;
        }
    }
};
AppComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_3__["InitialService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_6__["NotifierService"] },
    { type: _store_navigation_service__WEBPACK_IMPORTED_MODULE_8__["NavigationService"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__["NgbModal"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('normalNotification', { static: true })
], AppComponent.prototype, "normalNotificationTmpl", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('ldNotification', { static: true })
], AppComponent.prototype, "ldNotificationTmpl", void 0);
AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: __webpack_require__(/*! raw-loader!./app.component.html */ "../node_modules/raw-loader/index.js!./app/app.component.html"),
        styles: [__webpack_require__(/*! ./app.component.scss */ "./app/app.component.scss")]
    })
], AppComponent);



/***/ }),

/***/ "./app/app.module.ts":
/*!***************************!*\
  !*** ./app/app.module.ts ***!
  \***************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "../node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser/animations */ "../node_modules/@angular/platform-browser/fesm2015/animations.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var angular_fusioncharts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular-fusioncharts */ "../node_modules/angular-fusioncharts/index.js");
/* harmony import */ var fusioncharts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! fusioncharts */ "../node_modules/fusioncharts/fusioncharts.js");
/* harmony import */ var fusioncharts__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(fusioncharts__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var fusioncharts_fusioncharts_widgets__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! fusioncharts/fusioncharts.widgets */ "../node_modules/fusioncharts/fusioncharts.widgets.js");
/* harmony import */ var fusioncharts_fusioncharts_widgets__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(fusioncharts_fusioncharts_widgets__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var fusioncharts_fusioncharts_charts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! fusioncharts/fusioncharts.charts */ "../node_modules/fusioncharts/fusioncharts.charts.js");
/* harmony import */ var fusioncharts_fusioncharts_charts__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(fusioncharts_fusioncharts_charts__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var fusioncharts_fusioncharts_timeseries__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! fusioncharts/fusioncharts.timeseries */ "../node_modules/fusioncharts/fusioncharts.timeseries.js");
/* harmony import */ var fusioncharts_fusioncharts_timeseries__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(fusioncharts_fusioncharts_timeseries__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var fusioncharts_themes_fusioncharts_theme_carbon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! fusioncharts/themes/fusioncharts.theme.carbon */ "../node_modules/fusioncharts/themes/fusioncharts.theme.carbon.js");
/* harmony import */ var fusioncharts_themes_fusioncharts_theme_carbon__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(fusioncharts_themes_fusioncharts_theme_carbon__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var fusioncharts_fusioncharts_excelexport__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! fusioncharts/fusioncharts.excelexport */ "../node_modules/fusioncharts/fusioncharts.excelexport.js");
/* harmony import */ var fusioncharts_fusioncharts_excelexport__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(fusioncharts_fusioncharts_excelexport__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var fusioncharts_fusioncharts_zoomscatter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! fusioncharts/fusioncharts.zoomscatter */ "../node_modules/fusioncharts/fusioncharts.zoomscatter.js");
/* harmony import */ var fusioncharts_fusioncharts_zoomscatter__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(fusioncharts_fusioncharts_zoomscatter__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var fusioncharts_fusioncharts_zoomline__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! fusioncharts/fusioncharts.zoomline */ "../node_modules/fusioncharts/fusioncharts.zoomline.js");
/* harmony import */ var fusioncharts_fusioncharts_zoomline__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(fusioncharts_fusioncharts_zoomline__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @fortawesome/angular-fontawesome */ "../node_modules/@fortawesome/angular-fontawesome/fesm2015/angular-fontawesome.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./app-routing.module */ "./app/app-routing.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./app.component */ "./app/app.component.ts");
/* harmony import */ var _widgets_header_header_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./widgets/header/header.component */ "./app/widgets/header/header.component.ts");
/* harmony import */ var _widgets_navigator_navigator_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./widgets/navigator/navigator.component */ "./app/widgets/navigator/navigator.component.ts");
/* harmony import */ var _dashboards_electrical_dashboard_electrical_dashboard_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dashboards/electrical-dashboard/electrical-dashboard.component */ "./app/dashboards/electrical-dashboard/electrical-dashboard.component.ts");
/* harmony import */ var _dashboards_water_dashboard_water_dashboard_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./dashboards/water-dashboard/water-dashboard.component */ "./app/dashboards/water-dashboard/water-dashboard.component.ts");
/* harmony import */ var _widgets_meter_tree_meter_tree_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./widgets/meter-tree/meter-tree.component */ "./app/widgets/meter-tree/meter-tree.component.ts");
/* harmony import */ var _widgets_reports_reports_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./widgets/reports/reports.component */ "./app/widgets/reports/reports.component.ts");
/* harmony import */ var _widgets_trend_trend_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./widgets/trend/trend.component */ "./app/widgets/trend/trend.component.ts");
/* harmony import */ var _widgets_pie_pie_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./widgets/pie/pie.component */ "./app/widgets/pie/pie.component.ts");
/* harmony import */ var _widgets_multi_level_pie_multi_level_pie_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./widgets/multi-level-pie/multi-level-pie.component */ "./app/widgets/multi-level-pie/multi-level-pie.component.ts");
/* harmony import */ var _widgets_doughnut2d_doughnut2d_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./widgets/doughnut2d/doughnut2d.component */ "./app/widgets/doughnut2d/doughnut2d.component.ts");
/* harmony import */ var _widgets_data_pointer_data_pointer_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./widgets/data-pointer/data-pointer.component */ "./app/widgets/data-pointer/data-pointer.component.ts");
/* harmony import */ var _dashboards_site_electrical_dashboard_site_electrical_dashboard_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./dashboards/site-electrical-dashboard/site-electrical-dashboard.component */ "./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.ts");
/* harmony import */ var _dashboards_site_water_dashboard_site_water_dashboard_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./dashboards/site-water-dashboard/site-water-dashboard.component */ "./app/dashboards/site-water-dashboard/site-water-dashboard.component.ts");
/* harmony import */ var _widgets_modal_modal_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./widgets/modal/modal.component */ "./app/widgets/modal/modal.component.ts");
/* harmony import */ var _widgets_table_table_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./widgets/table/table.component */ "./app/widgets/table/table.component.ts");
/* harmony import */ var _widgets_side_bar_side_bar_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./widgets/side-bar/side-bar.component */ "./app/widgets/side-bar/side-bar.component.ts");
/* harmony import */ var _dashboards_overview_overview_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./dashboards/overview/overview.component */ "./app/dashboards/overview/overview.component.ts");
/* harmony import */ var _widgets_indicator_indicator_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./widgets/indicator/indicator.component */ "./app/widgets/indicator/indicator.component.ts");
/* harmony import */ var _widgets_trend3d_trend3d_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./widgets/trend3d/trend3d.component */ "./app/widgets/trend3d/trend3d.component.ts");
/* harmony import */ var _widgets_stackedcolumn3dline_stackedcolumn3dline_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./widgets/stackedcolumn3dline/stackedcolumn3dline.component */ "./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.ts");
/* harmony import */ var _dashboards_chiller_plant_chiller_plant_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./dashboards/chiller-plant/chiller-plant.component */ "./app/dashboards/chiller-plant/chiller-plant.component.ts");
/* harmony import */ var _widgets_image_map_image_map_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./widgets/image-map/image-map.component */ "./app/widgets/image-map/image-map.component.ts");
/* harmony import */ var _widgets_grouped_trend_grouped_trend_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./widgets/grouped-trend/grouped-trend.component */ "./app/widgets/grouped-trend/grouped-trend.component.ts");
/* harmony import */ var _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./widgets/date-range-picker/public-api */ "./app/widgets/date-range-picker/public-api.ts");
/* harmony import */ var _widgets_profile_chart_profile_chart_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./widgets/profile-chart/profile-chart.component */ "./app/widgets/profile-chart/profile-chart.component.ts");
/* harmony import */ var _widgets_linear_scale_linear_scale_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./widgets/linear-scale/linear-scale.component */ "./app/widgets/linear-scale/linear-scale.component.ts");
/* harmony import */ var _widgets_multi_series_multi_series_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./widgets/multi-series/multi-series.component */ "./app/widgets/multi-series/multi-series.component.ts");
/* harmony import */ var _widgets_real_time_line_real_time_line_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./widgets/real-time-line/real-time-line.component */ "./app/widgets/real-time-line/real-time-line.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _widgets_alerts_alerts_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./widgets/alerts/alerts.component */ "./app/widgets/alerts/alerts.component.ts");
/* harmony import */ var _dashboards_alerts_dashboard_alerts_dashboard_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./dashboards/alerts-dashboard/alerts-dashboard.component */ "./app/dashboards/alerts-dashboard/alerts-dashboard.component.ts");
/* harmony import */ var _dashboards_solar_solar_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./dashboards/solar/solar.component */ "./app/dashboards/solar/solar.component.ts");
/* harmony import */ var _dashboards_reports_dashboard_reports_dashboard_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./dashboards/reports-dashboard/reports-dashboard.component */ "./app/dashboards/reports-dashboard/reports-dashboard.component.ts");
/* harmony import */ var _widgets_toggle_switch_toggle_switch_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./widgets/toggle-switch/toggle-switch.component */ "./app/widgets/toggle-switch/toggle-switch.component.ts");
/* harmony import */ var _services_initial_service__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _widgets_profile_chart_container_chart_container_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./widgets/profile-chart-container/chart-container.component */ "./app/widgets/profile-chart-container/chart-container.component.ts");
/* harmony import */ var _widgets_version_version_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./widgets/version/version.component */ "./app/widgets/version/version.component.ts");
/* harmony import */ var _widgets_linear_scale_gradient_linear_scale_gradient_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./widgets/linear-scale-gradient/linear-scale-gradient.component */ "./app/widgets/linear-scale-gradient/linear-scale-gradient.component.ts");
/* harmony import */ var _dashboards_electrical_group_dashboard_electrical_group_dashboard_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./dashboards/electrical-group-dashboard/electrical-group-dashboard.component */ "./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.ts");
/* harmony import */ var _widgets_group_equipment_breakdown_group_equipment_breakdown_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./widgets/group-equipment-breakdown/group-equipment-breakdown.component */ "./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.ts");
/* harmony import */ var _dashboards_water_group_dashboard_water_group_dashboard_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./dashboards/water-group-dashboard/water-group-dashboard.component */ "./app/dashboards/water-group-dashboard/water-group-dashboard.component.ts");
/* harmony import */ var _widgets_dynamic_date_label_meter_tree_date_view_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./widgets/dynamic-date-label/meter-tree-date-view.component */ "./app/widgets/dynamic-date-label/meter-tree-date-view.component.ts");
/* harmony import */ var src_util_interceptor__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! src/util/interceptor */ "./util/interceptor.ts");
/* harmony import */ var _widgets_configuration_table_configuration_table_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./widgets/configuration-table/configuration-table.component */ "./app/widgets/configuration-table/configuration-table.component.ts");
/* harmony import */ var _widgets_form_container_form_container_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./widgets/form-container/form-container.component */ "./app/widgets/form-container/form-container.component.ts");
/* harmony import */ var _widgets_equipment_breakdown_filter_equipment_breakdown_filter_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./widgets/equipment-breakdown-filter/equipment-breakdown-filter.component */ "./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.ts");
/* harmony import */ var _widgets_combo_box_combo_box_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./widgets/combo-box/combo-box.component */ "./app/widgets/combo-box/combo-box.component.ts");
/* harmony import */ var _widgets_input_field_input_field_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./widgets/input-field/input-field.component */ "./app/widgets/input-field/input-field.component.ts");
/* harmony import */ var _widgets_equipment_breakdown_filter_group_equipment_breakdown_filter_group_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component */ "./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.ts");
/* harmony import */ var _widgets_breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./widgets/breadcrumb/breadcrumb.component */ "./app/widgets/breadcrumb/breadcrumb.component.ts");
/* harmony import */ var _dashboards_ht_electrical_loop_dashboard_ht_electrical_loop_dashboard_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component */ "./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.ts");
/* harmony import */ var _dashboards_ht_electrical_site_dashboard_ht_electrical_site_dashboard_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component */ "./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.ts");
/* harmony import */ var _widgets_substation_navigator_substation_navigator_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./widgets/substation-navigator/substation-navigator.component */ "./app/widgets/substation-navigator/substation-navigator.component.ts");
/* harmony import */ var _widgets_floating_button_floating_button_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./widgets/floating-button/floating-button.component */ "./app/widgets/floating-button/floating-button.component.ts");
/* harmony import */ var _widgets_ht_equipment_breakdown_filter_ht_equipment_breakdown_filter_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component */ "./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.ts");
/* harmony import */ var _dashboards_carbon_footprint_carbon_footprint_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./dashboards/carbon-footprint/carbon-footprint.component */ "./app/dashboards/carbon-footprint/carbon-footprint.component.ts");
/* harmony import */ var _dashboards_chiller_efficiency_chiller_efficiency_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./dashboards/chiller-efficiency/chiller-efficiency.component */ "./app/dashboards/chiller-efficiency/chiller-efficiency.component.ts");
/* harmony import */ var _dashboards_condenser_performance_condenser_performance_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./dashboards/condenser-performance/condenser-performance.component */ "./app/dashboards/condenser-performance/condenser-performance.component.ts");
/* harmony import */ var _widgets_zoomline_zoomline_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./widgets/zoomline/zoomline.component */ "./app/widgets/zoomline/zoomline.component.ts");
/* harmony import */ var _widgets_zoomlinedy_zoomlinedy_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./widgets/zoomlinedy/zoomlinedy.component */ "./app/widgets/zoomlinedy/zoomlinedy.component.ts");
/* harmony import */ var _widgets_zoomscatter_zoomscatter_component__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./widgets/zoomscatter/zoomscatter.component */ "./app/widgets/zoomscatter/zoomscatter.component.ts");
/* harmony import */ var _widgets_data_table_data_table_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./widgets/data-table/data-table.component */ "./app/widgets/data-table/data-table.component.ts");
/* harmony import */ var _dashboards_heat_balance_heat_balance_component__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./dashboards/heat-balance/heat-balance.component */ "./app/dashboards/heat-balance/heat-balance.component.ts");
/* harmony import */ var _dashboards_electrical_report_electrical_report_component__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./dashboards/electrical-report/electrical-report.component */ "./app/dashboards/electrical-report/electrical-report.component.ts");
/* harmony import */ var _dashboards_water_report_water_report_component__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./dashboards/water-report/water-report.component */ "./app/dashboards/water-report/water-report.component.ts");
/* harmony import */ var _widgets_report_form_report_form_component__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./widgets/report-form/report-form.component */ "./app/widgets/report-form/report-form.component.ts");
/* harmony import */ var _widgets_schedule_download_schedule_download_component__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./widgets/schedule-download/schedule-download.component */ "./app/widgets/schedule-download/schedule-download.component.ts");
/* harmony import */ var _widgets_alert_summary_filter_alert_summary_filter_component__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./widgets/alert-summary-filter/alert-summary-filter.component */ "./app/widgets/alert-summary-filter/alert-summary-filter.component.ts");
/* harmony import */ var _widgets_alert_configuration_table_alert_configuration_table_component__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./widgets/alert-configuration-table/alert-configuration-table.component */ "./app/widgets/alert-configuration-table/alert-configuration-table.component.ts");
/* harmony import */ var _widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./widgets/confirmation-box/confirmation-box.component */ "./app/widgets/confirmation-box/confirmation-box.component.ts");
/* harmony import */ var _widgets_alert_info_alert_info_component__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./widgets/alert-info/alert-info.component */ "./app/widgets/alert-info/alert-info.component.ts");
/* harmony import */ var _widgets_alert_configuration_box_alert_configuration_box_component__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./widgets/alert-configuration-box/alert-configuration-box.component */ "./app/widgets/alert-configuration-box/alert-configuration-box.component.ts");
/* harmony import */ var _dashboards_configurations_configurations_component__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./dashboards/configurations/configurations.component */ "./app/dashboards/configurations/configurations.component.ts");
/* harmony import */ var _widgets_toggle_button_toggle_button_component__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./widgets/toggle-button/toggle-button.component */ "./app/widgets/toggle-button/toggle-button.component.ts");
/* harmony import */ var _widgets_line2d_line2d_component__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./widgets/line2d/line2d.component */ "./app/widgets/line2d/line2d.component.ts");
/* harmony import */ var _widgets_notification_panel_notification_panel_component__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./widgets/notification-panel/notification-panel.component */ "./app/widgets/notification-panel/notification-panel.component.ts");
/* harmony import */ var _widgets_badge_icon_badge_icon_component__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./widgets/badge-icon/badge-icon.component */ "./app/widgets/badge-icon/badge-icon.component.ts");
/* harmony import */ var _error_pages_maintainence_maintainence_component__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./error_pages/maintainence/maintainence.component */ "./app/error_pages/maintainence/maintainence.component.ts");
/* harmony import */ var _widgets_mscolumn3dlinedy_mscolumn3dlinedy_component__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./widgets/mscolumn3dlinedy/mscolumn3dlinedy.component */ "./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.ts");
/* harmony import */ var _pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var _widgets_leakage_information_leakage_information_component__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./widgets/leakage-information/leakage-information.component */ "./app/widgets/leakage-information/leakage-information.component.ts");
/* harmony import */ var _widgets_ld_configuration_ld_configuration_component__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./widgets/ld-configuration/ld-configuration.component */ "./app/widgets/ld-configuration/ld-configuration.component.ts");
/* harmony import */ var _widgets_ld_meter_select_ld_meter_select_component__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./widgets/ld-meter-select/ld-meter-select.component */ "./app/widgets/ld-meter-select/ld-meter-select.component.ts");
/* harmony import */ var _dashboards_eui_eui_component__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./dashboards/eui/eui.component */ "./app/dashboards/eui/eui.component.ts");
/* harmony import */ var _sweetalert2_ngx_sweetalert2__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! @sweetalert2/ngx-sweetalert2 */ "../node_modules/@sweetalert2/ngx-sweetalert2/fesm2015/sweetalert2-ngx-sweetalert2.js");
/* harmony import */ var _widgets_tariff_tariff_component__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./widgets/tariff/tariff.component */ "./app/widgets/tariff/tariff.component.ts");
/* harmony import */ var _dashboards_power_meter_power_meter_component__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./dashboards/power-meter/power-meter.component */ "./app/dashboards/power-meter/power-meter.component.ts");
/* harmony import */ var _widgets_consumption_summery_chart_consumption_summery_chart_component__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./widgets/consumption-summery-chart/consumption-summery-chart.component */ "./app/widgets/consumption-summery-chart/consumption-summery-chart.component.ts");
/* harmony import */ var _widgets_multiple_select_multiple_select_component__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./widgets/multiple-select/multiple-select.component */ "./app/widgets/multiple-select/multiple-select.component.ts");
/* harmony import */ var _widgets_data_pointer_non_image_data_pointer_none_image_component__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./widgets/data-pointer-non-image/data-pointer-none-image.component */ "./app/widgets/data-pointer-non-image/data-pointer-none-image.component.ts");
/* harmony import */ var _widgets_print_preview_print_preview_component__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./widgets/print-preview/print-preview.component */ "./app/widgets/print-preview/print-preview.component.ts");
/* harmony import */ var _widgets_date_range_picker_lib_date_month_picker_date_month_picker_component__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./widgets/date-range-picker/lib/date-month-picker/date-month-picker.component */ "./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.ts");
/* harmony import */ var _widgets_total_comsumption_total_comsumption_component__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./widgets/total-comsumption/total-comsumption.component */ "./app/widgets/total-comsumption/total-comsumption.component.ts");
/* harmony import */ var _widgets_multiplechart_2d_multiplechart_2d_component__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./widgets/multiplechart-2d/multiplechart-2d.component */ "./app/widgets/multiplechart-2d/multiplechart-2d.component.ts");
/* harmony import */ var _widgets_chart_loader_chart_loader_component__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./widgets/chart-loader/chart-loader.component */ "./app/widgets/chart-loader/chart-loader.component.ts");





















































































































angular_fusioncharts__WEBPACK_IMPORTED_MODULE_6__["FusionChartsModule"].fcRoot(fusioncharts__WEBPACK_IMPORTED_MODULE_7__, fusioncharts_fusioncharts_charts__WEBPACK_IMPORTED_MODULE_9__, fusioncharts_fusioncharts_timeseries__WEBPACK_IMPORTED_MODULE_10__, fusioncharts_themes_fusioncharts_theme_carbon__WEBPACK_IMPORTED_MODULE_11__, fusioncharts_fusioncharts_widgets__WEBPACK_IMPORTED_MODULE_8__, fusioncharts_fusioncharts_excelexport__WEBPACK_IMPORTED_MODULE_12__, fusioncharts_fusioncharts_zoomscatter__WEBPACK_IMPORTED_MODULE_13__, fusioncharts_fusioncharts_zoomline__WEBPACK_IMPORTED_MODULE_14__);
fusioncharts__WEBPACK_IMPORTED_MODULE_7__["options"]['creditLabel'] = false;
let AppModule = class AppModule {
};
AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        declarations: [
            _widgets_chart_loader_chart_loader_component__WEBPACK_IMPORTED_MODULE_115__["ChartLoaderComponent"],
            _widgets_multiplechart_2d_multiplechart_2d_component__WEBPACK_IMPORTED_MODULE_114__["Multiplechart2dComponent"],
            _widgets_total_comsumption_total_comsumption_component__WEBPACK_IMPORTED_MODULE_113__["TotalConsumptionComponent"],
            _widgets_print_preview_print_preview_component__WEBPACK_IMPORTED_MODULE_111__["PrintPreviewComponent"],
            _widgets_date_range_picker_lib_date_month_picker_date_month_picker_component__WEBPACK_IMPORTED_MODULE_112__["MonthDatePickerComponent"],
            _app_component__WEBPACK_IMPORTED_MODULE_20__["AppComponent"],
            _widgets_data_pointer_non_image_data_pointer_none_image_component__WEBPACK_IMPORTED_MODULE_110__["DataPointerNoneImageComponent"],
            _widgets_header_header_component__WEBPACK_IMPORTED_MODULE_21__["HeaderComponent"],
            _widgets_navigator_navigator_component__WEBPACK_IMPORTED_MODULE_22__["NavigatorComponent"],
            _dashboards_electrical_dashboard_electrical_dashboard_component__WEBPACK_IMPORTED_MODULE_23__["ElectricalDashboardComponent"],
            _dashboards_water_dashboard_water_dashboard_component__WEBPACK_IMPORTED_MODULE_24__["WaterDashboardComponent"],
            _widgets_meter_tree_meter_tree_component__WEBPACK_IMPORTED_MODULE_25__["MeterTreeComponent"],
            _widgets_reports_reports_component__WEBPACK_IMPORTED_MODULE_26__["ReportsComponent"],
            _widgets_trend_trend_component__WEBPACK_IMPORTED_MODULE_27__["TrendComponent"],
            _widgets_pie_pie_component__WEBPACK_IMPORTED_MODULE_28__["PieComponent"],
            _widgets_multi_level_pie_multi_level_pie_component__WEBPACK_IMPORTED_MODULE_29__["MultiLevelPieComponent"],
            _widgets_doughnut2d_doughnut2d_component__WEBPACK_IMPORTED_MODULE_30__["Doughnut2dComponent"],
            _widgets_data_pointer_data_pointer_component__WEBPACK_IMPORTED_MODULE_31__["DataPointerComponent"],
            _dashboards_site_electrical_dashboard_site_electrical_dashboard_component__WEBPACK_IMPORTED_MODULE_32__["SiteElectricalDashboardComponent"],
            _dashboards_site_water_dashboard_site_water_dashboard_component__WEBPACK_IMPORTED_MODULE_33__["SiteWaterDashboardComponent"],
            _widgets_modal_modal_component__WEBPACK_IMPORTED_MODULE_34__["ModalComponent"],
            _widgets_table_table_component__WEBPACK_IMPORTED_MODULE_35__["TableComponent"],
            _widgets_side_bar_side_bar_component__WEBPACK_IMPORTED_MODULE_36__["SideBarComponent"],
            _dashboards_overview_overview_component__WEBPACK_IMPORTED_MODULE_37__["OverviewComponent"],
            _widgets_line2d_line2d_component__WEBPACK_IMPORTED_MODULE_95__["Line2dComponent"],
            _widgets_indicator_indicator_component__WEBPACK_IMPORTED_MODULE_38__["IndicatorComponent"],
            _widgets_trend3d_trend3d_component__WEBPACK_IMPORTED_MODULE_39__["Trend3dComponent"],
            _widgets_stackedcolumn3dline_stackedcolumn3dline_component__WEBPACK_IMPORTED_MODULE_40__["Stackedcolumn3dlineComponent"],
            _dashboards_chiller_plant_chiller_plant_component__WEBPACK_IMPORTED_MODULE_41__["ChillerPlantComponent"],
            _widgets_image_map_image_map_component__WEBPACK_IMPORTED_MODULE_42__["ImageMapComponent"],
            _widgets_grouped_trend_grouped_trend_component__WEBPACK_IMPORTED_MODULE_43__["GroupedTrendComponent"],
            _widgets_profile_chart_profile_chart_component__WEBPACK_IMPORTED_MODULE_45__["ProfileChartComponent"],
            _widgets_linear_scale_linear_scale_component__WEBPACK_IMPORTED_MODULE_46__["LinearScaleComponent"],
            _widgets_multi_series_multi_series_component__WEBPACK_IMPORTED_MODULE_47__["MultiSeriesComponent"],
            _widgets_real_time_line_real_time_line_component__WEBPACK_IMPORTED_MODULE_48__["RealTimeLineComponent"],
            _widgets_alerts_alerts_component__WEBPACK_IMPORTED_MODULE_50__["AlertsComponent"],
            _dashboards_alerts_dashboard_alerts_dashboard_component__WEBPACK_IMPORTED_MODULE_51__["AlertsDashboardComponent"],
            _dashboards_solar_solar_component__WEBPACK_IMPORTED_MODULE_52__["SolarComponent"],
            _dashboards_reports_dashboard_reports_dashboard_component__WEBPACK_IMPORTED_MODULE_53__["ReportsDashboardComponent"],
            _widgets_toggle_switch_toggle_switch_component__WEBPACK_IMPORTED_MODULE_54__["ToggleSwitchComponent"],
            _widgets_profile_chart_container_chart_container_component__WEBPACK_IMPORTED_MODULE_56__["ChartContainerComponent"],
            _widgets_modal_modal_component__WEBPACK_IMPORTED_MODULE_34__["ModalComponent"],
            _widgets_version_version_component__WEBPACK_IMPORTED_MODULE_57__["VersionComponent"],
            _widgets_linear_scale_gradient_linear_scale_gradient_component__WEBPACK_IMPORTED_MODULE_58__["LinearScaleGradientComponent"],
            _dashboards_electrical_group_dashboard_electrical_group_dashboard_component__WEBPACK_IMPORTED_MODULE_59__["ElectricalGroupDashboardComponent"],
            _widgets_group_equipment_breakdown_group_equipment_breakdown_component__WEBPACK_IMPORTED_MODULE_60__["GroupEquipmentBreakdownComponent"],
            _dashboards_water_group_dashboard_water_group_dashboard_component__WEBPACK_IMPORTED_MODULE_61__["WaterGroupDashboardComponent"],
            _widgets_dynamic_date_label_meter_tree_date_view_component__WEBPACK_IMPORTED_MODULE_62__["MeterTreeDateViewComponent"],
            _widgets_form_container_form_container_component__WEBPACK_IMPORTED_MODULE_65__["FormContainerComponent"],
            _widgets_equipment_breakdown_filter_equipment_breakdown_filter_component__WEBPACK_IMPORTED_MODULE_66__["EqupmentBreakdownFilterComponent"],
            _widgets_combo_box_combo_box_component__WEBPACK_IMPORTED_MODULE_67__["ComboBoxComponent"],
            _widgets_input_field_input_field_component__WEBPACK_IMPORTED_MODULE_68__["InputFieldComponent"],
            _widgets_equipment_breakdown_filter_group_equipment_breakdown_filter_group_component__WEBPACK_IMPORTED_MODULE_69__["EquipmentBreakdownFilterGroupComponent"],
            _widgets_breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_70__["BreadcrumbComponent"],
            _dashboards_ht_electrical_loop_dashboard_ht_electrical_loop_dashboard_component__WEBPACK_IMPORTED_MODULE_71__["HtElectricalLoopDashboardComponent"],
            _widgets_substation_navigator_substation_navigator_component__WEBPACK_IMPORTED_MODULE_73__["SubstationNavigatorComponent"],
            _dashboards_ht_electrical_site_dashboard_ht_electrical_site_dashboard_component__WEBPACK_IMPORTED_MODULE_72__["HtElectricalSiteDashboardComponent"],
            _widgets_floating_button_floating_button_component__WEBPACK_IMPORTED_MODULE_74__["FloatingButtonComponent"],
            _widgets_ht_equipment_breakdown_filter_ht_equipment_breakdown_filter_component__WEBPACK_IMPORTED_MODULE_75__["HtEquipmentBreakdownFilterComponent"],
            _dashboards_carbon_footprint_carbon_footprint_component__WEBPACK_IMPORTED_MODULE_76__["CarbonFootprintComponent"],
            _dashboards_chiller_efficiency_chiller_efficiency_component__WEBPACK_IMPORTED_MODULE_77__["ChillerEfficiencyComponent"],
            _dashboards_condenser_performance_condenser_performance_component__WEBPACK_IMPORTED_MODULE_78__["CondenserPerformanceComponent"],
            _widgets_zoomline_zoomline_component__WEBPACK_IMPORTED_MODULE_79__["ZoomlineComponent"],
            _widgets_zoomlinedy_zoomlinedy_component__WEBPACK_IMPORTED_MODULE_80__["ZoomlinedyComponent"],
            _widgets_zoomscatter_zoomscatter_component__WEBPACK_IMPORTED_MODULE_81__["ZoomscatterComponent"],
            _widgets_data_table_data_table_component__WEBPACK_IMPORTED_MODULE_82__["DataTableComponent"],
            _dashboards_heat_balance_heat_balance_component__WEBPACK_IMPORTED_MODULE_83__["HeatBalanceComponent"],
            _dashboards_electrical_report_electrical_report_component__WEBPACK_IMPORTED_MODULE_84__["ElectricalReportComponent"],
            _dashboards_water_report_water_report_component__WEBPACK_IMPORTED_MODULE_85__["WaterReportComponent"],
            _widgets_report_form_report_form_component__WEBPACK_IMPORTED_MODULE_86__["ReportFormComponent"],
            _widgets_schedule_download_schedule_download_component__WEBPACK_IMPORTED_MODULE_87__["ScheduleDownloadComponent"],
            _widgets_alert_summary_filter_alert_summary_filter_component__WEBPACK_IMPORTED_MODULE_88__["AlertSummaryFilterComponent"],
            _widgets_alert_configuration_table_alert_configuration_table_component__WEBPACK_IMPORTED_MODULE_89__["AlertConfigurationTableComponent"],
            _widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_90__["ConfirmationBoxComponent"],
            _widgets_alert_info_alert_info_component__WEBPACK_IMPORTED_MODULE_91__["AlertInfoComponent"],
            _widgets_alert_configuration_box_alert_configuration_box_component__WEBPACK_IMPORTED_MODULE_92__["AlertConfigurationBoxComponent"],
            _dashboards_configurations_configurations_component__WEBPACK_IMPORTED_MODULE_93__["ConfigurationsComponent"],
            _widgets_configuration_table_configuration_table_component__WEBPACK_IMPORTED_MODULE_64__["ConfigurationTableComponent"],
            _widgets_toggle_button_toggle_button_component__WEBPACK_IMPORTED_MODULE_94__["ToggleButtonComponent"],
            _widgets_notification_panel_notification_panel_component__WEBPACK_IMPORTED_MODULE_96__["NotificationPanelComponent"],
            _widgets_badge_icon_badge_icon_component__WEBPACK_IMPORTED_MODULE_97__["BadgeIconComponent"],
            _error_pages_maintainence_maintainence_component__WEBPACK_IMPORTED_MODULE_98__["MaintainenceComponent"],
            _widgets_mscolumn3dlinedy_mscolumn3dlinedy_component__WEBPACK_IMPORTED_MODULE_99__["Mscolumn3dlinedyComponent"],
            _pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_100__["ThousandSeparatorPipe"],
            _widgets_leakage_information_leakage_information_component__WEBPACK_IMPORTED_MODULE_101__["LeakageInformationComponent"],
            _widgets_ld_configuration_ld_configuration_component__WEBPACK_IMPORTED_MODULE_102__["LdConfigurationComponent"],
            _widgets_ld_meter_select_ld_meter_select_component__WEBPACK_IMPORTED_MODULE_103__["LdMeterSelectComponent"],
            _dashboards_eui_eui_component__WEBPACK_IMPORTED_MODULE_104__["EuiComponent"],
            _widgets_tariff_tariff_component__WEBPACK_IMPORTED_MODULE_106__["TariffComponent"],
            _dashboards_power_meter_power_meter_component__WEBPACK_IMPORTED_MODULE_107__["PowerMeterComponent"],
            _widgets_consumption_summery_chart_consumption_summery_chart_component__WEBPACK_IMPORTED_MODULE_108__["ConsumptionSummeryChartComponent"],
            _widgets_multiple_select_multiple_select_component__WEBPACK_IMPORTED_MODULE_109__["MultipleSelectComponent"]
        ],
        imports: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_19__["AppRoutingModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_3__["BrowserAnimationsModule"],
            angular_fusioncharts__WEBPACK_IMPORTED_MODULE_6__["FusionChartsModule"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClientModule"],
            _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_15__["FontAwesomeModule"],
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_16__["NgbModule"],
            _sweetalert2_ngx_sweetalert2__WEBPACK_IMPORTED_MODULE_105__["SweetAlert2Module"].forRoot(),
            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"],
            _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_44__["DateRangePickerModule"],
            _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_17__["NgxDatatableModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_5__["ReactiveFormsModule"],
            angular_notifier__WEBPACK_IMPORTED_MODULE_18__["NotifierModule"].withConfig({
                position: {
                    horizontal: {
                        position: 'right',
                        distance: 8
                    },
                    vertical: {
                        position: 'top',
                        distance: 78,
                        gap: 10
                    }
                },
                behaviour: {
                    stacking: 1,
                    autoHide: 5000
                }
            })
        ],
        exports: [
            _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_15__["FontAwesomeModule"]
        ],
        providers: [
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["Title"],
            _angular_common__WEBPACK_IMPORTED_MODULE_49__["DatePipe"],
            _pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_100__["ThousandSeparatorPipe"],
            _services_initial_service__WEBPACK_IMPORTED_MODULE_55__["InitialService"],
            {
                provide: _angular_core__WEBPACK_IMPORTED_MODULE_2__["APP_INITIALIZER"],
                useFactory: (initService) => () => initService.load(),
                deps: [_services_initial_service__WEBPACK_IMPORTED_MODULE_55__["InitialService"]],
                multi: true
            },
            {
                provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HTTP_INTERCEPTORS"],
                useClass: src_util_interceptor__WEBPACK_IMPORTED_MODULE_63__["HttpRequestInterceptor"],
                multi: true
            },
        ],
        schemas: [
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["CUSTOM_ELEMENTS_SCHEMA"]
        ],
        entryComponents: [
            _widgets_navigator_navigator_component__WEBPACK_IMPORTED_MODULE_22__["NavigatorComponent"],
            _widgets_version_version_component__WEBPACK_IMPORTED_MODULE_57__["VersionComponent"],
            _widgets_substation_navigator_substation_navigator_component__WEBPACK_IMPORTED_MODULE_73__["SubstationNavigatorComponent"],
            _widgets_alert_info_alert_info_component__WEBPACK_IMPORTED_MODULE_91__["AlertInfoComponent"],
            _widgets_alert_configuration_box_alert_configuration_box_component__WEBPACK_IMPORTED_MODULE_92__["AlertConfigurationBoxComponent"],
            _widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_90__["ConfirmationBoxComponent"],
            _widgets_leakage_information_leakage_information_component__WEBPACK_IMPORTED_MODULE_101__["LeakageInformationComponent"],
            _widgets_ld_meter_select_ld_meter_select_component__WEBPACK_IMPORTED_MODULE_103__["LdMeterSelectComponent"]
        ],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_20__["AppComponent"]]
    })
], AppModule);



/***/ }),

/***/ "./app/dashboards/alerts-dashboard/alerts-dashboard.component.scss":
/*!*************************************************************************!*\
  !*** ./app/dashboards/alerts-dashboard/alerts-dashboard.component.scss ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".tab-button-content {\n  border-bottom: 1px solid #007bff;\n  border-radius: 0 0 0 5px;\n}\n\n.button-group-custom {\n  margin-bottom: -1px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9hbGVydHMtZGFzaGJvYXJkL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXGRhc2hib2FyZHNcXGFsZXJ0cy1kYXNoYm9hcmRcXGFsZXJ0cy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvYWxlcnRzLWRhc2hib2FyZC9hbGVydHMtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0NBQUE7RUFDQSx3QkFBQTtBQ0NKOztBREVBO0VBQ0csOEJBQUE7QUNDSCIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvYWxlcnRzLWRhc2hib2FyZC9hbGVydHMtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYi1idXR0b24tY29udGVudCB7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwN2JmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAgMCAwIDVweDtcclxufVxyXG5cclxuLmJ1dHRvbi1ncm91cC1jdXN0b217XHJcbiAgIG1hcmdpbi1ib3R0b206IC0xcHggIWltcG9ydGFudDtcclxufVxyXG4iLCIudGFiLWJ1dHRvbi1jb250ZW50IHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDdiZmY7XG4gIGJvcmRlci1yYWRpdXM6IDAgMCAwIDVweDtcbn1cblxuLmJ1dHRvbi1ncm91cC1jdXN0b20ge1xuICBtYXJnaW4tYm90dG9tOiAtMXB4ICFpbXBvcnRhbnQ7XG59Il19 */"

/***/ }),

/***/ "./app/dashboards/alerts-dashboard/alerts-dashboard.component.ts":
/*!***********************************************************************!*\
  !*** ./app/dashboards/alerts-dashboard/alerts-dashboard.component.ts ***!
  \***********************************************************************/
/*! exports provided: AlertsDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertsDashboardComponent", function() { return AlertsDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/widgets/confirmation-box/confirmation-box.component */ "./app/widgets/confirmation-box/confirmation-box.component.ts");
/* harmony import */ var src_app_widgets_alert_info_alert_info_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/widgets/alert-info/alert-info.component */ "./app/widgets/alert-info/alert-info.component.ts");
/* harmony import */ var src_app_widgets_alert_configuration_box_alert_configuration_box_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/widgets/alert-configuration-box/alert-configuration-box.component */ "./app/widgets/alert-configuration-box/alert-configuration-box.component.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_app_services_dashboards_alert_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/dashboards/alert.service */ "./app/services/dashboards/alert.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lodash/uniqBy */ "../node_modules/lodash/uniqBy.js");
/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqBy__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! lodash/filter */ "../node_modules/lodash/filter.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(lodash_filter__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");
/* harmony import */ var src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/enums/bench-mark-type.enum */ "./enums/bench-mark-type.enum.ts");
/* harmony import */ var src_app_widgets_leakage_information_leakage_information_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/widgets/leakage-information/leakage-information.component */ "./app/widgets/leakage-information/leakage-information.component.ts");

















let AlertsDashboardComponent = class AlertsDashboardComponent {
    constructor(headerService, modalService, dateService, initialService, alertService, notifierService) {
        this.headerService = headerService;
        this.modalService = modalService;
        this.dateService = dateService;
        this.initialService = initialService;
        this.alertService = alertService;
        this.notifierService = notifierService;
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["ColumnMode"];
        this.summaryFilterdFields = {
            buildingGroupId: 0,
            buildingId: 0,
            levelId: 0,
            substationId: 0,
            loopId: 0,
            plantId: 0
        };
        this.selectedRows = [];
        this.sampleRows = [];
        this.serviceTypes = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"];
        this.summaryFilteredData = [];
        this.ltConfigurationFilteredData = [];
        this.htConfigurationFilteredData = [];
        this.waterConfigurationFilteredData = [];
        this.chillerConfigurationFilteredData = [];
        this.ldConfigurationFilteredData = [];
        this.alertsDataSource = {
            row: [],
            ltColumns: [
                {
                    key: "time",
                    name: "Time"
                },
                {
                    key: "buildingGroup",
                    name: "Building Group"
                },
                {
                    key: "building",
                    name: "Building"
                },
                {
                    key: "level",
                    name: "Level"
                },
                {
                    key: "location",
                    name: "Location"
                },
                {
                    key: "equipment",
                    name: "Equipment"
                },
                {
                    key: "detectedValue",
                    name: "Detected Value"
                },
                {
                    key: "benchmarkValue",
                    name: "Threshold"
                },
                {
                    key: "status",
                    name: "Status"
                },
                {
                    key: "buttonGroupAction",
                    name: "Action"
                }
            ],
            htColumns: [
                {
                    key: "time",
                    name: "Time"
                },
                {
                    key: "loop",
                    name: "Loop"
                },
                {
                    key: "substation",
                    name: "Substation"
                },
                {
                    key: "equipment",
                    name: "Equipment"
                },
                {
                    key: "detectedValue",
                    name: "Detected Value"
                },
                {
                    key: "benchmarkValue",
                    name: "Threshold"
                },
                {
                    key: "status",
                    name: "Status"
                },
                {
                    key: "buttonGroupAction",
                    name: "Action"
                }
            ],
            chillerColumns: [
                {
                    key: "time",
                    name: "Time"
                },
                {
                    key: "plant",
                    name: "Plant"
                },
                {
                    key: "equipment",
                    name: "Equipment"
                },
                {
                    key: "detectedValue",
                    name: "Detected Value"
                },
                {
                    key: "benchmarkValue",
                    name: "Threshold"
                },
                {
                    key: "status",
                    name: "Status"
                },
                {
                    key: "buttonGroupAction",
                    name: "Action"
                }
            ]
        };
        this.headerService.setItem('Alerts');
        this.headerService.setBoardLevel(2);
        this.tabIndex = 0;
        this.pageIndex = 0;
        this.modelId = 0;
        this.ltDateRange = this.dateService.getTodayUpToNow(new Date());
        this.htDateRange = this.dateService.getTodayUpToNow(new Date());
        this.waterDateRange = this.dateService.getTodayUpToNow(new Date());
        this.chillerDateRange = this.dateService.getTodayUpToNow(new Date());
        this.ldWaterDateRange = this.dateService.getTodayUpToNow(new Date());
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        this.isSummaryLoading = true;
        this.alertService.getWaterElectAlertSummary(this.ltDateRange, src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].ELECTRICAL).then(res => {
            this.elecLtSummaryDataSource = res;
            this.isSummaryLoading = false;
        });
        this.notifier = this.notifierService;
    }
    ngOnInit() { }
    getTabName() {
        switch (this.tabIndex) {
            case 0:
                return 'lt';
            case 1:
                return 'ht';
            case 2:
                return 'water';
            case 3:
                return 'chiller';
        }
    }
    getLTSummaryData() {
        this.isSummaryLoading = true;
        this.alertService.getWaterElectAlertSummary(this.ltDateRange, src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].ELECTRICAL).then(res => {
            this.elecLtSummaryDataSource = res;
            this.isSummaryLoading = false;
        });
    }
    getHTSummaryData() {
        this.isSummaryLoading = true;
        this.alertService.getHTAlertAlertSummary(this.htDateRange, src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].HT_ELECTRICAL).then(res => {
            this.elecHtSummaryDataSource = res;
            this.isSummaryLoading = false;
        });
    }
    getWaterSummaryData() {
        this.isSummaryLoading = true;
        this.alertService.getWaterElectAlertSummary(this.waterDateRange, src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER).then(res => {
            this.waterSummaryDataSource = res;
            this.isSummaryLoading = false;
        });
    }
    getChillerData() {
        this.isSummaryLoading = true;
        this.alertService.getChillerAlertSummaryData(this.chillerDateRange).then(res => {
            this.chillerSummaryDataSource = res;
            this.isSummaryLoading = false;
        });
    }
    getLDWaterSummeryData() {
        this.isSummaryLoading = true;
        this.alertService.getLDWaterSummeryData(this.ldWaterDateRange).then(res => {
            this.ldWaterSummaryDataSource = res;
            this.summaryFilteredData = res;
            this.disableAcknowledgedAllButton();
            this.isSummaryLoading = false;
        });
    }
    onScenarioChangeSummary(id) {
        this.modelId = Number(id);
        if (id != 0) {
            this.summaryFilteredData = this.ldWaterSummaryDataSource.filter(x => x.scenarioId == id);
        }
        else {
            this.summaryFilteredData = this.ldWaterSummaryDataSource;
        }
        this.disableAcknowledgedAllButton();
    }
    onScenarioChangeConfiguration(id) {
        if (id != 0) {
            this.ldConfigurationFilteredData = this.ldConfigurationData.filter(x => x.scenarioId == id);
        }
        else {
            this.ldConfigurationFilteredData = this.ldConfigurationData;
        }
    }
    ldAlertAcknowledge(e) {
        const body = [{
                MeterId: e.data.meterAId,
                MeterBId: e.data.meterBId,
                Alerts: [{
                        Guid: e.data.id,
                        Status: 0
                    }]
            }];
        const modalRef = this.modalService.open(src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_6__["ConfirmationBoxComponent"], { size: 'sm', centered: true });
        modalRef.componentInstance.massage = 'Do you want to Acknowledge this Alert?';
        modalRef.result.then(() => {
            this.alertService.acknowledgeLDAlerts(body).then((res) => {
                if (res.StatusCode == 200 && res.Message == 'Success') {
                    this.summaryFilteredData.find(x => x.id == e.data.id).status = 'Acknowledged';
                    this.notifier.notify('success', 'Alert Successfully Acknowledged');
                }
                else {
                    this.notifier.notify('error', 'Failed to Acknowledge the Alert');
                }
            });
        }, () => { });
    }
    acknowledgeAllLDAlerts() {
        const body = [];
        this.ldWaterSummaryDataSource.forEach(element => {
            body.push({
                MeterId: element.meterAId,
                MeterBId: element.meterBId,
                Alerts: [{
                        Guid: element.id,
                        Status: 0
                    }]
            });
        });
        const modalRef = this.modalService.open(src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_6__["ConfirmationBoxComponent"], { size: 'sm', centered: true });
        modalRef.componentInstance.massage = 'Do you want to Acknowledge all Alerts?';
        modalRef.result.then(() => {
            this.alertService.acknowledgeLDAlerts(body).then((res) => {
                if (res.StatusCode == 200 && res.Message == 'Success') {
                    this.summaryFilteredData.forEach(element => {
                        element.status = 'Acknowledged';
                    });
                    this.notifier.notify('success', 'All Alerts Successfully Acknowledged');
                }
                else {
                    this.notifier.notify('error', 'Failed to Acknowledge all Alerts');
                }
            });
        }, () => { });
        this.disableAcknowledgedAllButton();
    }
    disableAcknowledgedAllButton() {
        this.isAcknowledgedAll = true;
        this.summaryFilteredData.forEach(element => {
            if (element.status == 'Pending') {
                this.isAcknowledgedAll = false;
                return;
            }
        });
    }
    exportLDAlerts() {
        this.alertService.exportLDAlerts(this.ldWaterDateRange, this.modelId);
    }
    setTabIndex(index) {
        this.tabIndex = index;
        this.pageIndex = 0;
        switch (index) {
            case 0:
                if (!this.elecLtSummaryDataSource) {
                    this.getLTSummaryData();
                }
                break;
            case 1:
                if (!this.elecHtSummaryDataSource) {
                    this.getHTSummaryData();
                }
                break;
            case 2:
                if (!this.waterSummaryDataSource) {
                    this.getWaterSummaryData();
                }
                break;
            case 3:
                if (!this.chillerSummaryDataSource) {
                    this.getChillerData();
                }
                break;
            case 4:
                if (!this.ldWaterSummaryDataSource) {
                    this.getLDWaterSummeryData();
                }
                break;
            default:
                if (!this.elecLtSummaryDataSource) {
                    this.getLTSummaryData();
                }
                break;
        }
    }
    setPage(index) {
        this.pageIndex = index;
        if (index == 1) {
            switch (this.tabIndex) {
                case 0:
                    if (!this.elecLtConfigurationDataSource) {
                        this.isConfigurationLoading = true;
                        this.alertService.getElecWaterConfigurationData(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].ELECTRICAL).then(res => {
                            this.elecLtConfigurationDataSource = res;
                            this.isConfigurationLoading = false;
                        });
                    }
                    break;
                case 1:
                    if (!this.elecHtConfigurationDataSource) {
                        this.isConfigurationLoading = true;
                        this.alertService.getHTConfigurationData().then(res => {
                            this.elecHtConfigurationDataSource = res;
                            this.isConfigurationLoading = false;
                        });
                    }
                    break;
                case 2:
                    if (!this.waterConfigurationDataSource) {
                        this.isConfigurationLoading = true;
                        this.alertService.getElecWaterConfigurationData(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER).then(res => {
                            this.waterConfigurationDataSource = res;
                            this.isConfigurationLoading = false;
                        });
                    }
                    break;
                case 3:
                    if (!this.chillerConfigurationDataSource) {
                        this.isConfigurationLoading = true;
                        this.alertService.getChillerConfigurationData().then(res => {
                            this.chillerConfigurationDataSource = res;
                            this.isConfigurationLoading = false;
                        });
                    }
                    break;
                case 4:
                    if (!this.ldConfigurationData) {
                        this.isConfigurationLoading = true;
                        this.alertService.getLDWaterConfigurationData().then(res => {
                            this.ldConfigurationData = res;
                            this.ldConfigurationFilteredData = res;
                            this.isConfigurationLoading = false;
                        });
                    }
                    break;
            }
        }
    }
    onDataFiltered(event) {
        this.summaryFilteredData = [];
        event.forEach(element => {
            this.summaryFilteredData.push({
                time: element.time.name,
                id: element.id.id,
                buildingGroup: element.buildingGroup ? element.buildingGroup.name : null,
                building: element.building ? element.building.name : null,
                level: element.level ? element.level.name : null,
                location: element.location ? element.location.name : null,
                equipment: element.equipment.name,
                equipmentId: element.equipment.id,
                detectedValue: element.detectedValue.name,
                benchmarkValue: element.benchmarkValue.name,
                status: element.status.name,
                loop: element.loop ? element.loop.name : null,
                substation: element.substation ? element.substation.name : null,
                plant: element.plant ? element.plant.name : null,
                buttonGroupAction: [
                    {
                        buttonName: 'Acknowledge',
                        actionKey: 'acknowledge'
                    }
                ]
            });
        });
        this.summaryFilteredData = [...this.summaryFilteredData];
    }
    exportAlerts(type) {
        switch (type) {
            case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].ELECTRICAL:
                this.alertService.exportAlertsDetails(type, this.ltDateRange, this.summaryFilterdFields.buildingGroupId, this.summaryFilterdFields.buildingId, this.summaryFilterdFields.levelId);
                break;
            case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER:
                this.alertService.exportAlertsDetails(type, this.waterDateRange, this.summaryFilterdFields.buildingGroupId, this.summaryFilterdFields.buildingId, this.summaryFilterdFields.levelId);
                break;
            case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].MAIN_WATER:
                this.alertService.exportAlertsDetails(type, this.waterDateRange, this.summaryFilterdFields.buildingGroupId, this.summaryFilterdFields.buildingId, this.summaryFilterdFields.levelId);
                break;
            case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].HT_ELECTRICAL:
                this.alertService.exportAlertsDetails(type, this.htDateRange, null, null, null, this.summaryFilterdFields.loopId, this.summaryFilterdFields.substationId);
                break;
            case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].MAIN_HT_ELECTRICAL:
                this.alertService.exportAlertsDetails(type, this.htDateRange, null, null, null, this.summaryFilterdFields.loopId, this.summaryFilterdFields.substationId);
                break;
            case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].CHILLER:
                this.alertService.exportAlertsDetails(type, this.chillerDateRange, null, null, null, null, null, this.summaryFilterdFields.plantId);
                break;
        }
    }
    onConfigurationFiltered(event) {
        switch (this.tabIndex) {
            case 0:
                this.ltConfigurationFilteredData = event;
                break;
            case 1:
                this.htConfigurationFilteredData = event;
                break;
            case 2:
                this.waterConfigurationFilteredData = event;
                break;
            case 3:
                this.chillerConfigurationFilteredData = event;
                break;
        }
    }
    tableActionOnClicked(event) {
        if (event.key == 'acknowledge') {
            const modalRef = this.modalService.open(src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_6__["ConfirmationBoxComponent"], { size: 'sm', centered: true });
            modalRef.componentInstance.massage = 'Do you want to Acknowledge this Alert?';
            modalRef.result.then((result) => {
                this.acknowledgeRequest(event);
            }, (reason) => {
                // TODO: Do your task after dismissed the dialog box
            });
        }
    }
    acknowledgeRequest(event) {
        let acknowledgable = [{
                MeterId: event.data.equipmentId,
                Alerts: [{ Guid: event.data.id, Status: 0 }]
            }];
        this.alertService.acknowldgeAlerts(acknowledgable).then(res => {
            try {
                if (res.StatusCode && res.StatusCode == 200) {
                    this.notifier.notify('success', 'Alert Successfully Acknowledged');
                    switch (this.tabIndex) {
                        case 0:
                            this.elecLtSummaryDataSource = [...this.acknowledgeAlert(event.data.id, this.elecLtSummaryDataSource)];
                            break;
                        case 1:
                            this.elecHtSummaryDataSource = [...this.acknowledgeAlert(event.data.id, this.elecHtSummaryDataSource)];
                            break;
                        case 2:
                            this.waterSummaryDataSource = [...this.acknowledgeAlert(event.data.id, this.waterSummaryDataSource)];
                            break;
                        case 3:
                            this.chillerSummaryDataSource = [...this.acknowledgeAlert(event.data.id, this.chillerSummaryDataSource)];
                            break;
                    }
                }
                else {
                    this.notifier.notify('error', 'Failed to Acknowledge an Alert');
                }
            }
            catch (e) {
                this.notifier.notify('error', 'Failed to Acknowledge an Alert');
            }
        });
    }
    acknowledgeAlert(guid, data) {
        let index = data.findIndex(item => item.id.id == guid);
        data[index].status.name = 'Acknowledged';
        return data;
    }
    onRowClicked(e) {
        const elementRef = this.modalService.open(src_app_widgets_alert_info_alert_info_component__WEBPACK_IMPORTED_MODULE_7__["AlertInfoComponent"], { size: 'lg', scrollable: true, windowClass: 'modal-width', centered: true });
        elementRef.componentInstance.alertInfo = { data: e, type: this.getTabName(), tabIndex: this.tabIndex };
        elementRef.result.then((result) => {
            this.acknowledgeRequest({ data: result.data, key: 'acknowledge' });
        }, (reason) => {
            // TODO: Do your task after dismissed the dialog box
        });
    }
    configSelectionChange(event) {
        if (event.key == 'manual') {
            const elementRef = this.modalService.open(src_app_widgets_alert_configuration_box_alert_configuration_box_component__WEBPACK_IMPORTED_MODULE_8__["AlertConfigurationBoxComponent"], { size: 'lg', scrollable: true, centered: true });
            elementRef.componentInstance.alertInfo = { data: event, type: this.getTabName() };
            elementRef.result.then((result) => {
                this.alertService.updateManualModeConfiguration(result).then(res => {
                    this.notifier.notify('success', `${event.row.equipment} Successfully Updated`);
                    switch (this.tabIndex) {
                        case 0:
                            this.elecLtConfigurationDataSource = [...this.updateMeterMode(this.elecLtConfigurationDataSource, result, meter, 'Manual')];
                            break;
                        case 1:
                            this.elecHtConfigurationDataSource = [...this.updateMeterMode(this.elecHtConfigurationDataSource, result, meter, 'Manual')];
                            break;
                        case 2:
                            this.waterConfigurationDataSource = [...this.updateMeterMode(this.waterConfigurationDataSource, result, meter, 'Manual')];
                            break;
                        case 3:
                            this.chillerConfigurationDataSource = [...this.updateMeterMode(this.chillerConfigurationDataSource, result, meter, 'Manual')];
                            break;
                    }
                });
            }, (reason) => {
                // TODO: Do your task after dismissed the dialog box
            });
            let meter = [{
                    MeterId: event.row.meterID,
                    BenchmarkType: src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_15__["BenchMarkType"].Manual,
                }];
            this.changeMeterMode(meter, 'Manual', event.row.equipment);
        }
        else {
            let meter = [{
                    MeterId: event.row.meterID,
                    BenchmarkType: src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_15__["BenchMarkType"].Auto,
                }];
            this.changeMeterMode(meter, 'Auto', event.row.equipment);
        }
    }
    updateMeterMode(dataset, updatedData, meter, updatingMode) {
        let index = dataset.findIndex(item => meter[0].MeterId == item.meterID);
        let item = dataset[index];
        item.sundayBenchMark = updatedData[0].Benchmarks[0].Value;
        item.mondayBenchMark = updatedData[0].Benchmarks[1].Value;
        item.tuesdayBenchMark = updatedData[0].Benchmarks[2].Value;
        item.wednesdayBenchMark = updatedData[0].Benchmarks[3].Value;
        item.thursdayBenchMark = updatedData[0].Benchmarks[4].Value;
        item.fridayBenchMark = updatedData[0].Benchmarks[5].Value;
        item.saturdayBenchMark = updatedData[0].Benchmarks[6].Value;
        dataset[index] = item;
        return dataset;
    }
    changeMeterMode(meter, mode, meterName) {
        this.alertService.changeConfigurationMode(meter).then(res => {
            if (res.StatusCode && res.StatusCode == 200) {
                if (mode == 'Auto') {
                    this.notifier.notify('success', `${meterName} Successfully Changed to ${mode} Mode`);
                }
            }
            else {
                if (mode == 'Auto') {
                    this.notifier.notify('error', 'Failed to Change the Mode ');
                }
            }
        });
    }
    acknowledgeAll() {
        const modalRef = this.modalService.open(src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_6__["ConfirmationBoxComponent"], { size: 'sm', centered: true });
        modalRef.componentInstance.massage = 'Do you want to Acknowledge all Alerts?';
        modalRef.result.then((result) => {
            // TODO: Acknowledge the alert after closed the dialog box
            let acknowledgable = [];
            let uniqMeters = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_12___default()(this.summaryFilteredData, 'equipmentId');
            uniqMeters.forEach((item) => {
                let meters = lodash_filter__WEBPACK_IMPORTED_MODULE_13___default()(this.summaryFilteredData, { 'equipmentId': item.equipmentId });
                let meterForAck = { MeterId: item.equipmentId, Alerts: [] };
                meters.forEach(alert => {
                    if (alert.status == 'Pending') {
                        meterForAck.Alerts.push({ Guid: `${alert.id}`, Status: 0 });
                    }
                });
                if (meterForAck.Alerts.length > 0) {
                    acknowledgable.push(meterForAck);
                }
            });
            if (acknowledgable.length > 0) {
                this.alertService.acknowldgeAlerts(acknowledgable).then(res => {
                    try {
                        if (res.StatusCode && res.StatusCode == 200) {
                            this.notifier.notify('success', 'All Alerts Successfully Acknowledged');
                            switch (this.tabIndex) {
                                case 0:
                                    this.changeAlertSummaryStatus(this.elecLtSummaryDataSource, acknowledgable);
                                    this.elecLtSummaryDataSource = [...this.elecLtSummaryDataSource];
                                    break;
                                case 1:
                                    this.changeAlertSummaryStatus(this.elecHtSummaryDataSource, acknowledgable);
                                    this.elecHtSummaryDataSource = [...this.elecHtSummaryDataSource];
                                    break;
                                case 2:
                                    this.changeAlertSummaryStatus(this.waterSummaryDataSource, acknowledgable);
                                    this.waterSummaryDataSource = [...this.waterSummaryDataSource];
                                    break;
                                case 3:
                                    this.changeAlertSummaryStatus(this.chillerSummaryDataSource, acknowledgable);
                                    this.chillerSummaryDataSource = [...this.chillerSummaryDataSource];
                                    break;
                            }
                        }
                        else {
                            this.notifier.notify('error', 'Failed to Acknowledge Alerts');
                        }
                    }
                    catch (e) {
                        this.notifier.notify('error', 'Failed to Acknowledge Alerts');
                    }
                });
            }
            else {
                this.notifier.notify('warning', `No any alerts in PENDING status`);
            }
        }, (reason) => {
            // TODO: Do your task after dismissed the dialog box
        });
    }
    changeAlertSummaryStatus(dataSet, acknowledgable) {
        acknowledgable.forEach(meter => {
            meter.Alerts.forEach(alert => {
                let index = dataSet.findIndex(item => item.id.id == alert.Guid);
                dataSet[index].status.name = 'Acknowledged';
            });
        });
    }
    changeActive(data) {
        let massage;
        if (data.event) {
            massage = 'Activate';
        }
        else {
            massage = 'Deactivate';
        }
        this.alertService.changeAlertConfigStatus([{
                MeterId: data.meterID,
                Status: data.event ? 1 : 2
            }]).then(res => {
            if (res.StatusCode && res.StatusCode == 200) {
                this.notifier.notify('success', `Meter Successfully ${massage}d`);
            }
            else {
                this.notifier.notify('error', `Failed to ${massage} Meter`);
            }
        });
    }
    openInfo(event) {
        const modalRef = this.modalService.open(src_app_widgets_leakage_information_leakage_information_component__WEBPACK_IMPORTED_MODULE_16__["LeakageInformationComponent"], { size: 'lg', centered: true });
        modalRef.componentInstance.data = event.selected[0];
        modalRef.result.then(() => { }, (reason) => {
            // TODO: Do your task after dismissed the dialog box
        });
    }
    onScenarioChange(e) {
        console.log(e);
    }
};
AlertsDashboardComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_1__["HeaderService"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__["NgbModal"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_4__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] },
    { type: src_app_services_dashboards_alert_service__WEBPACK_IMPORTED_MODULE_10__["AlertService"] },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_14__["NotifierService"] }
];
AlertsDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
        selector: 'app-alerts-dashboard',
        template: __webpack_require__(/*! raw-loader!./alerts-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/alerts-dashboard/alerts-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./alerts-dashboard.component.scss */ "./app/dashboards/alerts-dashboard/alerts-dashboard.component.scss")]
    })
], AlertsDashboardComponent);



/***/ }),

/***/ "./app/dashboards/carbon-footprint/carbon-footprint.component.scss":
/*!*************************************************************************!*\
  !*** ./app/dashboards/carbon-footprint/carbon-footprint.component.scss ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".loading-area {\n  width: 100%;\n  height: 750px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n\n.wrapper_cutom {\n  position: relative;\n}\n\n.wrapper_cutom span {\n  z-index: 2;\n  color: #293946;\n  top: 3px;\n  right: 5px;\n  position: absolute;\n  padding-left: 5px;\n  font-size: 13px;\n}\n\n.wrapper_cutom input {\n  padding-right: 103px;\n  max-width: 235px;\n  padding-left: 10px;\n  font-size: 13px;\n  border-style: none;\n  min-height: 27px;\n  border-radius: 0.2rem;\n}\n\n.show-popup {\n  display: flex !important;\n  opacity: 1 !important;\n}\n\n.popup-confirm {\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  z-index: 999999;\n  background-color: rgba(0, 0, 0, 0.4);\n  align-items: center;\n  justify-content: center;\n  left: 0;\n  top: 0;\n  transition: all 0.3s;\n  -webkit-transition: all 0.3s;\n  opacity: 0;\n  display: none;\n}\n\n.popup-confirm .popup-content {\n  position: relative;\n  z-index: 2;\n  background-color: #5a5a5a;\n  padding: 15px;\n  max-width: 400px;\n}\n\n.popup-confirm .popup-content .popup-content-inside .popup-content-text h3 {\n  font-size: 17px;\n  text-align: center;\n}\n\n.popup-confirm .popup-content .popup-content-action {\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n}\n\n.popup-confirm .popup-content .popup-content-action .btn {\n  background-color: #9f4040;\n  color: #fff;\n  border: none;\n  padding: 6px 15px;\n  min-width: 100px;\n  cursor: pointer;\n  transition: all 0.3s;\n  -webkit-transition: all 0.3s;\n  opacity: 0.8;\n}\n\n.popup-confirm .popup-content .popup-content-action .btn:hove {\n  opacity: 1;\n}\n\n.popup-confirm .popup-content .popup-content-action .btn-yes {\n  background-color: #40979f;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9jYXJib24tZm9vdHByaW50L0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXGRhc2hib2FyZHNcXGNhcmJvbi1mb290cHJpbnRcXGNhcmJvbi1mb290cHJpbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvY2FyYm9uLWZvb3RwcmludC9jYXJib24tZm9vdHByaW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURDQTtFQUNJLGtCQUFBO0FDRUo7O0FEREk7RUFDSSxVQUFBO0VBQ0EsY0FBQTtFQUNBLFFBQUE7RUFDQSxVQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7QUNHUjs7QURESTtFQUNJLG9CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7QUNHUjs7QURBQTtFQUNJLHdCQUFBO0VBQ0EscUJBQUE7QUNHSjs7QUREQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxvQ0FBQTtFQUVBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLG9CQUFBO0VBQW9CLDRCQUFBO0VBQ3BCLFVBQUE7RUFDQSxhQUFBO0FDSUo7O0FESEk7RUFDSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQ0tSOztBREZnQjtFQUNJLGVBQUE7RUFDQSxrQkFBQTtBQ0lwQjs7QURBUTtFQUNJLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsZ0JBQUE7QUNFWjs7QUREWTtFQUNJLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLG9CQUFBO0VBQW9CLDRCQUFBO0VBQ3BCLFlBQUE7QUNJaEI7O0FESGdCO0VBQ0ksVUFBQTtBQ0twQjs7QURGWTtFQUNJLHlCQUFBO0FDSWhCIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkcy9jYXJib24tZm9vdHByaW50L2NhcmJvbi1mb290cHJpbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGluZy1hcmVhIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA3NTBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWljb24ge1xyXG4gICAgd2lkdGg6IDc1cHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuLndyYXBwZXJfY3V0b217XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBzcGFue1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgY29sb3I6ICMyOTM5NDY7XHJcbiAgICAgICAgdG9wOiAzcHg7XHJcbiAgICAgICAgcmlnaHQ6IDVweDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgfVxyXG4gICAgaW5wdXR7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTAzcHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAyMzVweDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgICAgIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICAgICAgICBtaW4taGVpZ2h0OiAyN3B4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IC4ycmVtO1xyXG4gICAgfVxyXG59XHJcbi5zaG93LXBvcHVwe1xyXG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xyXG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xyXG59XHJcbi5wb3B1cC1jb25maXJte1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB6LWluZGV4OiA5OTk5OTk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC40KTtcclxuICAgIC8vIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIC4zczstd2Via2l0LXRyYW5zaXRpb246IGFsbCAuM3M7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIC5wb3B1cC1jb250ZW50e1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM1YTVhNWE7XHJcbiAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgICAgIC5wb3B1cC1jb250ZW50LWluc2lkZXtcclxuICAgICAgICAgICAgLnBvcHVwLWNvbnRlbnQtdGV4dHtcclxuICAgICAgICAgICAgICAgIGgze1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLnBvcHVwLWNvbnRlbnQtYWN0aW9ue1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICAgICAgICAgIC5idG57XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWY0MDQwO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA2cHggMTVweDtcclxuICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMTAwcHg7XHJcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjNzOy13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4zcztcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IC44O1xyXG4gICAgICAgICAgICAgICAgJjpob3Zle1xyXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmJ0bi15ZXN7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5NzlmO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmxvYWRpbmctYXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDc1MHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmxvYWRpbmctaWNvbiB7XG4gIHdpZHRoOiA3NXB4O1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi53cmFwcGVyX2N1dG9tIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLndyYXBwZXJfY3V0b20gc3BhbiB7XG4gIHotaW5kZXg6IDI7XG4gIGNvbG9yOiAjMjkzOTQ2O1xuICB0b3A6IDNweDtcbiAgcmlnaHQ6IDVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgZm9udC1zaXplOiAxM3B4O1xufVxuLndyYXBwZXJfY3V0b20gaW5wdXQge1xuICBwYWRkaW5nLXJpZ2h0OiAxMDNweDtcbiAgbWF4LXdpZHRoOiAyMzVweDtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICBmb250LXNpemU6IDEzcHg7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgbWluLWhlaWdodDogMjdweDtcbiAgYm9yZGVyLXJhZGl1czogMC4ycmVtO1xufVxuXG4uc2hvdy1wb3B1cCB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbiAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xufVxuXG4ucG9wdXAtY29uZmlybSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogOTk5OTk5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzO1xuICBvcGFjaXR5OiAwO1xuICBkaXNwbGF5OiBub25lO1xufVxuLnBvcHVwLWNvbmZpcm0gLnBvcHVwLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1YTVhNWE7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIG1heC13aWR0aDogNDAwcHg7XG59XG4ucG9wdXAtY29uZmlybSAucG9wdXAtY29udGVudCAucG9wdXAtY29udGVudC1pbnNpZGUgLnBvcHVwLWNvbnRlbnQtdGV4dCBoMyB7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLnBvcHVwLWNvbmZpcm0gLnBvcHVwLWNvbnRlbnQgLnBvcHVwLWNvbnRlbnQtYWN0aW9uIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuLnBvcHVwLWNvbmZpcm0gLnBvcHVwLWNvbnRlbnQgLnBvcHVwLWNvbnRlbnQtYWN0aW9uIC5idG4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWY0MDQwO1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiA2cHggMTVweDtcbiAgbWluLXdpZHRoOiAxMDBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgb3BhY2l0eTogMC44O1xufVxuLnBvcHVwLWNvbmZpcm0gLnBvcHVwLWNvbnRlbnQgLnBvcHVwLWNvbnRlbnQtYWN0aW9uIC5idG46aG92ZSB7XG4gIG9wYWNpdHk6IDE7XG59XG4ucG9wdXAtY29uZmlybSAucG9wdXAtY29udGVudCAucG9wdXAtY29udGVudC1hY3Rpb24gLmJ0bi15ZXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5NzlmO1xufSJdfQ== */"

/***/ }),

/***/ "./app/dashboards/carbon-footprint/carbon-footprint.component.ts":
/*!***********************************************************************!*\
  !*** ./app/dashboards/carbon-footprint/carbon-footprint.component.ts ***!
  \***********************************************************************/
/*! exports provided: CarbonFootprintComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CarbonFootprintComponent", function() { return CarbonFootprintComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/dashboards/greenmark-data-fetching.service */ "./app/services/dashboards/greenmark-data-fetching.service.ts");
/* harmony import */ var _services_dashboards_chiller_data_generate_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../services/dashboards/chiller-data-generate.service */ "./app/services/dashboards/chiller-data-generate.service.ts");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../enums/green-mark-frequency.enum */ "./enums/green-mark-frequency.enum.ts");
/* harmony import */ var _enums_green_mark_chart_type_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../enums/green-mark-chart-type.enum */ "./enums/green-mark-chart-type.enum.ts");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");












let CarbonFootprintComponent = class CarbonFootprintComponent {
    constructor(headerService, dataFetchingService, dataGenerateService, dateService, initialService) {
        this.headerService = headerService;
        this.dataFetchingService = dataFetchingService;
        this.dataGenerateService = dataGenerateService;
        this.dateService = dateService;
        this.initialService = initialService;
        this.today = new Date();
        this.headerName = 'Carbon Footprint';
        this.plantList = [];
        this.tableWidth = new rxjs__WEBPACK_IMPORTED_MODULE_10__["BehaviorSubject"]('100%');
        this.columnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_5__["ColumnMode"];
        this.sortType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_5__["SortType"];
        this.selectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_5__["SelectionType"];
        this.gridEmision = 0.4080;
        this.tempGridEmision = 0.4080;
        this.rows = [];
        this.isDone = {};
        this.onOpen = (key = 'open') => {
            const el = document.getElementsByClassName('popup-confirm')[0];
            if (el) {
                if (key === 'open') {
                    el.className = 'popup-confirm show-popup';
                }
                else {
                    el.className = 'popup-confirm';
                }
            }
            if (key === 'cancel') {
                this.gridEmision = this.tempGridEmision;
            }
        };
        this.headerService.setItem(this.headerName);
        this.headerService.setBoardLevel(2);
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        this.dateRange = dateService.getLastDaysRange(this.today, 30, 'days');
        this.tabIndex = 0;
        this.chartLoading = true;
        dataFetchingService.getPlants().then(res => {
            this.plantList = res;
            this.selectedPlant = res[0].id;
            this.getCarbonFootprintData();
        });
    }
    ngOnInit() {
        this.headerService.getChartWidth().subscribe(res => {
            this.tableWidth.next(res / 4);
        });
    }
    setTabIndex(index) {
        this.tabIndex = index;
    }
    dateRangedChanged() {
        this.getCarbonFootprintData();
    }
    plantChanged(data) {
        this.selectedPlant = data.value;
        this.getCarbonFootprintData();
    }
    reduceData(arr) {
        const temp = [];
        for (let i = 0; i < arr.length; i++) {
            const item = Object.assign({}, arr[i], { anchorbgcolor: arr[i].tempColor || arr[i].color, anchorbordercolor: arr[i].tempColor || arr[i].color });
            if (item.seriesname.toLowerCase() != 'monthly co₂ emission (kg)') {
                if (item.seriesname) {
                    item.seriesname = item.seriesname.replace(/\(kg\)/gi, "(kg CO₂)");
                }
                temp.push(item);
            }
        }
        return temp;
    }
    getCarbonFootprintData() {
        this.chartLoading = true;
        this.isDone.carbonFootprintChartData = false;
        let dataSource = {};
        const COLOR_MAP = ["007bff", "00ff00"];
        this.dataFetchingService.fetchCarbonFootPrintData(this.dateRange, this.selectedPlant, _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_6__["GreenMarkFrequency"].Day).then(res => {
            dataSource = this.dataGenerateService.generateCarbonFootprintChart(res, this.dateRange);
            dataSource.dataset = this.reduceData(dataSource.dataset);
            const { dataset } = dataSource;
            for (let i = 0; i < dataset.length; i++) {
                dataset[i].tempColor = COLOR_MAP[i];
                dataset[i] = Object.assign({}, dataset[i], { data: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_11__["convertStringToArr"])(dataset[i].data, dataset[i].tempColor, '|'), color: '#000000' });
            }
            dataSource.dataset = dataset;
            dataSource.chart = Object.assign({}, dataSource.chart);
            this.carbonFootprintChartData = dataSource;
            this.rows = res;
            this.chartLoading = false;
            this.isDone.carbonFootprintChartData = true;
        });
    }
    exportToExcel() {
        this.dataFetchingService.exportChart(this.dateRange, _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_6__["GreenMarkFrequency"].Day, _enums_green_mark_chart_type_enum__WEBPACK_IMPORTED_MODULE_7__["GreenMarkChartType"].CarbonFootPrint, this.selectedPlant);
    }
};
CarbonFootprintComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] },
    { type: _services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_3__["GreenmarkDataFetchingService"] },
    { type: _services_dashboards_chiller_data_generate_service__WEBPACK_IMPORTED_MODULE_4__["ChillerDataGenerateService"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_8__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], CarbonFootprintComponent.prototype, "gridEmision", void 0);
CarbonFootprintComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-carbon-footprint',
        template: __webpack_require__(/*! raw-loader!./carbon-footprint.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/carbon-footprint/carbon-footprint.component.html"),
        styles: [__webpack_require__(/*! ./carbon-footprint.component.scss */ "./app/dashboards/carbon-footprint/carbon-footprint.component.scss")]
    })
], CarbonFootprintComponent);



/***/ }),

/***/ "./app/dashboards/chiller-efficiency/chiller-efficiency.component.scss":
/*!*****************************************************************************!*\
  !*** ./app/dashboards/chiller-efficiency/chiller-efficiency.component.scss ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".loading-area {\n  width: 100%;\n  height: 750px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9jaGlsbGVyLWVmZmljaWVuY3kvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcZGFzaGJvYXJkc1xcY2hpbGxlci1lZmZpY2llbmN5XFxjaGlsbGVyLWVmZmljaWVuY3kuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvY2hpbGxlci1lZmZpY2llbmN5L2NoaWxsZXItZWZmaWNpZW5jeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmRzL2NoaWxsZXItZWZmaWNpZW5jeS9jaGlsbGVyLWVmZmljaWVuY3kuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGluZy1hcmVhIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA3NTBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWljb24ge1xyXG4gICAgd2lkdGg6IDc1cHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn0iLCIubG9hZGluZy1hcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNzUwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubG9hZGluZy1pY29uIHtcbiAgd2lkdGg6IDc1cHg7XG4gIGhlaWdodDogYXV0bztcbn0iXX0= */"

/***/ }),

/***/ "./app/dashboards/chiller-efficiency/chiller-efficiency.component.ts":
/*!***************************************************************************!*\
  !*** ./app/dashboards/chiller-efficiency/chiller-efficiency.component.ts ***!
  \***************************************************************************/
/*! exports provided: ChillerEfficiencyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChillerEfficiencyComponent", function() { return ChillerEfficiencyComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../widgets/date-range-picker/public-api */ "./app/widgets/date-range-picker/public-api.ts");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var _services_dashboards_chiller_data_generate_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/dashboards/chiller-data-generate.service */ "./app/services/dashboards/chiller-data-generate.service.ts");
/* harmony import */ var _services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/dashboards/greenmark-data-fetching.service */ "./app/services/dashboards/greenmark-data-fetching.service.ts");
/* harmony import */ var _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../enums/green-mark-frequency.enum */ "./enums/green-mark-frequency.enum.ts");
/* harmony import */ var _enums_green_mark_chart_type_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../enums/green-mark-chart-type.enum */ "./enums/green-mark-chart-type.enum.ts");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");













let ChillerEfficiencyComponent = class ChillerEfficiencyComponent {
    constructor(headerService, dataFetchingService, dataGenerateService, configs, dateService, initialService) {
        this.headerService = headerService;
        this.dataFetchingService = dataFetchingService;
        this.dataGenerateService = dataGenerateService;
        this.configs = configs;
        this.dateService = dateService;
        this.initialService = initialService;
        this.headerName = 'Chiller Efficiency';
        this.plantList = [];
        this.chillerList = [];
        this.tableWidth = new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"]('100%');
        this.columnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_4__["ColumnMode"];
        this.sortType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_4__["SortType"];
        this.selectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_4__["SelectionType"];
        this.rows = [];
        this.scaleList = [{ name: 'Fixed Scale', id: 1 }, { name: 'Auto Scale', id: 2 }];
        this.scaleListSelected = 1;
        this.isDone = {};
        this.headerService.setItem(this.headerName);
        this.headerService.setBoardLevel(2);
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        const todayDateRange = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_3__["DateRange"]();
        todayDateRange.end = new Date(this.today);
        todayDateRange.start = new Date(this.today);
        this.dateRange = todayDateRange;
        this.tabIndex = 0;
        this.chartLoading = true;
        dataFetchingService.getPlants().then(res => {
            this.plantList = res;
            this.selectedPlant = res[0].id;
            dataFetchingService.getEquipmentId(this.selectedPlant, this.configs.siteConfigurations.chillerData.chiller).then(eqTypeid => {
                this.equipmentTypeId = eqTypeid;
                dataFetchingService.getEquipments(this.selectedPlant, this.equipmentTypeId).then(chillers => {
                    this.chillerList = chillers;
                    this.selectedChiller = 0;
                    this.getChillerEfficiencyData();
                });
            });
        });
    }
    ngOnInit() {
        this.headerService.getChartWidth().subscribe(res => {
            this.tableWidth.next(res / 2);
        });
    }
    setTabIndex(index) {
        this.tabIndex = index;
    }
    dateRangedChanged() {
        this.getChillerEfficiencyData();
    }
    plantChanged(data) {
        this.selectedPlant = data.value;
        this.dataFetchingService.getEquipmentId(this.selectedPlant, this.configs.siteConfigurations.chillerData.chiller).then(eqTypeid => {
            this.equipmentTypeId = eqTypeid;
            this.dataFetchingService.getEquipments(this.selectedPlant, this.equipmentTypeId).then(chillers => {
                this.chillerList = chillers;
                this.selectedChiller = 0;
                this.getChillerEfficiencyData();
            });
        });
    }
    chillerChanged(data) {
        this.selectedChiller = data.value;
        this.getChillerEfficiencyData();
    }
    getChillerEfficiencyData() {
        this.chartLoading = true;
        let dataSource = this.chillerEfficiencyChartData;
        this.isDone.chillerEfficiencyChartData = false;
        this.dataFetchingService.fetchChillerEfficiencyData(this.dateRange, this.selectedPlant, this.selectedChiller, _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_7__["GreenMarkFrequency"].OneMinute).then(res => {
            dataSource = this.dataGenerateService.generateChillerEfficiencyChart(res, this.dateRange);
            dataSource.datasetTemp = dataSource.dataset;
            dataSource.chart = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["addChartConfiguration"])(dataSource.chart, true);
            let { dataset } = dataSource;
            for (let i = 0; i < dataset.length; i++) {
                dataset[i].tempColor = "00ff00";
                dataset[i] = Object.assign({}, dataset[i], { data: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["convertStringToArr"])(dataset[i].data, dataset[i].tempColor), color: '#000000' });
            }
            dataSource.dataset = dataset;
            this.chillerEfficiencyChartData = dataSource;
            this.rows = res;
            this.chartLoading = false;
            this.setMaxYAxis(this.scaleListSelected);
            this.isDone.chillerEfficiencyChartData = true;
        });
    }
    exportToExcel() {
        this.dataFetchingService.exportChart(this.dateRange, _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_7__["GreenMarkFrequency"].OneMinute, _enums_green_mark_chart_type_enum__WEBPACK_IMPORTED_MODULE_8__["GreenMarkChartType"].ChillerEfficiency, this.selectedPlant, this.selectedChiller);
    }
    scaleChanged({ value }) {
        this.scaleListSelected = value;
        this.setMaxYAxis(this.scaleListSelected);
    }
    setMaxYAxis(value) {
        if (this.chillerEfficiencyChartData.chart && value) {
            if (value == 1) {
                this.chillerEfficiencyChartData.chart.yAxisMinValue = 0;
                this.chillerEfficiencyChartData.chart.yAxisMaxValue = 2;
                const { dataset } = this.chillerEfficiencyChartData;
                for (let i = 0; i < dataset.length; i++) {
                    let { data = '', seriesname, color } = dataset[i];
                    data = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["reduceDataChart"])(data, this.chillerEfficiencyChartData.chart.yAxisMinValue, this.chillerEfficiencyChartData.chart.yAxisMaxValue);
                    this.chillerEfficiencyChartData.dataset = [{ data, seriesname, color }];
                }
            }
            else {
                let { dataset = [] } = this.chillerEfficiencyChartData;
                if (dataset.length > 0) {
                    dataset = dataset[0];
                    let { max, min } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["getChartMinMax"])(dataset, 'value');
                    if (min)
                        min = min.toFixed(1);
                    if (max)
                        max = max.toFixed(1);
                    this.chillerEfficiencyChartData.chart.yAxisMinValue = min || undefined;
                    this.chillerEfficiencyChartData.chart.yAxisMaxValue = max || undefined;
                    this.chillerEfficiencyChartData.dataset = this.chillerEfficiencyChartData.datasetTemp;
                }
            }
        }
    }
};
ChillerEfficiencyComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] },
    { type: _services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_6__["GreenmarkDataFetchingService"] },
    { type: _services_dashboards_chiller_data_generate_service__WEBPACK_IMPORTED_MODULE_5__["ChillerDataGenerateService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_10__["InitialService"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_9__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_10__["InitialService"] }
];
ChillerEfficiencyComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-chiller-efficiency',
        template: __webpack_require__(/*! raw-loader!./chiller-efficiency.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/chiller-efficiency/chiller-efficiency.component.html"),
        styles: [__webpack_require__(/*! ./chiller-efficiency.component.scss */ "./app/dashboards/chiller-efficiency/chiller-efficiency.component.scss")]
    })
], ChillerEfficiencyComponent);



/***/ }),

/***/ "./app/dashboards/chiller-plant/chiller-plant.component.scss":
/*!*******************************************************************!*\
  !*** ./app/dashboards/chiller-plant/chiller-plant.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvY2hpbGxlci1wbGFudC9jaGlsbGVyLXBsYW50LmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/dashboards/chiller-plant/chiller-plant.component.ts":
/*!*****************************************************************!*\
  !*** ./app/dashboards/chiller-plant/chiller-plant.component.ts ***!
  \*****************************************************************/
/*! exports provided: ChillerPlantComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChillerPlantComponent", function() { return ChillerPlantComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var _enums_FormulaFrequency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../enums/FormulaFrequency */ "./enums/FormulaFrequency.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _services_date_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _services_initial_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_app_services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/dashboards/greenmark-data-fetching.service */ "./app/services/dashboards/greenmark-data-fetching.service.ts");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");











let ChillerPlantComponent = class ChillerPlantComponent {
    constructor(headerService, dataService, dateService, dataFetchingService, datePipe, initialService, configs, thousandSeparator) {
        this.headerService = headerService;
        this.dataService = dataService;
        this.dateService = dateService;
        this.dataFetchingService = dataFetchingService;
        this.datePipe = datePipe;
        this.initialService = initialService;
        this.configs = configs;
        this.thousandSeparator = thousandSeparator;
        this.monthlyChange = false;
        this.tabIndex = 0;
        this.enegeryConsumptionDataSource = {};
        this.plantEffieciencyDataSource = {};
        this.heatBalanceDataSource = {};
        this.effieciencyTrendDataSource = {};
        this.scaleListHeatBalance = [{ name: 'Fixed Scale', id: 1 }, { name: 'Auto Scale', id: 2 },];
        this.scaleListHeatBalanceSelected = 1;
        this.scaleListEficiencySelected = 1;
        this.isDone = {};
        this.headerService.setItem('Chiller Plant Overview');
        this.headerService.setBoardLevel(2);
    }
    ngOnInit() {
        this.dataFetchingService.getPlants().then(res => {
            this.plantList = res;
            this.chillerId = res[0].id;
            this.getPlantEfficency();
            this.getAvgHeatBalance();
            this.getPlantEffeciencyTrend();
            this.getEnergyDistribution(this.monthlyChange);
        });
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
    }
    setTabIndex(index) {
        this.tabIndex = index;
    }
    generatePlantEfficencyChartData(value) {
        return [{ data: [{ value }] }];
    }
    plotPlantEfficencyChart(res) {
        this.plantEffieciencyDataSource.pointers = {
            pointer: [
                {
                    value: res[0].data.length !== 0 ? res[0].data[0].value : null
                }
            ]
        };
        this.plantEffieciencyDataSource.chart = this.configs.chartConfigurations.planatefficency;
        this.plantEffieciencyDataSource.chart.decimals = 3;
        this.plantEffieciencyDataSource.colorrange = this.configs.chartConfigurations.plantefficencyColorRange;
    }
    getPlantEfficency() {
        this.plotPlantEfficencyChart(this.generatePlantEfficencyChartData(0));
        this.plantEffieciencyDataSource = {};
        this.isDone.plantEffieciencyDataSource = false;
        this.dataService.get(this.configs.endPoints['chiller-endpoint-1'], {
            siteId: 1,
            plantId: this.chillerId,
            frequencyId: _enums_FormulaFrequency__WEBPACK_IMPORTED_MODULE_2__["FormulaFrequency"].OneMinute
        }).subscribe(res => {
            if (res == null || res.length === 0) {
                this.plotPlantEfficencyChart(this.generatePlantEfficencyChartData(0));
            }
            else {
                this.plotPlantEfficencyChart(res);
            }
            this.isDone.plantEffieciencyDataSource = true;
        }, err => {
            this.plotPlantEfficencyChart(this.generatePlantEfficencyChartData(0));
            this.isDone.plantEffieciencyDataSource = true;
        });
    }
    generateAvgHeatBalanceChartData(startTime, endTime) {
        const t = [{ data: [] }];
        const st = new Date();
        st.setHours(0);
        st.setMinutes(0);
        st.setSeconds(0);
        const now = new Date();
        while (now > st) {
            const date = new Date(st);
            t[0].data.push({ label: date, value: null });
            st.setHours(st.getHours() + 1);
        }
        return t;
    }
    plotAvgHeatBalanceChartData(res) {
        this.heatBalanceDataSource = {};
        const category = [];
        const data = [];
        res[0].data.forEach(element => {
            category.push({ label: element.label });
            data.push({ value: element.value });
        });
        this.heatBalanceDataSource.chart = this.configs.chartConfigurations.plantHeatbalance;
        // this.heatBalanceDataSource.chart.slantLabel = '0';
        this.heatBalanceDataSource.categories = [{ category }];
        this.heatBalanceDataSource.dataset = [{ data }];
        this.heatBalanceDataSource.datasetTemp = [{ data }];
        this.heatBalanceDataSource.chart.plotToolText = 'Time: $label{br}Heat Balance: $dataValue';
        this.setMaxYAxis(this.scaleListHeatBalanceSelected, 'heatBalanceDataSource');
    }
    getAvgHeatBalance() {
        this.isDone.heatBalanceDataSource = false;
        this.plotAvgHeatBalanceChartData(this.generateAvgHeatBalanceChartData(null, null));
        this.dataService.get(this.configs.endPoints['chiller-endpoint-2'], {
            siteId: 1,
            plantId: this.chillerId,
            frequencyId: _enums_FormulaFrequency__WEBPACK_IMPORTED_MODULE_2__["FormulaFrequency"].OneMinute,
            startDate: this.datePipe.transform(this.dateService.getTodayUpToNow(this.today).start, 'yyyy/M/d hh:mm a'),
            endDate: this.datePipe.transform(this.dateService.getTodayUpToNow(this.today).end, 'yyyy/M/d hh:mm a'),
        }).subscribe(res => {
            if (res == null || res.length === 0) {
                this.plotAvgHeatBalanceChartData(this.generateAvgHeatBalanceChartData(null, null));
            }
            else {
                this.plotAvgHeatBalanceChartData(res);
            }
            this.isDone.heatBalanceDataSource = true;
        }, err => {
            this.plotAvgHeatBalanceChartData(this.generateAvgHeatBalanceChartData(null, null));
            this.isDone.heatBalanceDataSource = true;
        });
    }
    generatePlantEffeciencyTrendDate(startDate, endDate) {
        const dataSet = [{ data: [] }];
        const startTime = new Date();
        startTime.setHours(0);
        startTime.setMinutes(0);
        startTime.setSeconds(0);
        const now = new Date();
        while (now > startTime) {
            const date = new Date(startTime);
            dataSet[0].data.push({ label: date, value: null });
            startTime.setHours(startTime.getHours() + 1);
        }
        return dataSet;
    }
    plotPlantEffeciencyTrendDate(res) {
        const category = [];
        const data = [];
        res[0].data.forEach(element => {
            category.push({ label: element.label });
            data.push({ value: element.value });
        });
        this.effieciencyTrendDataSource.chart = this.configs.chartConfigurations.effecenctTrend;
        this.effieciencyTrendDataSource.chart.plotToolText = 'Time: $label{br}Efficiency: $dataValue kW/RT';
        this.effieciencyTrendDataSource.categories = [{ category }];
        this.effieciencyTrendDataSource.dataset = [{ data }];
        this.effieciencyTrendDataSource.datasetTemp = [{ data }];
        this.setMaxYAxis(this.scaleListEficiencySelected, 'effieciencyTrendDataSource');
    }
    getPlantEffeciencyTrend() {
        this.plotPlantEffeciencyTrendDate(this.generatePlantEffeciencyTrendDate(null, null));
        this.effieciencyTrendDataSource = {};
        this.isDone.effieciencyTrendDataSource = false;
        this.dataService.get(this.configs.endPoints['chiller-endpoint-4'], {
            siteId: 1,
            plantId: this.chillerId,
            frequencyId: _enums_FormulaFrequency__WEBPACK_IMPORTED_MODULE_2__["FormulaFrequency"].OneMinute,
            startDate: this.datePipe.transform(this.dateService.getTodayUpToNow(this.today).start, 'yyyy/M/d hh:mm a'),
            endDate: this.datePipe.transform(this.dateService.getTodayUpToNow(this.today).end, 'yyyy/M/d hh:mm a'),
        }).subscribe(res => {
            if (res == null || res.length === 0) {
                this.plotPlantEffeciencyTrendDate(this.generatePlantEffeciencyTrendDate(null, null));
            }
            else {
                this.plotPlantEffeciencyTrendDate(res);
            }
            this.isDone.effieciencyTrendDataSource = true;
        }, err => {
            this.plotPlantEffeciencyTrendDate(this.generatePlantEffeciencyTrendDate(null, null));
            this.isDone.effieciencyTrendDataSource = true;
        });
    }
    getEnergyDistribution(type) {
        let dateRange = null;
        let exportName;
        if (type) {
            dateRange = this.dateService.getThisFullYear(this.today);
            exportName = 'Yearly';
        }
        else {
            dateRange = this.dateService.getThisMonth(this.today);
            exportName = 'Monthly';
        }
        this.enegeryConsumptionDataSource = {};
        this.isDone.enegeryConsumptionDataSource = false;
        this.dataService.get(this.configs.endPoints['chiller-endpoint-3'], {
            siteId: 1,
            plantId: this.chillerId,
            startDate: this.datePipe.transform(dateRange.start, 'yyyy/M/d'),
            endDate: this.datePipe.transform(dateRange.end, 'yyyy/M/d'),
        }).subscribe(res => {
            this.isDone.enegeryConsumptionDataSource = true;
            const data = [];
            let tot = 0;
            res.forEach(element => {
                tot += element.data[0].value;
            });
            res.forEach(element => {
                data.push({
                    label: element.name,
                    value: element.data[0].value,
                    toolText: `Equipment: $label{br}Consumption: ${this.thousandSeparator.transform(element.data[0].value)} kWh`
                });
            });
            const { scalledNumber, suffix } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_1__["abbreviateNumber"])(tot, undefined);
            this.enegeryConsumptionDataSource.chart = this.configs.chartConfigurations.energyDist;
            this.enegeryConsumptionDataSource.data = data;
            // this.enegeryConsumptionDataSource.chart.plotToolText = 'Equipment: $label{br}Consumption: $dataValue kWh';
            this.enegeryConsumptionDataSource.chart.defaultCenterLabel = 'Total Energy: ' + scalledNumber + suffix + ' kWh';
            this.enegeryConsumptionDataSource.chart.exportFileName = `Energy Distribution ${exportName}`;
        }, err => {
            this.isDone.enegeryConsumptionDataSource = true;
        });
    }
    chillerChanged(event) {
        this.chillerId = event.value;
        this.getPlantEfficency();
        this.getAvgHeatBalance();
        this.getPlantEffeciencyTrend();
        this.getEnergyDistribution(this.monthlyChange);
    }
    monthlyToggle(event) {
        this.monthlyChange = event;
        this.getEnergyDistribution(event);
    }
    last7Days() {
        const result = [];
        for (let i = 0; i < 7; i++) {
            const d = this.today;
            d.setDate(d.getDate() - i);
            result.push({ label: this.datePipe.transform(d, 'yyyy-MM-dd') });
        }
        return result.reverse();
    }
    scaleEficiencyChanged({ value }) {
        this.scaleListEficiencySelected = value;
        this.setMaxYAxis(this.scaleListEficiencySelected, 'effieciencyTrendDataSource');
    }
    scaleHeatBalanceChanged({ value }) {
        this.scaleListHeatBalanceSelected = value;
        this.setMaxYAxis(this.scaleListHeatBalanceSelected, 'heatBalanceDataSource');
    }
    setMaxYAxis(value, key = 'heatBalanceDataSource') {
        if (this[key].chart && value) {
            if (value == 1) {
                this[key].chart.yAxisMinValue = key == 'heatBalanceDataSource' ? -15 : 0;
                this[key].chart.yAxisMaxValue = key == 'heatBalanceDataSource' ? 15 : 2;
                let { data = [] } = this[key].dataset[0];
                data = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_1__["reduceDataChart"])(data, this[key].chart.yAxisMinValue, this[key].chart.yAxisMaxValue, 'value');
                this[key].dataset = [{ data }];
            }
            else {
                let { dataset = [] } = this[key];
                if (dataset.length > 0) {
                    dataset = dataset[0].data;
                    let { max, min } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_1__["getChartMinMax"])(dataset, 'value');
                    if (min)
                        min = min.toFixed(1);
                    if (max)
                        max = max.toFixed(1);
                    this[key].chart.yAxisMinValue = min || 0;
                    this[key].chart.yAxisMaxValue = max || 10;
                    this[key].dataset = this[key].datasetTemp;
                }
            }
        }
    }
};
ChillerPlantComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_4__["HeaderService"] },
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_5__["HttpService"] },
    { type: _services_date_service_service__WEBPACK_IMPORTED_MODULE_6__["DateServiceService"] },
    { type: src_app_services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_9__["GreenmarkDataFetchingService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_10__["ThousandSeparatorPipe"] }
];
ChillerPlantComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-chiller-plant',
        template: __webpack_require__(/*! raw-loader!./chiller-plant.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/chiller-plant/chiller-plant.component.html"),
        styles: [__webpack_require__(/*! ./chiller-plant.component.scss */ "./app/dashboards/chiller-plant/chiller-plant.component.scss")]
    })
], ChillerPlantComponent);



/***/ }),

/***/ "./app/dashboards/condenser-performance/condenser-performance.component.scss":
/*!***********************************************************************************!*\
  !*** ./app/dashboards/condenser-performance/condenser-performance.component.scss ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".loading-area {\n  width: 100%;\n  height: 750px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9jb25kZW5zZXItcGVyZm9ybWFuY2UvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcZGFzaGJvYXJkc1xcY29uZGVuc2VyLXBlcmZvcm1hbmNlXFxjb25kZW5zZXItcGVyZm9ybWFuY2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvY29uZGVuc2VyLXBlcmZvcm1hbmNlL2NvbmRlbnNlci1wZXJmb3JtYW5jZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmRzL2NvbmRlbnNlci1wZXJmb3JtYW5jZS9jb25kZW5zZXItcGVyZm9ybWFuY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGluZy1hcmVhIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA3NTBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWljb24ge1xyXG4gICAgd2lkdGg6IDc1cHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn0iLCIubG9hZGluZy1hcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNzUwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubG9hZGluZy1pY29uIHtcbiAgd2lkdGg6IDc1cHg7XG4gIGhlaWdodDogYXV0bztcbn0iXX0= */"

/***/ }),

/***/ "./app/dashboards/condenser-performance/condenser-performance.component.ts":
/*!*********************************************************************************!*\
  !*** ./app/dashboards/condenser-performance/condenser-performance.component.ts ***!
  \*********************************************************************************/
/*! exports provided: CondenserPerformanceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CondenserPerformanceComponent", function() { return CondenserPerformanceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../widgets/date-range-picker/public-api */ "./app/widgets/date-range-picker/public-api.ts");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var _services_dashboards_chiller_data_generate_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/dashboards/chiller-data-generate.service */ "./app/services/dashboards/chiller-data-generate.service.ts");
/* harmony import */ var _services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/dashboards/greenmark-data-fetching.service */ "./app/services/dashboards/greenmark-data-fetching.service.ts");
/* harmony import */ var _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../enums/green-mark-frequency.enum */ "./enums/green-mark-frequency.enum.ts");
/* harmony import */ var _enums_green_mark_chart_type_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../enums/green-mark-chart-type.enum */ "./enums/green-mark-chart-type.enum.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");












let CondenserPerformanceComponent = class CondenserPerformanceComponent {
    constructor(headerService, dataFetchingService, dataGenerateService, configs, initialService) {
        this.headerService = headerService;
        this.dataFetchingService = dataFetchingService;
        this.dataGenerateService = dataGenerateService;
        this.configs = configs;
        this.initialService = initialService;
        this.headerName = 'Condenser Performance';
        this.plantList = [];
        this.headerList = [];
        this.tableWidth = new rxjs__WEBPACK_IMPORTED_MODULE_10__["BehaviorSubject"]('100%');
        this.columnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_4__["ColumnMode"];
        this.sortType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_4__["SortType"];
        this.selectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_4__["SelectionType"];
        this.rows = [];
        this.isDone = {};
        this.headerService.setItem(this.headerName);
        this.headerService.setBoardLevel(2);
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        const todayDateRange = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_3__["DateRange"]();
        todayDateRange.end = new Date(this.today);
        todayDateRange.start = new Date(this.today);
        this.dateRange = todayDateRange;
        this.tabIndex = 0;
        this.chartLoading = true;
        dataFetchingService.getPlants().then(res => {
            this.plantList = res;
            this.selectedPlant = res[0].id;
            dataFetchingService.getEquipmentId(this.selectedPlant, this.configs.siteConfigurations.chillerData.header).then(eqTypeid => {
                this.equipmentTypeId = eqTypeid;
                dataFetchingService.getEquipments(this.selectedPlant, this.equipmentTypeId).then(headers => {
                    this.headerList = headers;
                    this.selectedHeader = headers[0] && headers[0].id ? headers[0].id : null;
                    this.getCondenserPerformanceData();
                });
            });
        });
    }
    ngOnInit() {
        this.headerService.getChartWidth().subscribe(res => {
            this.tableWidth.next(res / 4);
        });
    }
    setTabIndex(index) {
        this.tabIndex = index;
    }
    dateRangedChanged() {
        this.getCondenserPerformanceData();
    }
    plantChanged(data) {
        this.selectedPlant = data.value;
        this.dataFetchingService.getEquipmentId(this.selectedPlant, this.configs.siteConfigurations.chillerData.header).then(eqTypeid => {
            this.equipmentTypeId = eqTypeid;
            this.dataFetchingService.getEquipments(this.selectedPlant, this.equipmentTypeId).then(headers => {
                this.headerList = headers;
                this.selectedHeader = headers[0] && headers[0].id ? headers[0].id : null;
                this.getCondenserPerformanceData();
            });
        });
    }
    headerChanged(data) {
        this.selectedHeader = data.value;
        this.getCondenserPerformanceData();
    }
    getCondenserPerformanceData() {
        this.isDone.condenserPerformanceChartData = false;
        this.chartLoading = true;
        this.dataFetchingService.fetchCondenserPerformanceData(this.dateRange, this.selectedPlant, this.selectedHeader, _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_7__["GreenMarkFrequency"].OneMinute).then(res => {
            this.condenserPerformanceChartData = this.dataGenerateService.generateCondenserPerformanceChart(res);
            this.condenserPerformanceChartData.chart = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_11__["addChartConfiguration"])(this.condenserPerformanceChartData.chart);
            this.rows = res;
            this.chartLoading = false;
            this.isDone.condenserPerformanceChartData = true;
        });
    }
    exportToExcel() {
        this.dataFetchingService.exportChart(this.dateRange, _enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_7__["GreenMarkFrequency"].OneMinute, _enums_green_mark_chart_type_enum__WEBPACK_IMPORTED_MODULE_8__["GreenMarkChartType"].CondenserPerformance, this.selectedPlant, this.selectedHeader);
    }
};
CondenserPerformanceComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] },
    { type: _services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_6__["GreenmarkDataFetchingService"] },
    { type: _services_dashboards_chiller_data_generate_service__WEBPACK_IMPORTED_MODULE_5__["ChillerDataGenerateService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] }
];
CondenserPerformanceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-condenser-performance',
        template: __webpack_require__(/*! raw-loader!./condenser-performance.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/condenser-performance/condenser-performance.component.html"),
        styles: [__webpack_require__(/*! ./condenser-performance.component.scss */ "./app/dashboards/condenser-performance/condenser-performance.component.scss")]
    })
], CondenserPerformanceComponent);



/***/ }),

/***/ "./app/dashboards/configurations/configurations.component.scss":
/*!*********************************************************************!*\
  !*** ./app/dashboards/configurations/configurations.component.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvY29uZmlndXJhdGlvbnMvY29uZmlndXJhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/dashboards/configurations/configurations.component.ts":
/*!*******************************************************************!*\
  !*** ./app/dashboards/configurations/configurations.component.ts ***!
  \*******************************************************************/
/*! exports provided: ConfigurationsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurationsComponent", function() { return ConfigurationsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_dashboards_configuration_dashboard_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/dashboards/configuration-dashboard.service */ "./app/services/dashboards/configuration-dashboard.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");
/* harmony import */ var lodash_findIndex__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/findIndex */ "../node_modules/lodash/findIndex.js");
/* harmony import */ var lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_findIndex__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/store/navigation.service */ "./app/store/navigation.service.ts");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/widgets/confirmation-box/confirmation-box.component */ "./app/widgets/confirmation-box/confirmation-box.component.ts");












let ConfigurationsComponent = class ConfigurationsComponent {
    constructor(headerService, initialService, configurationDataService, notifierService, httpService, navigationStore, configs, modalService) {
        this.headerService = headerService;
        this.initialService = initialService;
        this.configurationDataService = configurationDataService;
        this.notifierService = notifierService;
        this.httpService = httpService;
        this.navigationStore = navigationStore;
        this.configs = configs;
        this.modalService = modalService;
        this.disableFiltration = false;
        this.ltDataSource = [];
        this.waterDataSource = [];
        this.htDataSource = [];
        this.chillerDataSource = [];
        this.tabIndex = 0;
        this.selectedPlant = 0;
        this.selectedLoop = 0;
        this.selectedServiceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL;
        this.fetchLtWaterData(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL, 0, 0);
    }
    ngOnInit() {
        this.headerService.setItem('Configurations');
        this.headerService.setBoardLevel(2);
        this.getAllLocations();
    }
    getAllLocations() {
        this.initialService.navigationStore.locations$.subscribe(res => {
            if (res.length == 0) {
                this.httpService.get(this.configs.endPoints['level-locations'], { levelId: 0 }).subscribe((res) => {
                    this.navigationStore.locations = res;
                });
            }
        });
    }
    setTabIndex(index) {
        this.tabIndex = Number(index);
        switch (this.tabIndex) {
            case 0:
                this.selectedBuildingGroup = 0;
                this.selectedBuilding = 0;
                this.selectedServiceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL;
                this.fetchLtWaterData(this.selectedServiceType, this.selectedBuildingGroup, this.selectedBuilding);
                break;
            case 1:
                this.selectedLoop = 0;
                this.selectedServiceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].HT_ELECTRICAL;
                this.fetchHtData();
                break;
            case 2:
                this.selectedBuildingGroup = 0;
                this.selectedBuilding = 0;
                this.selectedServiceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER;
                this.fetchLtWaterData(this.selectedServiceType, this.selectedBuildingGroup, this.selectedBuilding);
                break;
            case 3:
                this.selectedPlant = 0;
                this.selectedServiceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].CHILLER;
                this.fetchChillerData();
                break;
            default:
                this.selectedBuildingGroup = 0;
                this.selectedBuilding = 0;
                this.selectedServiceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL;
                this.fetchLtWaterData(this.selectedServiceType, this.selectedBuildingGroup, this.selectedBuilding);
                break;
        }
    }
    onChangeBuildingGroup(event) {
        this.selectedBuildingGroup = Number(event);
        this.selectedBuilding = this.initialService.navigationStore.getBuildingsByBuildingGroup(this.selectedBuildingGroup)[0] ?
            this.initialService.navigationStore.getBuildingsByBuildingGroup(this.selectedBuildingGroup)[0].buildingID : 0;
        this.fetchLtWaterData(this.selectedServiceType, this.selectedBuildingGroup, this.selectedBuilding);
    }
    onChangeBuilding(event) {
        this.selectedBuilding = Number(event);
        this.fetchLtWaterData(this.selectedServiceType, this.selectedBuildingGroup, this.selectedBuilding);
    }
    onChangeLoop(event) {
        this.selectedLoop = Number(event);
        this.fetchHtData();
    }
    onChangePlant(event) {
        this.selectedPlant = Number(event);
        this.fetchChillerData();
    }
    fetchLtWaterData(serviceType, buildingGroupId, buildingId) {
        this.isLoading = true;
        if (buildingGroupId == 0) {
            buildingId = 0;
        }
        this.configurationDataService.getLtWaterMeters(serviceType, buildingGroupId, buildingId).then(res => {
            switch (serviceType) {
                case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL:
                    this.ltDataSource = res;
                    break;
                case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER:
                    this.waterDataSource = res;
                    break;
                case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].MAIN_WATER:
                    this.waterDataSource = res;
                    break;
            }
            this.isLoading = false;
        });
    }
    fetchHtData() {
        this.isLoading = true;
        this.configurationDataService.getHtMeters(this.selectedLoop).then(res => {
            this.htDataSource = res;
            this.isLoading = false;
        });
    }
    fetchChillerData() {
        this.isLoading = true;
        this.configurationDataService.getChillerMeters(this.selectedPlant).then(res => {
            this.chillerDataSource = res;
            this.isLoading = false;
        });
    }
    onDataFiltered(event) {
        this.filteredData = [];
        event.forEach(element => {
            element['action'] = '';
            this.filteredData.push(element);
        });
    }
    onSaveNewMeter(data) {
        let body = {
            meterName: data.meterName,
            OPCTag: data.opcTag
        };
        switch (this.tabIndex) {
            case 0:
                body['LocationId'] = data.location;
                body['meterTypeId'] = data.meterType;
                body['MeterRelationship'] = data.relationShip;
                this.configurationDataService.addLtWaterMeters(this.selectedServiceType, body).then(res => {
                    if (res.StatusCode == 201 && res.Message == 'Created') {
                        this.filteredData.unshift({
                            action: '',
                            buildingGroup: { id: data.buildingGroup, name: this.navigationStore.getBuildingGroupById(Number(data.buildingGroup))[0].description },
                            building: { id: data.building, name: this.navigationStore.getBuilding(Number(data.building))[0].buildingName },
                            level: { id: data.level, name: this.navigationStore.getLevelById(Number(data.level))[0].floorName },
                            location: { id: data.location, name: this.navigationStore.getLocationById(Number(data.location))[0].locationName },
                            meter: { id: res.Data.meterID, name: data.meterName },
                            meterType: { id: data.meterType, name: this.navigationStore.getMeterTypeById(Number(data.meterType))[0].description },
                            relationship: { id: null, name: data.relationShip },
                            opcTag: { id: null, name: data.opcTag }
                        });
                        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default()(this.filteredData, { action: 'insert' });
                        this.filteredData.splice(index, 1);
                        this.filteredData = [...this.filteredData];
                        this.notifierService.notify('success', 'Meter Successfully Added');
                    }
                    else {
                        this.notifierService.notify('error', 'Failed to Add Meter');
                    }
                });
                break;
            case 1:
                body['subStationId'] = data.substation;
                body['htLoopId'] = data.loop;
                this.configurationDataService.addHtMeters(body).then(res => {
                    if (res.StatusCode == 201 && res.Message == 'Created') {
                        this.filteredData.unshift({
                            action: '',
                            meter: { id: res.Data.meterID, name: data.meterName },
                            loop: { id: data.loop, name: this.navigationStore.getLoopById(Number(data.loop))[0].htLoopName },
                            substation: { id: data.substation, name: this.navigationStore.getSubstationById(Number(data.substation))[0].subStationName },
                            opcTag: { id: null, name: data.opcTag }
                        });
                        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default()(this.filteredData, { action: 'insert' });
                        this.filteredData.splice(index, 1);
                        this.filteredData = [...this.filteredData];
                        this.notifierService.notify('success', 'Meter Successfully Added');
                    }
                    else {
                        this.notifierService.notify('error', 'Failed to Add Meter');
                    }
                });
                break;
            case 2:
                body['LocationId'] = data.location;
                body['meterTypeId'] = data.meterType;
                body['MeterRelationship'] = data.relationShip;
                this.configurationDataService.addLtWaterMeters(this.selectedServiceType, body).then(res => {
                    if (res.StatusCode == 201 && res.Message == 'Created') {
                        this.filteredData.unshift({
                            action: '',
                            buildingGroup: { id: data.buildingGroup, name: this.navigationStore.getBuildingGroupById(Number(data.buildingGroup))[0].description },
                            building: { id: data.building, name: this.navigationStore.getBuilding(Number(data.building))[0].buildingName },
                            level: { id: data.level, name: this.navigationStore.getLevelById(Number(data.level))[0].floorName },
                            location: { id: data.location, name: this.navigationStore.getLocationById(Number(data.location))[0].locationName },
                            meter: { id: res.Data.meterID, name: data.meterName },
                            meterType: { id: data.meterType, name: this.navigationStore.getMeterTypeById(Number(data.meterType))[0].description },
                            relationship: { id: null, name: data.relationShip },
                            opcTag: { id: null, name: data.opcTag }
                        });
                        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default()(this.filteredData, { action: 'insert' });
                        this.filteredData.splice(index, 1);
                        this.filteredData = [...this.filteredData];
                        this.notifierService.notify('success', 'Meter Successfully Added');
                    }
                    else {
                        this.notifierService.notify('error', 'Failed to Add Meter');
                    }
                });
                break;
            case 3:
                body['equipmentTypeId'] = data.equipmentType;
                this.configurationDataService.addChillerMeters(data.plant, body).then(res => {
                    if (res.StatusCode == 201 && res.Message == 'Created') {
                        this.filteredData.unshift({
                            action: '',
                            plant: { id: data.plant, name: this.navigationStore.getPlantById(Number(data.plant))[0].name },
                            equipmentType: { id: data.equipmentType, name: this.navigationStore.getEquipmentTypeById(Number(data.equipmentType), Number(data.plant))[0].name },
                            equipment: { id: res.Data.equipmentID, name: null },
                            meter: { id: res.Data.meterID, name: data.meterName },
                            opcTag: { id: null, name: data.opcTag }
                        });
                        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default()(this.filteredData, { action: 'insert' });
                        this.filteredData.splice(index, 1);
                        this.filteredData = [...this.filteredData];
                        this.notifierService.notify('success', 'Meter Successfully Added');
                    }
                    else {
                        this.notifierService.notify('error', 'Failed to Add Meter');
                    }
                });
                break;
        }
    }
    onUpdateMeter(data) {
        const index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default()(this.filteredData, (item) => {
            return `${data.id}` == `${item.meter.id}`;
        });
        let body = {
            OPCTag: data.opcTag,
            meterName: data.meterName,
            meterId: data.id
        };
        switch (this.tabIndex) {
            case 0:
                body['LocationId'] = data.location;
                body['meterTypeId'] = data.meterType;
                body['MeterRelationship'] = data.relationShip;
                this.configurationDataService.updateLtWaterMeters(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL, body).then((res) => {
                    if (res.StatusCode == 200 && res.Message == 'Success') {
                        this.filteredData[index].meter.id = data.id;
                        this.filteredData[index].buildingGroup.id = Number(data.buildingGroup);
                        this.filteredData[index].buildingGroup.name = this.navigationStore.getBuildingGroupById(Number(data.buildingGroup))[0].description;
                        this.filteredData[index].building.id = data.building;
                        this.filteredData[index].building.name = this.navigationStore.getBuilding(Number(data.building))[0].buildingName;
                        this.filteredData[index].level.id = data.level;
                        this.filteredData[index].level.name = this.navigationStore.getLevelById(Number(data.level))[0].floorName;
                        this.filteredData[index].location.id = data.location;
                        this.filteredData[index].location.name = this.navigationStore.getLocationById(Number(data.location))[0].locationName;
                        this.filteredData[index].meterType.id = data.meterType;
                        this.filteredData[index].meterType.name = this.navigationStore.getMeterTypeById(Number(data.meterType))[0].description;
                        this.filteredData[index].meter.name = data.meterName;
                        this.filteredData[index].opcTag.name = data.opcTag;
                        this.filteredData[index].relationship.name = data.relationShip;
                        this.notifierService.notify('success', 'Meter Successfully Updated');
                    }
                    else {
                        this.notifierService.notify('error', 'Failed to Update Meter');
                    }
                });
                break;
            case 1:
                this.configurationDataService.updateHtMeters(body).then((res) => {
                    if (res.StatusCode == 200 && res.Message == 'Success') {
                        this.filteredData[index].loop.id = Number(data.loop);
                        this.filteredData[index].loop.name = this.navigationStore.getLoopById(Number(data.loop))[0].htLoopName;
                        this.filteredData[index].opcTag.name = data.opcTag;
                        this.filteredData[index].meter.id = data.id;
                        this.filteredData[index].substation.id = data.substation;
                        this.filteredData[index].substation.name = this.navigationStore.getSubstationById(Number(data.substation))[0].subStationName;
                        this.filteredData[index].meter.name = data.meterName;
                        this.notifierService.notify('success', 'Meter Successfully Updated');
                    }
                    else {
                        this.notifierService.notify('error', 'Failed to Update Meter');
                    }
                });
                break;
            case 2:
                body['LocationId'] = data.location;
                body['meterTypeId'] = data.meterType;
                body['MeterRelationship'] = data.relationShip;
                this.configurationDataService.updateLtWaterMeters(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER, body).then((res) => {
                    if (res.StatusCode == 200 && res.Message == 'Success') {
                        this.filteredData[index].meter.id = data.id;
                        this.filteredData[index].buildingGroup.id = Number(data.buildingGroup);
                        this.filteredData[index].buildingGroup.name = this.navigationStore.getBuildingGroupById(Number(data.buildingGroup))[0].description;
                        this.filteredData[index].building.id = data.building;
                        this.filteredData[index].building.name = this.navigationStore.getBuilding(Number(data.building))[0].buildingName;
                        this.filteredData[index].level.id = data.level;
                        this.filteredData[index].level.name = this.navigationStore.getLevelById(Number(data.level))[0].floorName;
                        this.filteredData[index].location.id = data.location;
                        this.filteredData[index].location.name = this.navigationStore.getLocationById(Number(data.location))[0].locationName;
                        this.filteredData[index].meterType.id = data.meterType;
                        this.filteredData[index].meterType.name = this.navigationStore.getMeterTypeById(Number(data.meterType))[0].description;
                        this.filteredData[index].meter.name = data.meterName;
                        this.filteredData[index].opcTag.name = data.opcTag;
                        this.filteredData[index].relationship.name = data.relationShip;
                        this.notifierService.notify('success', 'Meter Successfully Updated');
                    }
                    else {
                        this.notifierService.notify('error', 'Failed to Update Meter');
                    }
                });
                break;
            case 3:
                body['EquipmentID'] = data.equipment;
                body['equipmentTypeId'] = data.equipmentType;
                this.configurationDataService.updateChillerMeters(data.plant, body).then((res) => {
                    if (res.StatusCode == 200 && res.Message == 'Success') {
                        this.filteredData[index].plant.id = data.plant;
                        this.filteredData[index].plant.name = this.navigationStore.getPlantById(Number(data.plant))[0].name;
                        this.filteredData[index].equipmentType.id = data.equipmentType;
                        this.filteredData[index].equipmentType.name = this.navigationStore.getEquipmentTypeById(Number(data.equipmentType), Number(data.plant))[0].name;
                        this.filteredData[index].meter.name = data.meterName;
                        this.filteredData[index].opcTag.name = data.opcTag;
                        this.notifierService.notify('success', 'Meter Successfully Updated');
                    }
                    else {
                        this.notifierService.notify('error', 'Failed to Update Meter');
                    }
                });
                break;
        }
    }
    onDeleteMeter(event) {
        const modalRef = this.modalService.open(src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_11__["ConfirmationBoxComponent"], { size: 'sm', centered: true });
        modalRef.componentInstance.massage = 'Are you sure you want to delete this Meter?';
        modalRef.result.then((result) => {
            if (result == 'Cross click') {
                let deleteBody = [{
                        MeterId: event.meter.id,
                        status: 3
                    }];
                this.configurationDataService.deleteMeter(deleteBody, this.selectedServiceType).then((res) => {
                    try {
                        if (res.Message === 'Success') {
                            let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_7___default()(this.filteredData, { meter: { id: event.meter.id } });
                            this.filteredData.splice(index, 1);
                            this.notifierService.notify('success', 'Meter Successfully Deleted');
                            this.filteredData = [...this.filteredData];
                        }
                    }
                    catch (e) {
                        this.notifierService.notify('error', 'Failed to Delete Meter');
                    }
                });
            }
        }, error => { });
    }
    onEditOrInsert(event) {
        this.disableFiltration = event;
    }
};
ConfigurationsComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_5__["InitialService"] },
    { type: src_app_services_dashboards_configuration_dashboard_service__WEBPACK_IMPORTED_MODULE_3__["ConfigurationDashboardService"] },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_6__["NotifierService"] },
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_9__["HttpService"] },
    { type: src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_8__["NavigationService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_5__["InitialService"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__["NgbModal"] }
];
ConfigurationsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-configurations',
        template: __webpack_require__(/*! raw-loader!./configurations.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/configurations/configurations.component.html"),
        styles: [__webpack_require__(/*! ./configurations.component.scss */ "./app/dashboards/configurations/configurations.component.scss")]
    })
], ConfigurationsComponent);



/***/ }),

/***/ "./app/dashboards/electrical-dashboard/electrical-dashboard.component.scss":
/*!*********************************************************************************!*\
  !*** ./app/dashboards/electrical-dashboard/electrical-dashboard.component.scss ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".align-verticle-middle {\n  margin-top: 5px;\n}\n\n.card-header-max-height {\n  max-height: 54px;\n}\n\n.dark .mat-raised-button {\n  background-color: black;\n  color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12) !important;\n  box-shadow: none;\n}\n\n.input-date {\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n  display: flex;\n}\n\n#meter-tree svg g {\n  transform: translate(5px, 0) scale(0.7) !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9lbGVjdHJpY2FsLWRhc2hib2FyZC9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFxkYXNoYm9hcmRzXFxlbGVjdHJpY2FsLWRhc2hib2FyZFxcZWxlY3RyaWNhbC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvZWxlY3RyaWNhbC1kYXNoYm9hcmQvZWxlY3RyaWNhbC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtBQ0NGOztBREVBO0VBQ0UsdUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0RBQUE7RUFDQSxnQkFBQTtBQ0NGOztBRENBO0VBQ0UsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQ0VGOztBREdJO0VBQ0Usa0RBQUE7QUNBTiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvZWxlY3RyaWNhbC1kYXNoYm9hcmQvZWxlY3RyaWNhbC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxpZ24tdmVydGljbGUtbWlkZGxle1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLmNhcmQtaGVhZGVyLW1heC1oZWlnaHQge1xyXG4gIG1heC1oZWlnaHQ6IDU0cHg7XHJcbn1cclxuXHJcbi5kYXJrIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDAsIDApO1xyXG4gIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKSAhaW1wb3J0YW50O1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuLmlucHV0LWRhdGV7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbiNtZXRlci10cmVle1xyXG4gIHN2Z3tcclxuICAgIGd7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDVweCwwKSBzY2FsZSguNykgIWltcG9ydGFudDtcclxuICAgIH1cclxuICB9XHJcbn0iLCIuYWxpZ24tdmVydGljbGUtbWlkZGxlIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuXG4uY2FyZC1oZWFkZXItbWF4LWhlaWdodCB7XG4gIG1heC1oZWlnaHQ6IDU0cHg7XG59XG5cbi5kYXJrIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMikgIWltcG9ydGFudDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cblxuLmlucHV0LWRhdGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuI21ldGVyLXRyZWUgc3ZnIGcge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1cHgsIDApIHNjYWxlKDAuNykgIWltcG9ydGFudDtcbn0iXX0= */"

/***/ }),

/***/ "./app/dashboards/electrical-dashboard/electrical-dashboard.component.ts":
/*!*******************************************************************************!*\
  !*** ./app/dashboards/electrical-dashboard/electrical-dashboard.component.ts ***!
  \*******************************************************************************/
/*! exports provided: ElectricalDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElectricalDashboardComponent", function() { return ElectricalDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _services_meter_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../services/meter.service */ "./app/services/meter.service.ts");
/* harmony import */ var src_app_services_equipment_breakdown_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/services/equipment-breakdown.service */ "./app/services/equipment-breakdown.service.ts");
/* harmony import */ var src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var save_svg_as_png__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! save-svg-as-png */ "../node_modules/save-svg-as-png/lib/saveSvgAsPng.js");
/* harmony import */ var save_svg_as_png__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(save_svg_as_png__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/enums/DustributionChartType */ "./enums/DustributionChartType.ts");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var src_app_widgets_consumption_summery_chart_consumption_summery_chart_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/widgets/consumption-summery-chart/consumption-summery-chart.component */ "./app/widgets/consumption-summery-chart/consumption-summery-chart.component.ts");
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! lodash-es */ "../node_modules/lodash-es/lodash.js");
/* harmony import */ var src_enums_DateTypes__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/enums/DateTypes */ "./enums/DateTypes.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");
























let ElectricalDashboardComponent = class ElectricalDashboardComponent {
    constructor(headerService, datePipe, route, dateService, initialService, meterService, equipmentBreakdownService, router, ltDashboardService, configs, thousandSeparator) {
        this.headerService = headerService;
        this.datePipe = datePipe;
        this.route = route;
        this.dateService = dateService;
        this.initialService = initialService;
        this.meterService = meterService;
        this.equipmentBreakdownService = equipmentBreakdownService;
        this.router = router;
        this.ltDashboardService = ltDashboardService;
        this.configs = configs;
        this.thousandSeparator = thousandSeparator;
        // 0 = overview, 1 = equipment distribution, 2 = equipment breakdown, 3 = meter tree, 4 = reports
        this.tabIndex = 0;
        // 0 = week, 1 = month, 2 = year, 3 = 5 years
        this.trendLogTabIndex = 0;
        this.dailyConsumptionData = { chart: {} };
        this.equipmentBreakdownData = null;
        this.breadCrumbData = [];
        this.trendLogData = {};
        this.equipDistribution = {};
        this.equipDistributionLg = {};
        this.squareMeterPointerDescription = "EUI";
        this.buildingList = [];
        this.FileDownloadIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_13__["faDownload"];
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_22__["ChartColorMap"];
        this.isDone = {};
        this.rows = [];
        this.columns = [
            { name: "No.", key: "meterId" },
            { name: "Level", key: "level" },
            { name: "Equipment Type", key: "eqType" },
            { name: "Equipment Code", key: "eqCode" },
            { name: "Consumption ( kWh )", key: "value" },
        ];
        this.tableLoading = true;
        this.appOnInit = () => {
            const { tabkey = 0 } = this.route.snapshot.queryParams || {};
            this.tabIndex = tabkey;
            this.getBuildingName((isDone) => {
                if (isDone) {
                    if (tabkey && tabkey != 0) {
                        this.setTabIndex(tabkey);
                        this.setTrendLogData(this.trendLogTabIndex);
                    }
                    else {
                        this.getChartDatas();
                        this.setTrendLogData(this.trendLogTabIndex);
                        this.getEqBreakdownData(this.equipmentBreakdownDateRange);
                        this.getEqDistribution();
                    }
                }
            });
        };
        this._totalChild = [];
        this.calculate = (arr = [], index) => {
            this._totalChild[index] += 1;
            const temp = this._totalChild[index];
            for (let i = 0; i < arr.length; i++) {
                const item = arr[i];
                if (item.children) {
                    for (let i = 0; i < item.children.length; i++) {
                        const childItem = item.children[i];
                        if (childItem.children) {
                            this.calculate(childItem.children, index);
                        }
                    }
                }
                this._totalChild[index] = temp;
            }
        };
        this.done = true;
        this._colorMap = ['#b30000', '#7c1158', '#4421af', '#1a53ff', '#0d88e6', '#00b7c7', '#5ad45a', '#8be04e', '#ebdc78'];
        this._startDateTrendLog = {
            start: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._startDateTrendLogLineChart = {
            start: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._mapArrayTrendIndex = src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_23__["LIST_DAY_CONSUMPTION"];
        this._isFirstInit = true;
        this._maxDate = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        this._isYear = null;
        this._isMonth = null;
        this._todayConsumptionDate = {
            start: new Date(),
            end: new Date()
        };
        this._maxTodayConsumptionDate = new Date();
        this._minTodayConsumptionDate = new Date((new Date()).setDate(new Date().getDate() - 7));
        this.onChangeTodayConsumption = () => {
            this._todayConsumptionDate.end = this._todayConsumptionDate.start;
            this.todayDateRange = this._todayConsumptionDate;
            this.getTrendDaylyData('_todayConsumptionDate');
        };
        this._tempOverallConsumptioTotalData = 0;
        this._reload = true;
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        }
        this.overallDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.overallDateRange.end = this.today;
        this.meterTreeDateRange = this.dateService.getTodayUpToNow(this.today);
        this.profileDateRange = this.dateService.getLastMonth(this.today);
        this.eqDIstDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.equipmentBreakdownDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.todayDateRange = this.dateService.getToday(this.today);
        this.thisWeekDateRange = this.dateService.getLastDaysRange(this.today, 7, "days");
        this.thisMonthRange = this.dateService.getLastDaysRange(this.today, 30, "days");
        this.thisYearRange = this.dateService.getLastDaysRange(this.today, 12, "months");
        this.lastYearRange = this.dateService.getLastyears(this.today);
        this.lastFiveYearRange = this.dateService.getLastFiveYear(this.today);
        this.eqdistlg = this.dateService.thisMonthUpToNow(this.today);
        this.weekFirst =
            new Date(this.today).getDate() - new Date(this.today).getDay() + 1;
        this.weekLast = this.weekFirst + 7;
        this.monthFirst = new Date(this.today.getFullYear(), this.today.getMonth(), 1);
        this.monthLast = new Date(this.today.getFullYear(), this.today.getMonth() + 1, 1);
        this.yearFirst = new Date(new Date().getFullYear(), 0, 1);
        this.yearLast = new Date(new Date().getFullYear(), 11, 31);
        this.currentYear = new Date(new Date().setFullYear(new Date().getFullYear()));
        this.previousYear = new Date(new Date().setFullYear(new Date().getFullYear() - 1, 4, 1));
        this.route.params.subscribe((params) => {
            this.trendLogTabIndex = 0;
            // this.tabIndex = 0;
            this.buildingId = parseInt(params.id);
            this.equipDistributionLg = null;
            // this.getChartDatas();
            // this.setTrendLogData(this.trendLogTabIndex);
            this.appOnInit();
        });
        this.route.data.subscribe((data) => {
            this.headerService.electricalDashboardType.next(src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_12__["DashboardType"].LOW_TENSION);
        });
    }
    ngOnInit() {
        // this.getEqBreakdownData(this.equipmentBreakdownDateRange);
        // this.getEqDistribution();
        window.dispatchEvent(new Event("resize"));
    }
    prepareBreadCrumbData() {
        this.breadCrumbData = [];
        this.breadCrumbData.push({
            url: `electrical-building-group/${this.buildingGroupId}`,
            name: this.buildingGroupName,
        });
        this.breadCrumbData.push({ url: "#", name: this.buildingName });
    }
    exportMeter() {
        const svg = document.getElementById("meterTreeSvg").cloneNode(true);
        // const svg: any = parent.querySelector('svg'); 
        const g = svg.querySelector('g');
        g.setAttribute('transform', 'scale(.72)');
        Object(save_svg_as_png__WEBPACK_IMPORTED_MODULE_14__["saveSvgAsPng"])(svg, "Meter Tree-" + new Date().getTime() + '.jpeg', { width: 1440 });
    }
    onBreakdownFiltered(event = []) {
        if (event !== null) {
            this.rows = [];
            event.forEach((row, i) => {
                const { scalledNumber, suffix, unit } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["abbreviateNumber"])(row.meter.value, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL);
                this.rows.push({
                    meterId: i + 1,
                    level: row.level.name,
                    eqType: row.eqType.name,
                    eqCode: row.eqCode.name,
                    value: row.meter.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["moneyFormat"])((row.meter.value / 1000).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_23__["DECIMAL_MAP"].electricalBreakDown)) : 'N/A'
                    // value: this.thousandSeparator.transform(
                    //   fixDecimalNumPrecision(
                    //     row.meter.value,
                    //     this.configs.siteConfigurations.decimalNumPrecision
                    //   )
                    // ),
                });
            });
        }
    }
    getBuildingName(callback) {
        this.initialService.navigationStore.buildings$.subscribe((res) => {
            if (res.length !== 0 && res !== null) {
                let building = this.initialService.navigationStore.getBuilding(this.buildingId);
                if (building.length !== 0 && !null) {
                    this.buildingGroupId = building[0].buildingGroupID;
                    this.buildingGroupName =
                        this.initialService.navigationStore.getBuildingGroupById(this.buildingGroupId)[0].description;
                    this.headerService.setItem(building[0].buildingName);
                    this.headerService.serviceType.next(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL);
                    let buildingList = this.initialService.navigationStore.getBuildingsByBuildingGroup(building[0].buildingGroupID);
                    this.buildingList = [];
                    buildingList = buildingList.filter((x) => x.serviceTypes.some((y) => y.serviceTypeID == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL));
                    buildingList.forEach((element) => {
                        this.buildingList.push({
                            name: element.buildingName,
                            id: element.buildingID,
                        });
                    });
                    this.selectedBuilding = this.buildingId;
                    callback(true);
                }
            }
        });
    }
    getChartDatas() {
        this.initialService.navigationStore.meterTypes$.subscribe((res) => {
            if (res !== null && res.length !== 0) {
                this.getEqDistribution();
            }
        });
        this.getTrendDaylyData();
        this.getOverallConsumption();
        this.onChangeTrendLogByDate();
    }
    getEqBreakdownData(daterange) {
        this.equipmentBreakdownService
            .requestBuildingData(this.buildingId, null, null, null, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.equipmentBreakdownDateRange.start, this.equipmentBreakdownDateRange.end)
            .then((data) => {
            this.equipmentBreakdownData = data;
            this.tableLoading = false;
            this.selectedTypes = this.eqTypes.map((x) => x.id);
        }, (err) => console.log(err));
    }
    getMeterTreeData() {
        this.meterTreeLoading = true;
        this.meterService
            .getBuildingMeterTree(this.buildingId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL)
            .then((res) => {
            this.meterTreeData = res;
            // for (let i = 0; i < res.children.length; i++) {
            //   const item = res.children[i];
            //   this._totalChild.push(i+1)
            //   if(item.children){
            //     this.calculate(item.children || [], i+1)
            //   }
            // }
            // console.log(res, this._totalChild);
            this.meterTreeLoading = false;
        });
    }
    onEqBreakdownFilter(e) {
        this.rows = [];
        this.equipmentBreakdownDateRange = e;
        this.getEqBreakdownData(this.equipmentBreakdownDateRange);
    }
    getTrendDaylyData(dateKey = '_todayConsumptionDate') {
        this.isDone.dailyConsumptionData = false;
        this.dailyConsumptionData =
            this.ltDashboardService.getTodaysConsumptionEmptyChart(src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_16__["default"].BUILDING_ELECTRICAL);
        this.ltDashboardService
            .getBuildingTodaysConsumption(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this[dateKey].start, this[dateKey].end, this.buildingId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_16__["default"].BUILDING_ELECTRICAL)
            .then((res) => {
            this.dailyConsumptionData = res;
            for (let i = 0; i < this.dailyConsumptionData.data.length; i++) {
                const item = this.dailyConsumptionData.data[i];
                const newValue = item.value / 1000;
                this.dailyConsumptionData.data[i] = Object.assign({}, item, { value: item.value ? newValue : null, displayValue: item.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["moneyFormat"])((newValue || 0).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_23__["DECIMAL_MAP"].electricalTodayConsumption)) : null, toolText: "Time: $label <br/> Consumption: $displayValue kWh" });
            }
            this.dailyConsumptionData.chart = Object.assign({}, this.dailyConsumptionData.chart, { formatNumberScale: 0, paletteColors: [this.colorMap.electric.secondary] });
            this.isDone.dailyConsumptionData = true;
        });
    }
    getTrendLogs(interval, from, to) {
        // TODO: load empty chart chart
        // this.trendLogData = this.ltDashboardService.getEmptyConsumptionChart(ServiceType.ELECTRICAL, interval);
        this.isDone.trendLogData = false;
        this.ltDashboardService
            .getBuildingConsumptionChart(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, from, to, this.buildingId, interval)
            .then((res) => {
            this.trendLogData = res;
            this.isDone.trendLogData = true;
            this.trendLogData.chart = Object.assign({}, this.trendLogData.chart, { formatNumberScale: 0, valuefontSize: 16, paletteColors: [this.colorMap.electric.secondary] });
        });
    }
    get serviceType() {
        return _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"];
    }
    getEqDistribution() {
        this.isDone.equipDistribution = false;
        this.ltDashboardService
            .getBuildingEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.eqDIstDateRange.start, this.eqDIstDateRange.end, this.buildingId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_16__["default"].BUILDING_ELECTRICAL, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_17__["DistributionChartType"].SMALL, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES)
            .then((res) => {
            this.equipDistribution = res;
            this.isDone.equipDistribution = true;
        });
    }
    getEqDistributionLg() {
        this.isDone.equipDistributionLg = false;
        this.ltDashboardService
            .getBuildingEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.eqdistlg.start, this.eqdistlg.end, this.buildingId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_16__["default"].BUILDING_ELECTRICAL, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_17__["DistributionChartType"].LARGE, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES)
            .then((res) => {
            this.equipDistributionLg = res;
            this.isDone.equipDistributionLg = true;
        });
    }
    setTabIndex(index) {
        this.tabIndex = index;
        this.meterTreeData = null;
        if (this.tabIndex == 0) {
            this.getChartDatas();
        }
        else if (this.tabIndex == 1) {
            this.equipDistributionLg = {};
            this.getEqDistributionLg();
        }
        else if (this.tabIndex == 2) {
            this.getEqBreakdownData(this.equipmentBreakdownDateRange);
        }
        else if (this.tabIndex == 3) {
            this.meterTreeData = null;
            this.getMeterTreeData();
        }
        window.history.pushState(null, null, index != 0 ? `${window.location.pathname}?tabkey=${index}` : `${window.location.pathname}`);
    }
    getColor() {
        return this.done ? "Blue" : "White";
    }
    setConsumpType(event) {
        this.trendLogData = [];
        this.multipleConsump = event;
        this.setTrendLogData(this.trendLogTabIndex);
    }
    setTypesFilter(ids) {
        this.selectedTypes = ids;
        this.getConsumptionData();
    }
    getConsumptionData() {
        if (this.typeChart) {
            this.typeChart.reset();
        }
        let colors = [];
        if (this.trendLogTabIndex == 0 || this.trendLogTabIndex == 1) {
            this.tempIntervalid = 2;
        }
        else if (this.trendLogTabIndex == 2) {
            this.tempIntervalid = 3;
        }
        else if (this.trendLogTabIndex == 3) {
            this.tempIntervalid = 4;
        }
        this.ltDashboardService
            .getCategoryTrends(this.buildingId, this.tempIntervalid, this.getDate(this._startDateTrendLogLineChart.start), this.getDate(this._startDateTrendLogLineChart.end))
            .subscribe((res) => {
            if (res.length) {
                const labels = res[0]["data"].map((x) => {
                    return {
                        label: this.getConvertedDateLabel(x.label, this.dates)
                        // label: this.datePipe.transform(this.getConvertedDateLabel(x.label, this.dates), 'MMM-dd')
                    };
                });
                // const values = res.filter((x: any) => {
                //   if(this.selectedTypes!==undefined){
                //     return this.selectedTypes.indexOf(x.itemId) > -1
                //   }
                // })
                const sumData = [];
                for (let i = 0; i < res.length; i++) {
                    const group = res[i];
                    for (let j = 0; j < group.data.length; j++) {
                        const { label, value } = group.data[j];
                        if (sumData[j]) {
                            sumData[j].value = Number(sumData[j].value || 0) + (Number(value) || 0);
                        }
                        else {
                            sumData.push({ label, value });
                        }
                    }
                }
                res.push({
                    itemId: 1, name: "Total",
                    data: sumData
                });
                const values = res.map((x, i) => {
                    const color = this.getColorCode(src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES, x.itemId);
                    return {
                        anchorbgcolor: color,
                        anchorbordercolor: color,
                        seriesname: x.name,
                        data: x.data.map((d) => {
                            return {
                                value: ((d.value) / 1000).toFixed(2),
                                color: color,
                            };
                        }),
                    };
                });
                if (this.typeChart) {
                    if (!colors || colors.length < 1) {
                        colors = this._colorMap;
                    }
                    else {
                        colors = Array.from(new Set(colors));
                    }
                    this.typeChart.setData(labels, values, colors);
                    this.typeChart.dataSource.chart = Object.assign({}, this.typeChart.dataSource.chart, { "legendItemFontSize": "15", "legendBgAlpha": "20", "legendItemFontColor": "#ffffff" });
                }
            }
        }, (err) => console.log("Err"));
    }
    getDate(date) {
        const month = new Date(date).getMonth() + 1;
        const day = new Date(date).getDate();
        const year = new Date(date).getFullYear();
        return `${year}/${month}/${day}`;
    }
    onChangeTrendLogByDate(isInit = false) {
        const { month, date, year, target } = this._mapArrayTrendIndex[this.trendLogTabIndex];
        this._isYear = year;
        this._isMonth = month;
        const { start, end } = this._startDateTrendLog;
        let newStart = new Date(start);
        let newEnd = new Date(end);
        if (isInit) {
            this._isFirstInit = false;
        }
        if (this._isFirstInit) {
            const currentDate = new Date(start);
            let newDate = this._maxDate.getDate();
            let newMonth = this._maxDate.getMonth();
            if (year || month) {
                newDate = 1;
                if (year) {
                    newMonth = 0;
                }
            }
            currentDate.setDate(newDate);
            currentDate.setMonth(newMonth);
            newEnd.setDate(newDate);
            newEnd.setMonth(newMonth);
            newStart = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(currentDate, month || date || year, target, 'minus');
            this._startDateTrendLog.end = newEnd;
            this._startDateTrendLog.start = newEnd;
        }
        else {
            if (date) {
                newStart.setDate(end.getDate() - date);
            }
            else if (month) {
                newStart.setMonth(end.getMonth() - month);
                newStart.setDate(1);
            }
            else if (year) {
                newStart.setFullYear(end.getFullYear() - year);
                newStart.setMonth(0);
            }
        }
        if (date) {
            newEnd = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(newEnd, 1, 'day');
        }
        this._startDateTrendLogLineChart = { start: newStart, end: newEnd };
        if (!this.multipleConsump) {
            this.getTrendLogs(this.trendLogTabIndex + 1, this.getDate(newStart), this.getDate(newEnd));
        }
        else {
            this.getConsumptionData();
        }
        this.resetTime();
    }
    setTrendLogData(index) {
        this.trendLogTabIndex = index;
        this.onChangeTrendLogByDate();
    }
    // setTrendLogData(index: number) {
    //   this.trendLogTabIndex = index;
    //   if (!this.multipleConsump) {
    //     switch (index) {
    //     case 0: {
    //       this.trendLogTabIndex = 0;
    //       this.getTrendLogs(1,
    //         this.datePipe.transform(
    //           this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd')),
    //         this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 1: {
    //       this.trendLogTabIndex = 1;
    //       this.getTrendLogs(2,
    //         this.datePipe.transform(this.thisMonthRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisMonthRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 2: {
    //       this.trendLogTabIndex = 2;
    //       this.thisYearRange.start.setDate(1);
    //       this.thisYearRange.end.setDate(1);
    //       this.getTrendLogs(3,
    //         this.datePipe.transform(this.thisYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisYearRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 3: {
    //       this.trendLogTabIndex = 3;
    //       this.getTrendLogs(4,
    //         this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //   }
    // }
    //   else this.getConsumptionData();
    // }
    buildingChanged(data) {
        this.rows = [];
        this.equipmentBreakdownData = null;
        if (data.value === "0") {
            this.router.navigateByUrl(encodeURI(`electrical-building-group/${this.buildingGroupId}?tabkey=${this.tabIndex}`));
        }
        else {
            this.router.navigateByUrl(encodeURI(`electrical/${data.value}?tabkey=${this.tabIndex}`));
        }
    }
    getOverallConsumption() {
        this.isDone.overallConsumptioTotalData = false;
        this.ltDashboardService
            .getOverallConsumptionBuilding(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.overallDateRange.start, this.overallDateRange.end, this.buildingId)
            .then((res) => {
            this._tempOverallConsumptioTotalData = res;
            this.overallConsumptioTotalData = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["fixDecimalNumPrecision"])(res, 2);
            this.getGfa();
            this.isDone.overallConsumptioTotalData = true;
        });
    }
    getGfa() {
        this.isDone.overallConsumptioSquareData = false;
        this.ltDashboardService
            .getGFABuilding(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.buildingId)
            .then((res) => {
            this.isDone.overallConsumptioSquareData = true;
            const { start, end } = this.overallDateRange;
            const daysGap = ((end - start) / (1000 * 60 * 60 * 24)) + 1;
            // const oldEUI = (this.overallConsumptioTotalData == null ||  this.overallConsumptioTotalData == 0) ? null : this.overallConsumptioTotalData / res
            const newEUI = (365 / daysGap) * ((this.overallConsumptioTotalData || 0) / res);
            // const { scalledNumber, suffix, unit } = abbreviateNumber(Number(newEUI), ServiceType.MAIN_INCOMER);
            // console.log(newEUI,'---');
            if (res == null || res == 0) {
                this.overallConsumptioSquareData = null;
                this.squareMeterPointerDescription =
                    "EUI";
            }
            else {
                this.overallConsumptioSquareData = newEUI;
                this.squareMeterPointerDescription =
                    "EUI";
            }
        });
    }
    dateRangeListner(chartType) {
        this.resetTime();
        let dataset;
        switch (chartType) {
            case "eqDist":
                dataset = this.getEqDistribution();
                if (dataset !== null) {
                }
                else {
                }
                break;
            case "overall":
                dataset = this.getOverallConsumption();
                break;
            case "eqdistlg":
                this.getEqDistributionLg();
                break;
        }
    }
    get dates() {
        switch (this.trendLogTabIndex) {
            case 1:
                return {
                    from: this.datePipe.transform(this.thisMonthRange.start, "yyyy/MM/dd"),
                    to: this.datePipe.transform(this.thisMonthRange.end, "yyyy/MM/dd"),
                };
            case 2:
                return {
                    from: this.datePipe.transform(this.thisYearRange.start, "yyyy/MM/dd"),
                    to: this.datePipe.transform(this.thisYearRange.end, "yyyy/MM/dd"),
                };
            case 3:
                return {
                    from: this.datePipe.transform(this.lastFiveYearRange.start, "yyyy/MM/dd"),
                    to: this.datePipe.transform(this.lastFiveYearRange.end, "yyyy/MM/dd"),
                };
            default:
                return {
                    from: this.datePipe.transform(this.thisWeekDateRange.start, "yyyy/MM/dd"),
                    to: this.datePipe.transform(this.thisWeekDateRange.end, "yyyy/MM/dd"),
                };
        }
    }
    get intervalTime() {
        switch (this.trendLogTabIndex) {
            case 1:
                return {
                    from: this.datePipe.transform(this.thisMonthRange.start, "yyyy/MM/dd"),
                    to: this.datePipe.transform(this.thisMonthRange.end, "yyyy/MM/dd"),
                };
            case 2:
                return {
                    from: this.datePipe.transform(this.previousYear, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(this.currentYear, 'yyyy/MM/dd')
                };
            case 3:
                return {
                    from: this.datePipe.transform(this.lastFiveYearRange.start, "yyyy/MM/dd"),
                    to: this.datePipe.transform(this.lastFiveYearRange.end, "yyyy/MM/dd"),
                };
            default:
                return {
                    from: this.datePipe.transform(this.thisWeekDateRange.start, "yyyy/MM/dd"),
                    to: this.datePipe.transform(this.thisWeekDateRange.end, "yyyy/MM/dd"),
                };
        }
    }
    get eqTypes() {
        let eqTypes = [];
        if (this.equipmentBreakdownData) {
            eqTypes = [
                ...new Map(this.equipmentBreakdownData.map((item) => [
                    item.eqType.id,
                    item.eqType,
                ])).values(),
            ];
        }
        return Object(lodash_es__WEBPACK_IMPORTED_MODULE_20__["orderBy"])(eqTypes, ["name"], ["desc"]);
    }
    getConvertedDateLabel(date, type) {
        switch (type) {
            case src_enums_DateTypes__WEBPACK_IMPORTED_MODULE_21__["DateTypes"].DATE:
                return this.datePipe.transform(date, 'MMM-dd');
            case src_enums_DateTypes__WEBPACK_IMPORTED_MODULE_21__["DateTypes"].MONTH:
                return this.datePipe.transform(date, 'MMM');
            case src_enums_DateTypes__WEBPACK_IMPORTED_MODULE_21__["DateTypes"].YEAR:
                return date;
            default:
                return date;
        }
    }
    /*
      Get color code
    */
    getColorCode(chartGroupType, itemId) {
        let item;
        let color;
        switch (chartGroupType) {
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER:
                return '';
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].BUILDING_CATEGORY:
                item = Object(lodash_es__WEBPACK_IMPORTED_MODULE_20__["find"])(this.initialService.navigationStore.buildingCategories, { buildingCategoryID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES:
                item = Object(lodash_es__WEBPACK_IMPORTED_MODULE_20__["find"])(this.initialService.navigationStore.meterTypes, { meterTypeID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].HT_LOOPS:
                return '';
        }
    }
    getDefaultColorCode(item) {
        let color;
        if (item === undefined || item.attributes.length === 0) {
            return this.configs.config.defaultColorCode;
        }
        else {
            color = Object(lodash_es__WEBPACK_IMPORTED_MODULE_20__["find"])(item.attributes, { textId: this.configs.config.attributes.COLOR_CODE });
            return color === null || color === undefined ? this.configs.config.defaultColorCode : color.value;
        }
    }
    resetTime() {
        setTimeout(() => this._reload = false);
        setTimeout(() => this._reload = true);
    }
};
ElectricalDashboardComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_7__["HeaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_6__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: _services_meter_service__WEBPACK_IMPORTED_MODULE_10__["MeterService"] },
    { type: src_app_services_equipment_breakdown_service__WEBPACK_IMPORTED_MODULE_11__["EquipmentBreakdownService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["LtDashboardService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_18__["ThousandSeparatorPipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"])(src_app_widgets_consumption_summery_chart_consumption_summery_chart_component__WEBPACK_IMPORTED_MODULE_19__["ConsumptionSummeryChartComponent"], { static: false })
], ElectricalDashboardComponent.prototype, "typeChart", void 0);
ElectricalDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: "app-electrical-dashboard",
        template: __webpack_require__(/*! raw-loader!./electrical-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/electrical-dashboard/electrical-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./electrical-dashboard.component.scss */ "./app/dashboards/electrical-dashboard/electrical-dashboard.component.scss")]
    })
], ElectricalDashboardComponent);



/***/ }),

/***/ "./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.scss":
/*!*********************************************************************************************!*\
  !*** ./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.scss ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".align-verticle-middle {\n  margin-top: 5px;\n}\n\n.card-header-max-height {\n  max-height: 54px;\n}\n\n.headerContainer {\n  display: flex;\n}\n\n.buildingSelector {\n  flex-grow: 1;\n}\n\n.input-date {\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n  display: flex;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9lbGVjdHJpY2FsLWdyb3VwLWRhc2hib2FyZC9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFxkYXNoYm9hcmRzXFxlbGVjdHJpY2FsLWdyb3VwLWRhc2hib2FyZFxcZWxlY3RyaWNhbC1ncm91cC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvZWxlY3RyaWNhbC1ncm91cC1kYXNoYm9hcmQvZWxlY3RyaWNhbC1ncm91cC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtBQ0NGOztBREVBO0VBQ0UsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkcy9lbGVjdHJpY2FsLWdyb3VwLWRhc2hib2FyZC9lbGVjdHJpY2FsLWdyb3VwLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGlnbi12ZXJ0aWNsZS1taWRkbGV7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcblxyXG4uY2FyZC1oZWFkZXItbWF4LWhlaWdodCB7XHJcbiAgbWF4LWhlaWdodDogNTRweDtcclxufVxyXG5cclxuLmhlYWRlckNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uYnVpbGRpbmdTZWxlY3RvcntcclxuICBmbGV4LWdyb3c6IDE7XHJcbn1cclxuXHJcbi5pbnB1dC1kYXRle1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59IiwiLmFsaWduLXZlcnRpY2xlLW1pZGRsZSB7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLmNhcmQtaGVhZGVyLW1heC1oZWlnaHQge1xuICBtYXgtaGVpZ2h0OiA1NHB4O1xufVxuXG4uaGVhZGVyQ29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmJ1aWxkaW5nU2VsZWN0b3Ige1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbi5pbnB1dC1kYXRlIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG59Il19 */"

/***/ }),

/***/ "./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.ts":
/*!*******************************************************************************************!*\
  !*** ./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.ts ***!
  \*******************************************************************************************/
/*! exports provided: ElectricalGroupDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElectricalGroupDashboardComponent", function() { return ElectricalGroupDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _services_meter_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../services/meter.service */ "./app/services/meter.service.ts");
/* harmony import */ var src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! save-svg-as-png */ "../node_modules/save-svg-as-png/lib/saveSvgAsPng.js");
/* harmony import */ var save_svg_as_png__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/enums/DustributionChartType */ "./enums/DustributionChartType.ts");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var src_app_widgets_consumption_summery_chart_consumption_summery_chart_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/widgets/consumption-summery-chart/consumption-summery-chart.component */ "./app/widgets/consumption-summery-chart/consumption-summery-chart.component.ts");
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! lodash-es */ "../node_modules/lodash-es/lodash.js");
/* harmony import */ var src_enums_DateTypes__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/enums/DateTypes */ "./enums/DateTypes.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");























let ElectricalGroupDashboardComponent = class ElectricalGroupDashboardComponent {
    constructor(headerService, datePipe, route, dateService, initialService, meterService, thousandSeparator, router, ltDashboardService, configs) {
        this.headerService = headerService;
        this.datePipe = datePipe;
        this.route = route;
        this.dateService = dateService;
        this.initialService = initialService;
        this.meterService = meterService;
        this.thousandSeparator = thousandSeparator;
        this.router = router;
        this.ltDashboardService = ltDashboardService;
        this.configs = configs;
        this.tabIndex = 0;
        // 0 = week, 1 = month, 2 = year, 3 = 5 years
        this.trendLogTabIndex = 0;
        this.dailyConsumptionData = { chart: {} };
        this.overallConsumptioTotalData = 0;
        this.overallConsumptioSquareData = 0;
        this.trendLogData = {};
        this.equipDistribution = {};
        this.equipDistributionLg = {};
        this.squareMeterPointerDescription = 'EUI';
        this.buildings = [];
        this.FileDownloadIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_12__["faDownload"];
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_21__["ChartColorMap"];
        this.isDone = {};
        this.rows = [];
        this.columns = [
            { name: 'No.', key: 'meterId' },
            { name: 'Group Name', key: 'groupName' },
            { name: 'Block', key: 'block' },
            { name: 'Level', key: 'level' },
            { name: 'Equipment Type', key: 'eqType' },
            { name: 'Equipment Code', key: 'eqCode' },
            { name: 'Consumption ( kWh )', key: 'value' }
        ];
        // ngOnInit() {
        //   // this.getEqBreakdownData(this.equipmentBreakdownDateRange);
        //   // this.getEqDistribution();
        //   this.appOnInit();
        //   window.dispatchEvent(new Event("resize"));
        // }
        this.appOnInit = () => {
            const { tabkey = 0 } = this.route.snapshot.queryParams || {};
            this.tabIndex = tabkey;
            this.fillDashboard((isDone) => {
                if (isDone) {
                    if (tabkey && tabkey != 0) {
                        this.setTabIndex(tabkey);
                    }
                    else {
                        this.getChartDatas();
                        this.getOverallConsumption();
                        this.getEqBreakdownData(this.equipmentBreakdownDateRange);
                        this.setTrendLogData(this.trendLogTabIndex);
                    }
                }
            });
        };
        this._startDateTrendLog = {
            start: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._startDateTrendLogLineChart = {
            start: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._mapArrayTrendIndex = src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_22__["LIST_DAY_CONSUMPTION"];
        this._isFirstInit = true;
        this._maxDate = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        this._isYear = null;
        this._isMonth = null;
        this._todayConsumptionDate = {
            start: new Date(),
            end: new Date()
        };
        this._maxTodayConsumptionDate = new Date();
        this._minTodayConsumptionDate = new Date((new Date()).setDate(new Date().getDate() - 7));
        this.onChangeTodayConsumption = () => {
            this._todayConsumptionDate.end = this._todayConsumptionDate.start;
            this.todayDateRange = this._todayConsumptionDate;
            this.getTrendDaylyData('_todayConsumptionDate');
        };
        this._reload = true;
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        }
        this.overallDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.overallDateRange.end = this.today;
        this.meterTreeDateRange = this.dateService.getTodayUpToNow(this.today);
        this.profileDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.eqDIstDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.todayDateRange = this.dateService.getToday(this.today);
        this.thisWeekDateRange = this.dateService.getLastDaysRange(this.today, 7, 'days');
        this.thisMonthRange = this.dateService.getLastDaysRange(this.today, 30, 'days');
        this.thisYearRange = this.dateService.getLastDaysRange(this.today, 12, 'months');
        this.equipmentBreakdownDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.lastFiveYearRange = this.dateService.getLastFiveYear(this.today);
        this.lastYearRange = this.dateService.getLastyears(this.today);
        this.eqdistlg = this.dateService.thisMonthUpToNow(this.today);
        this.eqDIstDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.weekFirst = new Date(this.today).getDate() - new Date(this.today).getDay() + 1;
        this.weekLast = this.weekFirst + 7;
        this.monthFirst = new Date(this.today.getFullYear(), this.today.getMonth(), 1);
        this.monthLast = new Date(this.today.getFullYear(), this.today.getMonth() + 1, 0);
        this.yearFirst = new Date(new Date().getFullYear(), 0, 1);
        this.yearLast = new Date(new Date().getFullYear(), 11, 31);
        this.currentYear = new Date(new Date().setFullYear(new Date().getFullYear()));
        this.previousYear = new Date(new Date().setFullYear(new Date().getFullYear() - 1, 4, 1));
        console.log(this.currentYear + 'CY' + this.previousYear + 'PY');
        this.route.params.subscribe(params => {
            this.trendLogTabIndex = 0;
            this.tabIndex = 0;
            this.groupId = parseInt(params.id);
            this.equipDistributionLg = null;
            this.buildings = [];
            this.rows = [];
            this.eqBreakdownFiltered = null;
            // this.fillDashboard();
            // this.setTrendLogData(this.trendLogTabIndex);
            this.appOnInit();
        });
        this.route.data.subscribe(data => {
            this.headerService.electricalDashboardType.next(src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_11__["DashboardType"].LOW_TENSION);
        });
        this.meterTreeLoading = false;
    }
    ngOnInit() {
    }
    fillDashboard(callback) {
        this.initialService.navigationStore.buildingGroups$.subscribe(res => {
            if (res.length !== 0 && res !== null) {
                let buildingGroup = this.initialService.navigationStore.getBuildingGroupById(this.groupId);
                if (buildingGroup.length !== 0 && !null) {
                    this.buildingName = buildingGroup[0].description;
                    this.headerService.setItem(buildingGroup[0].description);
                    this.headerService.serviceType.next(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL);
                }
            }
        });
        this.initialService.navigationStore.buildings$.subscribe(res => {
            if (res.length !== 0 && res !== null) {
                this.buildings = [];
                let buildingList = this.initialService.navigationStore.getBuildingsByBuildingGroup(this.groupId);
                buildingList = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL));
                buildingList.forEach(element => {
                    this.buildings.push({ name: element.buildingName, id: element.buildingID });
                });
                callback(true);
            }
        });
    }
    getChartDatas() {
        this.initialService.navigationStore.meterTypes$.subscribe(res => {
            if (res !== null && res.length !== 0) {
                this.getEqDistribution();
            }
        });
        this.getTrendDaylyData();
        this.onChangeTrendLogByDate();
        // this.getTrendLogs(1,
        //   this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd'),
        //   this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd')
        // );
    }
    exportMeter() {
        const svg = document.getElementById("meterTreeSvg");
        // const svg: any = parent.querySelector('svg'); 
        const g = svg.querySelector('g');
        g.setAttribute('transform', 'scale(.72)');
        Object(save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__["saveSvgAsPng"])(svg, "Meter Tree-" + new Date().getTime() + '.jpeg', { width: 1440 });
    }
    getEqBreakdownData(dateRange) {
        this.tableLoading = true;
        this.ltDashboardService.getBuildingGroupEqBreakDown(this.groupId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, dateRange).then(res => {
            this.eqBreakdownFiltered = res;
            this.tableLoading = false;
            this.selectedTypes = this.eqTypes.map(x => x.id);
        });
    }
    getMeterTreeData() {
        this.meterTreeLoading = true;
        this.meterService.getGroupMeterTree(this.groupId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL).then(res => {
            this.meterTreeDatas = res;
            this.meterTreeLoading = false;
        });
    }
    getuildingSet() {
        this.buildings.forEach(element => {
            this.buildings.push({ name: element.buildingName, id: element.id });
        });
    }
    setConsumpType(event) {
        this.trendLogData = [];
        this.multipleConsump = event;
        this.setTrendLogData(this.trendLogTabIndex);
    }
    setTypesFilter(ids) {
        this.selectedTypes = ids;
        this.getConsumptionData();
    }
    getConsumptionData() {
        // if (this.typeChart)
        //   this.typeChart.reset();
        if (this.typeChart) {
            this.typeChart.reset();
        }
        let labels;
        let data = [];
        let count = 0;
        let colors = [];
        if (this.trendLogTabIndex == 0 || this.trendLogTabIndex == 1) {
            this.tempIntervalId = 2;
        }
        else if (this.trendLogTabIndex == 2) {
            this.tempIntervalId = 3;
        }
        else if (this.trendLogTabIndex == 3) {
            this.tempIntervalId = 4;
        }
        this.buildings.forEach((building, i) => {
            this.ltDashboardService.getCategoryTrends(building.id, this.tempIntervalId, this.getDate(this._startDateTrendLogLineChart.start), this.getDate(this._startDateTrendLogLineChart.end)).subscribe((res) => {
                if (res.length) {
                    if (!labels)
                        labels = res[0]['data'].map(x => {
                            return {
                                label: this.getConvertedDateLabel(x.label, this.dates),
                            };
                        });
                    // const values = res.filter((x: any) => {
                    //  if(this.selectedTypes!==undefined){
                    //   return this.selectedTypes.indexOf(x.itemId) > -1
                    // }
                    // })
                    const sumData = [];
                    for (let i = 0; i < res.length; i++) {
                        const group = res[i];
                        for (let j = 0; j < group.data.length; j++) {
                            const { label, value } = group.data[j];
                            if (sumData[j]) {
                                sumData[j].value = Number(sumData[j].value || 0) + (Number(value) || 0);
                            }
                            else {
                                sumData.push({ label, value });
                            }
                        }
                    }
                    res.push({
                        itemId: 1, name: "Total",
                        data: sumData
                    });
                    const values = res.map((x) => {
                        const color = this.getColorCode(src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES, x.itemId);
                        return {
                            id: x.itemId,
                            seriesname: x.name,
                            data: x.data.map(d => {
                                return {
                                    value: ((d.value || 0) / 1000).toFixed(2)
                                };
                            })
                        };
                    });
                    if (data.length == 0)
                        data = values;
                    else {
                        values.forEach((val, ii) => {
                            const index = data.findIndex(d => d.id == val.id);
                            if (index > -1)
                                data[index].data.forEach((e, i) => {
                                    data[index].data[i].value += val.data[i].value;
                                });
                            else
                                (data.push(val));
                        });
                    }
                }
                count++;
                if (count == this.buildings.length && this.typeChart) {
                    if (!colors || colors.length < 1) {
                        colors = ['#b30000', '#7c1158', '#4421af', '#1a53ff', '#0d88e6', '#00b7c7', '#5ad45a', '#8be04e', '#ebdc78'];
                    }
                    else {
                        colors = Array.from(new Set(colors));
                    }
                    this.typeChart.setData(labels, data, colors);
                    this.typeChart.dataSource.chart = Object.assign({}, this.typeChart.dataSource.chart, { "legendItemFontSize": "15", "legendBgAlpha": "20", "legendItemFontColor": "#ffffff" });
                }
            }, err => console.log("Err"));
        });
    }
    buildingChanged(data) {
        // if ( data.value === 0 ) {
        //     this.router.navigateByUrl(encodeURI(`electrical-building-group/${this.groupId}`));
        // }
        // this.router.navigateByUrl(encodeURI(`electrical/${data.value}`));
        if (data.value === "0") {
            this.router.navigateByUrl(encodeURI(`electrical-building-group/${this.buildingGroupId}?tabkey=${this.tabIndex}`));
        }
        else {
            this.router.navigateByUrl(encodeURI(`electrical/${data.value}?tabkey=${this.tabIndex}`));
        }
    }
    getTrendDaylyData(dateKey = '_todayConsumptionDate') {
        this.isDone.dailyConsumptionData = false;
        this.dailyConsumptionData = this.ltDashboardService.getTodaysConsumptionEmptyChart(src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_15__["default"].SITE_ELECTRICAL);
        this.ltDashboardService.getBuildingGroupTodaysConsumption(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this[dateKey].start, this[dateKey].end, this.groupId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_15__["default"].BUILDING_ELECTRICAL).then(res => {
            this.dailyConsumptionData = res;
            for (let i = 0; i < this.dailyConsumptionData.data.length; i++) {
                const item = this.dailyConsumptionData.data[i];
                const newValue = item.value / 1000;
                this.dailyConsumptionData.data[i] = Object.assign({}, item, { value: item.value ? newValue : null, displayValue: item.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["moneyFormat"])((newValue || 0).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_22__["DECIMAL_MAP"].electricalTodayConsumption)) : null, toolText: "Time: $label <br/> Consumption: $displayValue kWh" });
            }
            this.dailyConsumptionData.chart = Object.assign({}, this.dailyConsumptionData.chart, { formatNumberScale: 0, paletteColors: [this.colorMap.electric.secondary] });
            this.isDone.dailyConsumptionData = true;
        });
    }
    getTrendLogs(interval, from, to) {
        // TODO: load empty chart chart
        // this.trendLogData = this.ltDashboardService.getEmptyConsumptionChart(ServiceType.ELECTRICAL, interval);
        // this.ltDashboardService.getBuildingGroupConsumptionChart(ServiceType.ELECTRICAL, this.dates.from, this.dates.to, this.groupId, interval).then(res=>{
        //   this.trendLogData = res;
        //   this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
        // });
        this.ltDashboardService.getBuildingGroupConsumptionChart(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, from, to, this.groupId, interval).then(res => {
            this.trendLogData = res;
            // for (let i = 0; i < this.trendLogData.data.length; i++) {
            //   const item = this.trendLogData.data[i];
            //   const newValue = item.value / 1000;
            //   this.trendLogData.data[i] = {
            //     ...item,
            //     value: item.value ? newValue : null,
            //     displayValue: item.value ? moneyFormat((newValue || 0).toFixed(DECIMAL_MAP.trendLogs)) : null,
            //     toolText: "Day: $label <br/> Consumption: $displayValue kWh",
            //   }
            // }
            this.trendLogData.chart = Object.assign({}, this.trendLogData.chart, { formatNumberScale: 0, valuefontSize: 16, paletteColors: [this.colorMap.electric.secondary] });
        });
    }
    getEqDistribution() {
        this.isDone.equipDistribution = false;
        this.ltDashboardService.getBuildingGroupEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.eqDIstDateRange.start, this.eqDIstDateRange.end, this.groupId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_15__["default"].BUILDING_ELECTRICAL, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_16__["DistributionChartType"].SMALL, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES).then(res => {
            this.equipDistribution = res;
            this.isDone.equipDistribution = true;
        });
    }
    get serviceType() { return _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"]; }
    getEqDistributionLg() {
        this.isDone.equipDistributionLg = false;
        this.ltDashboardService.getBuildingGroupEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.eqdistlg.start, this.eqdistlg.end, this.groupId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_15__["default"].BUILDING_ELECTRICAL, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_16__["DistributionChartType"].LARGE, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES).then(res => {
            this.equipDistributionLg = res;
            this.isDone.equipDistributionLg = true;
        });
    }
    onEqBreakdownFilter(data) {
        this.equipmentBreakdownDateRange = data;
        this.getEqBreakdownData(this.equipmentBreakdownDateRange);
    }
    setTabIndex(index) {
        this.tabIndex = index;
        this.meterTreeDatas = null;
        if (this.tabIndex == 0) {
            this.getChartDatas();
        }
        else if (this.tabIndex == 1) {
            this.equipDistributionLg = {};
            this.getEqDistributionLg();
        }
        else if (this.tabIndex == 2) {
            this.getEqBreakdownData(this.equipmentBreakdownDateRange);
        }
        else if (this.tabIndex == 3) {
            this.meterTreeData = null;
            this.getMeterTreeData();
        }
        window.history.pushState(null, null, index != 0 ? `${window.location.pathname}?tabkey=${index}` : `${window.location.pathname}`);
    }
    getDate(date) {
        const month = new Date(date).getMonth() + 1;
        const day = new Date(date).getDate();
        const year = new Date(date).getFullYear();
        return `${year}/${month}/${day}`;
    }
    onChangeTrendLogByDate(isInit = false) {
        const { month, date, year, target } = this._mapArrayTrendIndex[this.trendLogTabIndex];
        this._isYear = year;
        this._isMonth = month;
        const { start, end } = this._startDateTrendLog;
        let newStart = new Date(start);
        let newEnd = new Date(end);
        if (isInit) {
            this._isFirstInit = false;
        }
        if (this._isFirstInit) {
            const currentDate = new Date(start);
            let newDate = this._maxDate.getDate();
            let newMonth = this._maxDate.getMonth();
            if (year || month) {
                newDate = 1;
                if (year) {
                    newMonth = 0;
                }
            }
            currentDate.setDate(newDate);
            currentDate.setMonth(newMonth);
            newEnd.setDate(newDate);
            newEnd.setMonth(newMonth);
            newStart = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(currentDate, month || date || year, target, 'minus');
            this._startDateTrendLog.end = newEnd;
            this._startDateTrendLog.start = newEnd;
        }
        else {
            if (date) {
                newStart.setDate(end.getDate() - date);
            }
            else if (month) {
                newStart.setMonth(end.getMonth() - month);
                newStart.setDate(1);
            }
            else if (year) {
                newStart.setFullYear(end.getFullYear() - year);
                newStart.setMonth(0);
            }
        }
        if (date) {
            newEnd = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(newEnd, 1, 'day');
        }
        this._startDateTrendLogLineChart = { start: newStart, end: newEnd };
        if (!this.multipleConsump) {
            this.getTrendLogs(this.trendLogTabIndex + 1, this.getDate(newStart), this.getDate(newEnd));
        }
        else {
            this.getConsumptionData();
        }
        this.resetTime();
    }
    setTrendLogData(index) {
        this.trendLogTabIndex = index;
        this.onChangeTrendLogByDate();
    }
    // setTrendLogData(index: number) {
    //   this.trendLogTabIndex = index;
    //   if(!this.multipleConsump)  {
    //     switch (index) {
    //     case 0: {
    //       this.trendLogTabIndex = 0;
    //       this.getTrendLogs(1,
    //         this.datePipe.transform(
    //           this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd')),
    //         this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 1: {
    //       this.trendLogTabIndex = 1;
    //       this.getTrendLogs(2,
    //         this.datePipe.transform(this.thisMonthRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisMonthRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 2: {
    //       this.trendLogTabIndex = 2;
    //       this.thisYearRange.start.setDate(1);
    //       this.thisYearRange.end.setDate(1);
    //       this.getTrendLogs(3,
    //         this.datePipe.transform(this.thisYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisYearRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 3: {
    //       this.trendLogTabIndex = 3;
    //       this.getTrendLogs(4,
    //         this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //   }
    //   }
    //    // this.getTrendLogs(index);
    //   else
    //     this.getConsumptionData();
    // }
    getOverallConsumption() {
        this.isDone.overallConsumptioTotalData = false;
        this.ltDashboardService.getOverallConsumptionBuildingGroup(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.overallDateRange.start, this.overallDateRange.end, this.groupId).then(res => {
            this.overallConsumptioTotalData = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["fixDecimalNumPrecision"])(res, 2);
            this.getGfa();
            this.isDone.overallConsumptioTotalData = true;
        });
    }
    getGfa() {
        this.isDone.overallConsumptioSquareData = false;
        this.ltDashboardService.getGFABuildingGroup(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL, this.groupId).then(res => {
            const { start, end } = this.overallDateRange;
            const daysGap = ((end - start) / (1000 * 60 * 60 * 24)) + 1;
            // const oldEUI = (this.overallConsumptioTotalData == null ||  this.overallConsumptioTotalData == 0) ? null : this.overallConsumptioTotalData / res
            const newEUI = (365 / daysGap) * ((this.overallConsumptioTotalData || 0) / res);
            // const { scalledNumber, suffix, unit } = abbreviateNumber(Number(newEUI), ServiceType.MAIN_INCOMER);
            if (res != null && res != 0) {
                // this.overallConsumptioSquareData = (this.overallConsumptioTotalData == null || this.overallConsumptioTotalData == 0)?null:fixDecimalNumPrecision(this.overallConsumptioTotalData / (res), 2);
                this.overallConsumptioSquareData = newEUI;
                this.squareMeterPointerDescription = 'EUI';
            }
            else {
                this.overallConsumptioSquareData = null;
                this.squareMeterPointerDescription = 'EUI';
            }
            this.isDone.overallConsumptioSquareData = true;
        });
    }
    dataSourceOut(data) {
        if (data !== undefined) {
            this.rows = [];
            data.forEach((row, i) => {
                const { scalledNumber, suffix, unit } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["abbreviateNumber"])(row.meter.value, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL);
                this.rows.push({
                    meterId: i + 1,
                    groupName: row.group.name,
                    block: row.block.name,
                    level: row.level.name,
                    eqType: row.eqType.name,
                    eqCode: row.eqCode.name,
                    value: row.meter.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["moneyFormat"])((row.meter.value / 1000).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_22__["DECIMAL_MAP"].electricalBreakDown)) : 'N/A'
                    // value: row.meter.value != null ? this.thousandSeparator.transform(fixDecimalNumPrecision(row.meter.value, this.configs.siteConfigurations.decimalNumPrecision)) : 'N/A'
                });
            });
        }
    }
    dateRangeListner(chartType) {
        this.resetTime();
        let dataset;
        switch (chartType) {
            case 'eqDist':
                dataset = this.getEqDistribution();
                break;
            case 'overall':
                dataset = this.getOverallConsumption();
                break;
            case 'eqdistlg':
                this.getEqDistributionLg();
                break;
        }
    }
    get dates() {
        switch (this.trendLogTabIndex) {
            case 1:
                return {
                    from: this.datePipe.transform(this.thisMonthRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(this.thisMonthRange.end, 'yyyy/MM/dd')
                };
            case 2:
                return {
                    from: this.datePipe.transform(this.thisYearRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(this.thisYearRange.end, 'yyyy/MM/dd')
                };
            case 3:
                return {
                    from: this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd')
                };
            default:
                return {
                    from: this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd')
                };
        }
    }
    get intervalTime() {
        switch (this.trendLogTabIndex) {
            case 1:
                let lastMonth = new Date(new Date().setFullYear(new Date().getFullYear(), new Date().getMonth() - 1, new Date().getDate()));
                let currentMonth = new Date(new Date().setFullYear(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()));
                return {
                    from: this.datePipe.transform(lastMonth, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(currentMonth, 'yyyy/MM/dd'),
                };
            case 2:
                return {
                    from: this.datePipe.transform(this.previousYear, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(this.currentYear, 'yyyy/MM/dd')
                };
            case 3:
                return {
                    from: this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd'),
                };
            default:
                return {
                    from: this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd'),
                };
        }
    }
    get eqTypes() {
        let eqTypes = [];
        if (this.eqBreakdownFiltered) {
            eqTypes = [...new Map(this.eqBreakdownFiltered.map(item => [item.eqType.id, item.eqType])).values()];
        }
        return Object(lodash_es__WEBPACK_IMPORTED_MODULE_19__["orderBy"])(eqTypes, ['name'], ['asc']);
    }
    getConvertedDateLabel(date, type) {
        switch (type) {
            case src_enums_DateTypes__WEBPACK_IMPORTED_MODULE_20__["DateTypes"].DATE:
                return this.datePipe.transform(date, 'MMM-dd');
            case src_enums_DateTypes__WEBPACK_IMPORTED_MODULE_20__["DateTypes"].MONTH:
                return this.datePipe.transform(date, 'MMM');
            case src_enums_DateTypes__WEBPACK_IMPORTED_MODULE_20__["DateTypes"].YEAR:
                return date;
            default:
                return date;
        }
    }
    /*
      Get color code
    */
    getColorCode(chartGroupType, itemId) {
        let item;
        switch (chartGroupType) {
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER:
                return '';
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].BUILDING_CATEGORY:
                item = Object(lodash_es__WEBPACK_IMPORTED_MODULE_19__["find"])(this.initialService.navigationStore.buildingCategories, { buildingCategoryID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES:
                item = Object(lodash_es__WEBPACK_IMPORTED_MODULE_19__["find"])(this.initialService.navigationStore.meterTypes, { meterTypeID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].HT_LOOPS:
                return '';
        }
    }
    getDefaultColorCode(item) {
        let color;
        if (item === undefined || item.attributes.length === 0) {
            return this.configs.config.defaultColorCode;
        }
        else {
            color = Object(lodash_es__WEBPACK_IMPORTED_MODULE_19__["find"])(item.attributes, { textId: this.configs.config.attributes.COLOR_CODE });
            return color === null || color === undefined ? this.configs.config.defaultColorCode : color.value;
        }
    }
    resetTime() {
        setTimeout(() => this._reload = false);
        setTimeout(() => this._reload = true);
    }
};
ElectricalGroupDashboardComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_7__["HeaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_6__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: _services_meter_service__WEBPACK_IMPORTED_MODULE_10__["MeterService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_17__["ThousandSeparatorPipe"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["LtDashboardService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"])(src_app_widgets_consumption_summery_chart_consumption_summery_chart_component__WEBPACK_IMPORTED_MODULE_18__["ConsumptionSummeryChartComponent"], { static: false })
], ElectricalGroupDashboardComponent.prototype, "typeChart", void 0);
ElectricalGroupDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-electrical-group-dashboard',
        template: __webpack_require__(/*! raw-loader!./electrical-group-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./electrical-group-dashboard.component.scss */ "./app/dashboards/electrical-group-dashboard/electrical-group-dashboard.component.scss")]
    })
], ElectricalGroupDashboardComponent);



/***/ }),

/***/ "./app/dashboards/electrical-report/electrical-report.component.scss":
/*!***************************************************************************!*\
  !*** ./app/dashboards/electrical-report/electrical-report.component.scss ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvZWxlY3RyaWNhbC1yZXBvcnQvZWxlY3RyaWNhbC1yZXBvcnQuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/dashboards/electrical-report/electrical-report.component.ts":
/*!*************************************************************************!*\
  !*** ./app/dashboards/electrical-report/electrical-report.component.ts ***!
  \*************************************************************************/
/*! exports provided: ElectricalReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElectricalReportComponent", function() { return ElectricalReportComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_dashboards_report_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/dashboards/report.service */ "./app/services/dashboards/report.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/enums/location-type.enum */ "./enums/location-type.enum.ts");
/* harmony import */ var src_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/enums/report-type.enum */ "./enums/report-type.enum.ts");







let ElectricalReportComponent = class ElectricalReportComponent {
    constructor(headerService, reportService) {
        this.headerService = headerService;
        this.reportService = reportService;
        this.scheduleData = [];
        this.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"];
        this.tabIndex = 0;
    }
    ngOnInit() {
        this.headerService.setItem('Reports');
        this.headerService.setBoardLevel(2);
    }
    setTabIndex(index) {
        this.tabIndex = index;
    }
    initialData(event) {
        this.isLoading = true;
        this.reportService.isReportAvailable(event.categoryId, src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__["LocationType"][event.categoryName], src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL, src_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_6__["ReportType"][event.reportType], event.dateRange).then(res => {
            this.buttonText = res;
            this.isLoading = false;
        });
    }
    reGenerate(event) {
        this.isLoading = true;
        this.reportService.generateReport(event.categoryId, src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__["LocationType"][event.categoryName], src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL, src_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_6__["ReportType"][event.reportType], event.dateRange, this.buttonText).then(res => {
            this.buttonText = res;
            this.isLoading = false;
        });
    }
    downloadExcel(event) {
        this.reportService.downloadAsExcel(event.categoryId, src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__["LocationType"][event.categoryName], src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL, src_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_6__["ReportType"][event.reportType], event.dateRange);
    }
    onChangeLocation(event) {
        this.locationType = event;
        this.fetchSchedules(event);
    }
    fetchSchedules(locationType) {
        this.scheduleData = [];
        this.isSchedulesLoading = true;
        this.reportService.getSchedules(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL, src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__["LocationType"][locationType]).then((res) => {
            this.scheduleData = res;
            this.isSchedulesLoading = false;
        });
    }
    insertData(event) {
        this.isSchedulesLoading = true;
        let newData = event;
        newData.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL;
        this.reportService.insertSchedule(newData).then(res => {
            this.fetchSchedules(this.locationType);
        });
    }
    updateData(data) {
        this.isSchedulesLoading = true;
        data.updatedDta.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL;
        this.reportService.editSchedule(data.scheduleId, data.updatedDta).then(res => {
            this.fetchSchedules(this.locationType);
        });
    }
    deleteSchedule(id) {
        this.isSchedulesLoading = true;
        this.reportService.deleteSchedule(id).then(res => {
            this.fetchSchedules(this.locationType);
        });
    }
};
ElectricalReportComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] },
    { type: src_app_services_dashboards_report_service__WEBPACK_IMPORTED_MODULE_3__["ReportService"] }
];
ElectricalReportComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-electrical-report',
        template: __webpack_require__(/*! raw-loader!./electrical-report.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/electrical-report/electrical-report.component.html"),
        styles: [__webpack_require__(/*! ./electrical-report.component.scss */ "./app/dashboards/electrical-report/electrical-report.component.scss")]
    })
], ElectricalReportComponent);



/***/ }),

/***/ "./app/dashboards/eui/eui.component.scss":
/*!***********************************************!*\
  !*** ./app/dashboards/eui/eui.component.scss ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "table {\n  border-radius: 3px;\n  overflow: hidden;\n}\ntable thead {\n  background-color: #252323;\n}\ntable thead tr {\n  line-height: 2rem;\n}\ntable thead tr td {\n  font-weight: 500;\n}\ntable td {\n  height: 20px;\n  padding: 0.5rem 0.75rem;\n  border: 1px solid #346488;\n}\ntable tfoot {\n  background-color: #252323;\n}\ntable tfoot tr {\n  line-height: 2rem;\n}\ntable tfoot tr td {\n  color: #999;\n  font-style: italic;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9ldWkvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcZGFzaGJvYXJkc1xcZXVpXFxldWkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvZXVpL2V1aS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsZ0JBQUE7QUNDSjtBRENJO0VBQ0kseUJBQUE7QUNDUjtBRENRO0VBQ0ksaUJBQUE7QUNDWjtBRENZO0VBQ0ksZ0JBQUE7QUNDaEI7QURJSTtFQUNJLFlBQUE7RUFDQSx1QkFBQTtFQUNBLHlCQUFBO0FDRlI7QURLSTtFQUNJLHlCQUFBO0FDSFI7QURLUTtFQUNJLGlCQUFBO0FDSFo7QURLWTtFQUNJLFdBQUE7RUFDQSxrQkFBQTtBQ0hoQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvZXVpL2V1aS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgdGhlYWQge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTIzMjM7XHJcblxyXG4gICAgICAgIHRyIHtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDJyZW07XHJcblxyXG4gICAgICAgICAgICB0ZCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRkIHtcclxuICAgICAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMC41cmVtIDAuNzVyZW07XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzM0NjQ4ODtcclxuICAgIH1cclxuXHJcbiAgICB0Zm9vdCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjMyMztcclxuXHJcbiAgICAgICAgdHIge1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMnJlbTtcclxuXHJcbiAgICAgICAgICAgIHRkIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjOTk5O1xyXG4gICAgICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwidGFibGUge1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG50YWJsZSB0aGVhZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNTIzMjM7XG59XG50YWJsZSB0aGVhZCB0ciB7XG4gIGxpbmUtaGVpZ2h0OiAycmVtO1xufVxudGFibGUgdGhlYWQgdHIgdGQge1xuICBmb250LXdlaWdodDogNTAwO1xufVxudGFibGUgdGQge1xuICBoZWlnaHQ6IDIwcHg7XG4gIHBhZGRpbmc6IDAuNXJlbSAwLjc1cmVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMzQ2NDg4O1xufVxudGFibGUgdGZvb3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyMzIzO1xufVxudGFibGUgdGZvb3QgdHIge1xuICBsaW5lLWhlaWdodDogMnJlbTtcbn1cbnRhYmxlIHRmb290IHRyIHRkIHtcbiAgY29sb3I6ICM5OTk7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn0iXX0= */"

/***/ }),

/***/ "./app/dashboards/eui/eui.component.ts":
/*!*********************************************!*\
  !*** ./app/dashboards/eui/eui.component.ts ***!
  \*********************************************/
/*! exports provided: EuiComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EuiComponent", function() { return EuiComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_dashboards_gfa_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/dashboards/gfa.service */ "./app/services/dashboards/gfa.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sweetalert2 */ "../node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_3__);




let EuiComponent = class EuiComponent {
    constructor(gfaService) {
        this.gfaService = gfaService;
        this.id = 0;
        this.dryGfa = 0;
        this.wetGfa = 0;
        this.otherGfa = 0;
        this.dryGfaCurrent = 0;
        this.wetGfaCurrent = 0;
        this.otherGfaCurrent = 0;
        this.totalGfaCurrent = 0;
        // 0 = building, 1 = building groups
        this.type = 0;
    }
    ngOnInit() {
        this.SetupCurrentGfa();
    }
    SetupCurrentGfa() {
        if (this.type == 0) {
            this.gfaService.getBuildingGfa(this.id).then(gfa => {
                this.setGfaProps(gfa);
            });
        }
        else if (this.type == 1) {
            this.gfaService.getBuildingGroupGfa(this.id).then(gfa => {
                this.setGfaProps(gfa);
            });
        }
    }
    setGfaProps(gfa) {
        this.dryGfaCurrent = gfa.dry;
        this.wetGfaCurrent = gfa.wet;
        this.otherGfaCurrent = gfa.other;
        this.totalGfaCurrent = gfa.total;
    }
    updateGfa(type) {
        sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire({
            title: '',
            text: "Are you sure you want to update?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No'
        }).then(result => {
            if (result.isConfirmed) {
                let gfa = {
                    id: this.id,
                    type: this.type,
                    category: null,
                    value: null
                };
                switch (type) {
                    case 'gfa_dry': {
                        gfa.category = 'gfa_dry';
                        gfa.value = this.dryGfa;
                        break;
                    }
                    case 'gfa_wet': {
                        gfa.category = 'gfa_wet';
                        gfa.value = this.wetGfa;
                        break;
                    }
                    case 'gfa_other': {
                        gfa.category = 'gfa_other';
                        gfa.value = this.otherGfa;
                        break;
                    }
                    default:
                        break;
                }
                this.gfaService.updateGfa(gfa).then(data => {
                    if (data == true) {
                        this.SetupCurrentGfa();
                        sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire('', 'Successfully updated Gross Floor Area (GFA)!', 'success');
                    }
                    else {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire('', 'Something went wrong. Please try again later!', 'error');
                    }
                }).catch(error => {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire('', 'Something went wrong. Please try again later!', 'error');
                });
            }
        });
    }
    getAbs(value) {
        return Math.abs(value);
    }
};
EuiComponent.ctorParameters = () => [
    { type: src_app_services_dashboards_gfa_service__WEBPACK_IMPORTED_MODULE_2__["GfaService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], EuiComponent.prototype, "id", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], EuiComponent.prototype, "type", void 0);
EuiComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'ums-eui',
        template: __webpack_require__(/*! raw-loader!./eui.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/eui/eui.component.html"),
        styles: [__webpack_require__(/*! ./eui.component.scss */ "./app/dashboards/eui/eui.component.scss")]
    })
], EuiComponent);



/***/ }),

/***/ "./app/dashboards/heat-balance/heat-balance.component.scss":
/*!*****************************************************************!*\
  !*** ./app/dashboards/heat-balance/heat-balance.component.scss ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".loading-area {\n  width: 100%;\n  height: 750px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9oZWF0LWJhbGFuY2UvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcZGFzaGJvYXJkc1xcaGVhdC1iYWxhbmNlXFxoZWF0LWJhbGFuY2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvaGVhdC1iYWxhbmNlL2hlYXQtYmFsYW5jZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmRzL2hlYXQtYmFsYW5jZS9oZWF0LWJhbGFuY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGluZy1hcmVhIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA3NTBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWljb24ge1xyXG4gICAgd2lkdGg6IDc1cHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn0iLCIubG9hZGluZy1hcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNzUwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubG9hZGluZy1pY29uIHtcbiAgd2lkdGg6IDc1cHg7XG4gIGhlaWdodDogYXV0bztcbn0iXX0= */"

/***/ }),

/***/ "./app/dashboards/heat-balance/heat-balance.component.ts":
/*!***************************************************************!*\
  !*** ./app/dashboards/heat-balance/heat-balance.component.ts ***!
  \***************************************************************/
/*! exports provided: HeatBalanceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeatBalanceComponent", function() { return HeatBalanceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/widgets/date-range-picker/public-api */ "./app/widgets/date-range-picker/public-api.ts");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/dashboards/greenmark-data-fetching.service */ "./app/services/dashboards/greenmark-data-fetching.service.ts");
/* harmony import */ var src_app_services_dashboards_chiller_data_generate_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/dashboards/chiller-data-generate.service */ "./app/services/dashboards/chiller-data-generate.service.ts");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var src_enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/enums/green-mark-frequency.enum */ "./enums/green-mark-frequency.enum.ts");
/* harmony import */ var _enums_green_mark_chart_type_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../enums/green-mark-chart-type.enum */ "./enums/green-mark-chart-type.enum.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");













let HeatBalanceComponent = class HeatBalanceComponent {
    constructor(headerService, initialService, dateService, dataFetchingService, dataGeneratingService) {
        this.headerService = headerService;
        this.initialService = initialService;
        this.dateService = dateService;
        this.dataFetchingService = dataFetchingService;
        this.dataGeneratingService = dataGeneratingService;
        this.plantList = [];
        this.tableWidth = new rxjs__WEBPACK_IMPORTED_MODULE_11__["BehaviorSubject"]('100%');
        this.columnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__["ColumnMode"];
        this.sortType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__["SortType"];
        this.selectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__["SelectionType"];
        this.scaleList = [{ name: 'Fixed Scale', id: 1 }, { name: 'Auto Scale', id: 2 }];
        this.scaleListSelected = 1;
        this.rows = [];
        this.isDone = {};
        this.headerService.setItem('Heat Balance');
        this.headerService.setBoardLevel(2);
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        const todayDateRange = new src_app_widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        todayDateRange.end = new Date(this.today);
        todayDateRange.start = new Date(this.today);
        this.dateRange = todayDateRange;
        this.tabIndex = 0;
        this.dataFetchingService.getPlants().then(res => {
            this.plantList = res;
            this.selectedPlant = res[0].id;
            this.getHeatBalanceData();
        });
    }
    ngOnInit() {
        this.headerService.getChartWidth().subscribe(res => {
            this.tableWidth.next(res / 2);
        });
    }
    setTabIndex(index) {
        this.tabIndex = index;
    }
    dateRangedChanged() {
        if (this.dateRange.start.getTime() === this.dateRange.end.getTime()) {
            let newEnd = new Date(this.dateRange.end);
            newEnd.setDate(newEnd.getDate() + 1);
            this.dateRange.end = newEnd;
        }
        this.getHeatBalanceData();
    }
    plantChanged(data) {
        this.selectedPlant = data.value;
        this.getHeatBalanceData();
    }
    getHeatBalanceData() {
        this.isDone.heatBalanceDataSource = false;
        this.chartLoading = true;
        let dataSource = {};
        this.dataFetchingService.fetchHeatBalanceData(this.dateRange, this.selectedPlant, src_enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_9__["GreenMarkFrequency"].OneMinute).then(res => {
            this.rows = res;
            // if (res == null || res.length === 0) {
            //   this.heatBalanceDataSource = this.dataGeneratingService.plotHeatBalanceChart(this.dataGeneratingService.heatBalanceEmptyData(this.dateRange));
            // } else {
            dataSource = this.dataGeneratingService.plotHeatBalanceChart(res, this.dateRange);
            dataSource.datasetTemp = dataSource.dataset;
            dataSource.chart = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["addChartConfiguration"])(dataSource.chart, true);
            const { dataset } = dataSource;
            for (let i = 0; i < dataset.length; i++) {
                dataset[i].tempColor = "007bff";
                dataset[i] = Object.assign({}, dataset[i], { data: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["convertStringToArr"])(dataset[i].data, dataset[i].tempColor), color: '#000000' });
            }
            dataSource.dataset = dataset;
            dataSource.chart = Object.assign({}, dataSource.chart);
            this.heatBalanceDataSource = dataSource;
            this.setMaxYAxis(this.scaleListSelected);
            // }
            this.chartLoading = false;
            this.isDone.heatBalanceDataSource = true;
        });
    }
    exportToExcel() {
        this.dataFetchingService.exportChart(this.dateRange, src_enums_green_mark_frequency_enum__WEBPACK_IMPORTED_MODULE_9__["GreenMarkFrequency"].OneMinute, _enums_green_mark_chart_type_enum__WEBPACK_IMPORTED_MODULE_10__["GreenMarkChartType"].HeatBalance, this.selectedPlant);
    }
    scaleChanged({ value }) {
        this.scaleListSelected = value;
        this.setMaxYAxis(this.scaleListSelected);
    }
    setMaxYAxis(value) {
        if (this.heatBalanceDataSource.chart && value) {
            if (value == 1) {
                this.heatBalanceDataSource.chart.yAxisMinValue = -15;
                this.heatBalanceDataSource.chart.yAxisMaxValue = 15;
                const { dataset } = this.heatBalanceDataSource;
                for (let i = 0; i < dataset.length; i++) {
                    let { data = '', seriesname, color } = dataset[i];
                    data = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["reduceDataChart"])(data, this.heatBalanceDataSource.chart.yAxisMinValue, this.heatBalanceDataSource.chart.yAxisMaxValue);
                    this.heatBalanceDataSource.dataset = [{ data, seriesname, color }];
                }
            }
            else {
                let { dataset = [] } = this.heatBalanceDataSource;
                if (dataset.length > 0) {
                    dataset = dataset[0];
                    let { max, min } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["getChartMinMax"])(dataset, 'value');
                    if (min)
                        min = min.toFixed(1);
                    if (max)
                        max = max.toFixed(1);
                    this.heatBalanceDataSource.chart.yAxisMinValue = min || undefined;
                    this.heatBalanceDataSource.chart.yAxisMaxValue = max || undefined;
                    this.heatBalanceDataSource.dataset = this.heatBalanceDataSource.datasetTemp;
                }
            }
        }
    }
};
HeatBalanceComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_3__["HeaderService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_5__["DateServiceService"] },
    { type: src_app_services_dashboards_greenmark_data_fetching_service__WEBPACK_IMPORTED_MODULE_6__["GreenmarkDataFetchingService"] },
    { type: src_app_services_dashboards_chiller_data_generate_service__WEBPACK_IMPORTED_MODULE_7__["ChillerDataGenerateService"] }
];
HeatBalanceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-heat-balance',
        template: __webpack_require__(/*! raw-loader!./heat-balance.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/heat-balance/heat-balance.component.html"),
        styles: [__webpack_require__(/*! ./heat-balance.component.scss */ "./app/dashboards/heat-balance/heat-balance.component.scss")]
    })
], HeatBalanceComponent);



/***/ }),

/***/ "./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.scss":
/*!*************************************************************************************************!*\
  !*** ./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.scss ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".input-date {\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n  display: flex;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9odC1lbGVjdHJpY2FsLWxvb3AtZGFzaGJvYXJkL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXGRhc2hib2FyZHNcXGh0LWVsZWN0cmljYWwtbG9vcC1kYXNoYm9hcmRcXGh0LWVsZWN0cmljYWwtbG9vcC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvaHQtZWxlY3RyaWNhbC1sb29wLWRhc2hib2FyZC9odC1lbGVjdHJpY2FsLWxvb3AtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkcy9odC1lbGVjdHJpY2FsLWxvb3AtZGFzaGJvYXJkL2h0LWVsZWN0cmljYWwtbG9vcC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5wdXQtZGF0ZXtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxufSIsIi5pbnB1dC1kYXRlIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG59Il19 */"

/***/ }),

/***/ "./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.ts":
/*!***********************************************************************************************!*\
  !*** ./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: HtElectricalLoopDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtElectricalLoopDashboardComponent", function() { return HtElectricalLoopDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_app_services_dashboards_ht_dashboard_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/dashboards/ht-dashboard.service */ "./app/services/dashboards/ht-dashboard.service.ts");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var src_enums_HtCategory__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/enums/HtCategory */ "./enums/HtCategory.ts");
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_enums_HTApiType__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/enums/HTApiType */ "./enums/HTApiType.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");


















let HtElectricalLoopDashboardComponent = class HtElectricalLoopDashboardComponent {
    constructor(dataService, configs, datePipe, route, dateService, initialService, router, headerService, htDashboardService, ltDashboardService) {
        this.dataService = dataService;
        this.configs = configs;
        this.datePipe = datePipe;
        this.route = route;
        this.dateService = dateService;
        this.initialService = initialService;
        this.router = router;
        this.headerService = headerService;
        this.htDashboardService = htDashboardService;
        this.ltDashboardService = ltDashboardService;
        this.tabIndex = 0;
        this.breakdownSubstationId = 0;
        this.breakdownMeterId = 0;
        this.trendLogTabIndex = 0;
        this.dailyConsumptionData = { chart: {} };
        this.breadCrumbData = [];
        this.trendLogData = {};
        this.equipDistribution = {};
        this.today = new Date();
        this.substationDistributionTable = { columns: ['Name', 'Value', 'Percentage'], data: null };
        this.equipBreakdown = [];
        this.siteLoops = [];
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_16__["ChartColorMap"];
        this.isDone = {};
        this.rows = [];
        this.columns = [
            { name: 'Loop', key: 'loop' },
            { name: 'Substation', key: 'substation' },
            { name: 'Meter', key: 'meter' },
            { name: 'Tag', key: 'tag' }
        ];
        this.tableLoading = true;
        this.appOnInit = () => {
            const { tabkey = 0 } = this.route.snapshot.queryParams || {};
            this.tabIndex = tabkey;
            this.getLoopsList((isDone) => {
                if (tabkey && tabkey != 0) {
                    this.setTabIndex(tabkey);
                }
                else {
                    this.getChartData(0);
                }
            });
        };
        this.addingColorToData = (arr) => {
            for (let i = 0; i < arr.length; i++) {
                arr[i] = Object.assign({}, arr[i], { color: this.colorMap.electric.secondary });
            }
            return arr;
        };
        this._startDateTrendLog = {
            start: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._mapArrayTrendIndex = src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_17__["LIST_DAY_CONSUMPTION"];
        this._isFirstInit = true;
        this._maxDate = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        this._isYear = null;
        this._isMonth = null;
        this._reload = true;
        this._todayConsumptionDate = {
            start: new Date(),
            end: new Date()
        };
        this._maxTodayConsumptionDate = new Date();
        this._minTodayConsumptionDate = new Date((new Date()).setDate(new Date().getDate() - 7));
        this.onChangeTodayConsumption = () => {
            this._todayConsumptionDate.end = this._todayConsumptionDate.start;
            this.todayDateRange = this._todayConsumptionDate;
            this.getTrendDaylyData('_todayConsumptionDate');
        };
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        }
        this.substationDistRange = this.dateService.thisMonthUpToNow(this.today);
        this.overallDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.overallDateRange.end = this.today;
        this.profileDateRange = this.dateService.getLastMonth(this.today);
        this.eqDIstDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.equipmentBreakdownDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.todayDateRange = this.dateService.getToday(this.today);
        this.thisWeekDateRange = dateService.getLastDaysRange(this.today, 7, 'days');
        this.thisMonthRange = dateService.getLastDaysRange(this.today, 30, 'days');
        this.thisYearRange = dateService.getLastDaysRange(this.today, 12, 'months');
        this.lastFiveYearRange = this.dateService.getLastFiveYear(this.today);
        this.weekFirst = new Date(this.today).getDate() - new Date(this.today).getDay() + 1;
        this.weekLast = this.weekFirst + 7;
        this.monthFirst = new Date(this.today.getFullYear(), this.today.getMonth(), 1);
        this.monthLast = new Date(this.today.getFullYear(), this.today.getMonth() + 1, 1);
        this.eqBreakDownFilter = this.dateService.thisMonthUpToNow(this.today);
        this.eqBreakDownFilter.end = this.today;
        this.siteId = this.configs.siteConfigurations.siteId;
        this.route.params.subscribe(params => {
            this.trendLogTabIndex = 0;
            // this.tabIndex = 0;
            this.loopId = params.id;
            this.setLoopName(this.loopId);
            // this.getChartData(0);
            // this.getLoopsList();
            this.appOnInit();
        });
        this.route.data.subscribe(data => {
            this.headerService.electricalDashboardType.next(src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_11__["DashboardType"].HIGH_TENSION);
        });
    }
    // ngOnInit() {
    // }
    ngOnInit() {
    }
    setLoopName(loopId) {
        this.dataService.get(this.configs.endPoints['ht-loops'], {
            siteId: this.siteId,
        })
            .subscribe(data => {
            this.headerService.setItem(this.selectLoopName(data));
        }, error => {
            this.headerService.setItem('Loop Name');
        });
    }
    selectLoopName(data) {
        for (const loop of data) {
            if (loop.htLoopID == this.loopId) {
                this.loopName = loop.htLoopName;
                return loop.htLoopName;
            }
        }
    }
    getChartData(tabIndex) {
        this.substationDistributionChanged(tabIndex);
        this.getTrendDaylyData();
        this.getOverallConsumption();
        this.onChangeTrendLogByDate();
    }
    getLoopsList(callback) {
        this.dataService.get(this.configs.endPoints['ht-loops'], {
            siteId: this.siteId,
        }).subscribe(res => {
            this.siteLoops = [];
            res.forEach(item => {
                this.siteLoops.push({ name: item.htLoopName, id: item.htLoopID });
            });
            callback(true);
        });
        this.seletedLoopId = this.loopId;
    }
    loopChanged(data) {
        this.rows = [];
        this.equipmentBreakdownData = null;
        // if ( data.value == '0' ) {
        //   this.router.navigateByUrl(encodeURI(`ht-site-electrical`));
        // } else {
        //   this.router.navigateByUrl(encodeURI(`ht-electrical-loop/${data.value}`));
        // }
        if (data.value === "0") {
            this.router.navigateByUrl(encodeURI(`ht-site-electrical?tabkey=${this.tabIndex}`));
        }
        else {
            this.router.navigateByUrl(encodeURI(`ht-electrical-loop/${data.value}?tabkey=${this.tabIndex}`));
        }
        this.setLoopName(data.value);
    }
    onEquipmentBreakdownFiltered(data) {
        this.rows = [];
        data.forEach(item => {
            this.rows.push({
                loop: item.loopName, substation: item.substationName, meter: item.meterName, tag: item.opcTag
            });
        });
    }
    onEqBreakdownDateChange(event) {
        this.eqBreakDownFilter = event;
        this.getLoopBreakdownData();
    }
    plotTrendDaylyData(data) {
        const chart = Object.assign({}, this.configs.chartConfigurations['elec-trend-log']);
        chart.xAxisName = 'Time';
        chart.yAxisName = 'Energy Consumption (kWh)';
        chart.exportFileName = 'Today\'s Consumption';
        this.dailyConsumptionData = {
            chart,
            data: this.addingColorToData(data[0].data)
        };
    }
    generateTrendDaylyData() {
        let time0 = new Date().setHours(0, 0, 0, 0);
        const labelAndValue = [];
        for (let i = 0; i < 48; i++) {
            labelAndValue.push({ label: this.datePipe.transform(time0, 'HH:mm'), value: null });
            time0 = new Date(time0).setTime(new Date(time0).getTime() + 30 * 60 * 1000);
        }
        const data = [
            {
                name: '',
                data: labelAndValue
            }
        ];
        return data;
    }
    getTrendDaylyData(dateKey = '_todayConsumptionDate') {
        this.isDone.dailyConsumptionData = false;
        this.dailyConsumptionData = this.ltDashboardService.getTodaysConsumptionEmptyChart(src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_13__["default"].SITE_ELECTRICAL);
        this.htDashboardService.getHTTrendDaylyData(this.datePipe.transform(this[dateKey].start, 'yyyy/MM/dd'), this.datePipe.transform(this[dateKey].end, 'yyyy/MM/dd'), src_enums_HTApiType__WEBPACK_IMPORTED_MODULE_15__["HTApiType"].LOOP, this.loopId).then(result => {
            this.dailyConsumptionData = result;
            for (let i = 0; i < this.dailyConsumptionData.data.length; i++) {
                const item = this.dailyConsumptionData.data[i];
                const newValue = item.value / 1000;
                this.dailyConsumptionData.data[i] = Object.assign({}, item, { value: item.value ? newValue : null, displayValue: item.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["moneyFormat"])((newValue || 0).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_17__["DECIMAL_MAP"].electricalTodayConsumption)) : null, toolText: "Time: $label <br/> Consumption: $displayValue kWh" });
            }
            this.dailyConsumptionData.chart = Object.assign({}, this.dailyConsumptionData.chart, { formatNumberScale: 0, paletteColors: [this.colorMap.electric.secondary] });
            this.isDone.dailyConsumptionData = true;
        });
    }
    plotTrendLogs(xAxis, yAxis, toolTipLableName, data, mode) {
        let dataSet = [];
        if (mode) {
            data[0].data.forEach(element => {
                dataSet.push({
                    label: element.label.substring(0, 3),
                    value: element.value,
                    tooltext: `${toolTipLableName}: ${element.label}<br/>Consumption: ${element.value} kWh`,
                    color: this.colorMap.electric.secondary
                });
            });
        }
        else {
            dataSet = data[0].data;
        }
        const chart = Object.assign({}, this.configs.chartConfigurations['elec-trend-log']);
        chart.xAxisName = xAxis;
        chart.yAxisName = yAxis;
        chart.paletteColors = [this.colorMap.electric.secondary];
        this.trendLogData = {
            chart,
            data: dataSet
        };
    }
    setTabIndex(index) {
        this.tabIndex = index;
        if (this.tabIndex == 0) {
            this.getChartData(index);
        }
        else if (this.tabIndex == 1) {
            this.substationDistributionChanged(1);
        }
        else if (this.tabIndex == 2) {
            this.getLoopBreakdownData();
        }
        window.history.pushState(null, null, index != 0 ? `${window.location.pathname}?tabkey=${index}` : `${window.location.pathname}`);
    }
    getLoopBreakdownData() {
        this.htDashboardService.getLoopBreakdownData(this.loopId, this.loopName, this.datePipe.transform(this.eqBreakDownFilter.start, 'yyyy/MM/dd'), this.datePipe.transform(this.eqBreakDownFilter.end, 'yyyy/MM/dd')).then(res => {
            this.equipBreakdown = res;
            this.tableLoading = false;
        });
    }
    getDate(date) {
        const month = new Date(date).getMonth() + 1;
        const day = new Date(date).getDate();
        const year = new Date(date).getFullYear();
        return `${year}/${month}/${day}`;
    }
    onChangeTrendLogByDate(isInit = false) {
        const { month, date, year, target } = this._mapArrayTrendIndex[this.trendLogTabIndex];
        this._isYear = year;
        this._isMonth = month;
        const { start, end } = this._startDateTrendLog;
        let newStart = new Date(start);
        let newEnd = new Date(end);
        if (isInit) {
            this._isFirstInit = false;
        }
        if (this._isFirstInit) {
            const currentDate = new Date(start);
            let newDate = this._maxDate.getDate();
            let newMonth = this._maxDate.getMonth();
            if (year || month) {
                newDate = 1;
                if (year) {
                    newMonth = 0;
                }
            }
            currentDate.setDate(newDate);
            currentDate.setMonth(newMonth);
            newEnd.setDate(newDate);
            newEnd.setMonth(newMonth);
            newStart = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(currentDate, month || date || year, target, 'minus');
            this._startDateTrendLog.end = newEnd;
            this._startDateTrendLog.start = newEnd;
        }
        else {
            if (date) {
                newStart.setDate(end.getDate() - date);
            }
            else if (month) {
                newStart.setMonth(end.getMonth() - month);
                newStart.setDate(1);
            }
            else if (year) {
                newStart.setFullYear(end.getFullYear() - year);
                newStart.setMonth(0);
            }
        }
        if (date) {
            newEnd = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["dateGapGenerator"])(newEnd, 1, 'day');
        }
        this.callApiTrendLogData(this.trendLogTabIndex + 1, this.getDate(newStart), this.getDate(newEnd));
        this.resetTime();
    }
    setTrendLogData(index) {
        this.trendLogTabIndex = index;
        this.onChangeTrendLogByDate();
    }
    callApiTrendLogData(interval, start, end) {
        this.isDone.trendLogData = false;
        this.htDashboardService.getHTTrendLogs(interval, start, end, src_enums_HTApiType__WEBPACK_IMPORTED_MODULE_15__["HTApiType"].LOOP, this.loopId).then((response) => {
            this.trendLogData = response;
            this.isDone.trendLogData = true;
            // for (let i = 0; i < this.trendLogData.data.length; i++) {
            //   const item = this.trendLogData.data[i];
            //   const newValue = item.value / 1000;
            //   this.trendLogData.data[i] = {
            //     ...item, 
            //     value: item.value ? newValue : null,
            //     displayValue: item.value ? moneyFormat((newValue || 0).toFixed(DECIMAL_MAP.trendLogs)) : null,
            //     toolText: "Day: $label <br/> Consumption: $displayValue kWh"
            //   }
            // }
            this.trendLogData.chart = Object.assign({}, this.trendLogData.chart, { formatNumberScale: 0, valuefontSize: 16, paletteColors: [this.colorMap.electric.secondary] });
        });
    }
    // setTrendLogData(index: number) {
    //   switch (index) {
    //     case 0: {
    //       this.trendLogTabIndex = 0;
    //       this.htDashboardService.getHTTrendLogs(
    //         Interval.Daily,
    //         this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd'),
    //         HTApiType.LOOP,
    //         this.loopId
    //       ).then((response) => {
    //         this.trendLogData = response;
    //         this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
    //       });
    //       break;
    //     }
    //     case 1: {
    //       this.trendLogTabIndex = 1;
    //       this.trendLogData = this.htDashboardService.getHTTrendLogs(
    //         Interval.Weekly,
    //         this.datePipe.transform(this.thisMonthRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisMonthRange.end, 'yyyy/MM/dd'),
    //         HTApiType.LOOP,
    //         this.loopId
    //       ).then((response) => {
    //         this.trendLogData = response;
    //         this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
    //       });
    //       break;
    //     }
    //     case 2: {
    //       this.trendLogTabIndex = 2;
    //       this.thisYearRange.start.setDate(1);
    //       this.thisYearRange.end.setDate(1);
    //       this.trendLogData = this.htDashboardService.getHTTrendLogs(
    //         Interval.Monthly,
    //         this.datePipe.transform(this.thisYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisYearRange.end, 'yyyy/MM/dd'),
    //         HTApiType.LOOP,
    //         this.loopId
    //       ).then((response) => {
    //         this.trendLogData = response;
    //         this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
    //       });
    //       break;
    //     }
    //     case 3: {
    //       this.trendLogTabIndex = 3;
    //       this.trendLogData = this.htDashboardService.getHTTrendLogs(
    //         Interval.Yearly,
    //         this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd'),
    //         HTApiType.LOOP,
    //         this.loopId
    //       ).then((response) => {
    //         this.trendLogData = response;
    //         this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
    //       });
    //       break;
    //     }
    //   }
    // }
    getOverallConsumption() {
        this.isDone.overallConsumptioTotalData = false;
        this.htDashboardService.getHTOveralConsumptionData(this.overallDateRange.start.toDateString(), this.overallDateRange.end.toDateString(), src_enums_HTApiType__WEBPACK_IMPORTED_MODULE_15__["HTApiType"].LOOP, this.loopId).then((response) => {
            this.overallConsumptioTotalData = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_14__["fixDecimalNumPrecision"])(response[0].data[0].value, 2);
            this.isDone.overallConsumptioTotalData = true;
        });
    }
    dateRangeListner(chartType, tabIndex) {
        this.resetTime();
        let dataset;
        switch (chartType) {
            case 'eqDist':
                dataset = this.substationDistributionChanged(tabIndex);
                if (dataset !== null) {
                }
                else {
                }
                break;
            case 'overall':
                dataset = this.getOverallConsumption();
                break;
        }
    }
    substationDistributionChanged(tabIndex) {
        this.isDone.substationDistribution = false;
        this.resetTime();
        this.htDashboardService.getSubstationDistribution(this.datePipe.transform(this.substationDistRange.start, 'yyyy/MM/dd'), this.datePipe.transform(this.substationDistRange.end, 'yyyy/MM/dd'), this.loopId, src_enums_HTApiType__WEBPACK_IMPORTED_MODULE_15__["HTApiType"].LOOP, src_enums_HtCategory__WEBPACK_IMPORTED_MODULE_12__["HtCategory"].SubStation, tabIndex, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].SUB_STATIONS).then((response) => {
            this.substationDistribution = response;
            this.isDone.substationDistribution = true;
        });
    }
    resetTime() {
        setTimeout(() => this._reload = false);
        setTimeout(() => this._reload = true);
    }
};
HtElectricalLoopDashboardComponent.ctorParameters = () => [
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_7__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_6__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_10__["HeaderService"] },
    { type: src_app_services_dashboards_ht_dashboard_service__WEBPACK_IMPORTED_MODULE_9__["HtDashboardService"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["LtDashboardService"] }
];
HtElectricalLoopDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-ht-electrical-loop-dashboard',
        template: __webpack_require__(/*! raw-loader!./ht-electrical-loop-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./ht-electrical-loop-dashboard.component.scss */ "./app/dashboards/ht-electrical-loop-dashboard/ht-electrical-loop-dashboard.component.scss")]
    })
], HtElectricalLoopDashboardComponent);



/***/ }),

/***/ "./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.scss":
/*!*************************************************************************************************!*\
  !*** ./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.scss ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".input-date {\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n  display: flex;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9odC1lbGVjdHJpY2FsLXNpdGUtZGFzaGJvYXJkL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXGRhc2hib2FyZHNcXGh0LWVsZWN0cmljYWwtc2l0ZS1kYXNoYm9hcmRcXGh0LWVsZWN0cmljYWwtc2l0ZS1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvaHQtZWxlY3RyaWNhbC1zaXRlLWRhc2hib2FyZC9odC1lbGVjdHJpY2FsLXNpdGUtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkcy9odC1lbGVjdHJpY2FsLXNpdGUtZGFzaGJvYXJkL2h0LWVsZWN0cmljYWwtc2l0ZS1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5wdXQtZGF0ZXtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxufSIsIi5pbnB1dC1kYXRlIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG59Il19 */"

/***/ }),

/***/ "./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.ts":
/*!***********************************************************************************************!*\
  !*** ./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: HtElectricalSiteDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtElectricalSiteDashboardComponent", function() { return HtElectricalSiteDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_dashboards_ht_dashboard_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/dashboards/ht-dashboard.service */ "./app/services/dashboards/ht-dashboard.service.ts");
/* harmony import */ var _app_services_date_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _app_services_header_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _app_services_http_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _enums_DashboardType__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _enums_HTApiType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../enums/HTApiType */ "./enums/HTApiType.ts");
/* harmony import */ var _enums_HtCategory__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../enums/HtCategory */ "./enums/HtCategory.ts");
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");



















let HtElectricalSiteDashboardComponent = class HtElectricalSiteDashboardComponent {
    constructor(headerService, dataService, configs, dateService, initialService, htDashboardService, datePipe, route, ltDashboardService) {
        this.headerService = headerService;
        this.dataService = dataService;
        this.configs = configs;
        this.dateService = dateService;
        this.initialService = initialService;
        this.htDashboardService = htDashboardService;
        this.datePipe = datePipe;
        this.route = route;
        this.ltDashboardService = ltDashboardService;
        this.breakdownSubstationId = 0;
        this.breakdownMeterId = 0;
        this.breakdownLoopId = 0;
        this.tabIndex = 0;
        this.subscriptions = [];
        this.trendLogTabIndex = 0;
        this.dailyConsumptionData = { chart: {} };
        this.trendLogData = {};
        this.substationDistribution = {};
        this.substationDistributionTable = { columns: ['Name', 'Value', 'Percentage'], data: null };
        this.today = new Date();
        this.loopList = [];
        this.substationList = [];
        this.equipmentBreakdownData = null;
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_17__["ChartColorMap"];
        this.rows = [];
        this.columns = [
            { name: 'Loop', key: 'loop' },
            { name: 'Substation', key: 'substation' },
            { name: 'Meter', key: 'meter' },
            { name: 'Tag', key: 'tag' }
        ];
        this.tableLoading = true;
        this.isDone = {};
        this._startDateTrendLog = {
            start: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._mapArrayTrendIndex = src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_18__["LIST_DAY_CONSUMPTION"];
        this._isFirstInit = true;
        this._maxDate = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        this._isYear = null;
        this._isMonth = null;
        // setTrendLogData(index: number) {
        //   switch (index) {
        //     case 0: {
        //       this.trendLogTabIndex = 0;
        //       this.htDashboardService.getHTTrendLogs(
        //         Interval.Daily,
        //         this.datePipe.transform(this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd')),
        //         this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd'),
        //         HTApiType.SITE,
        //         this.configs.siteConfigurations.siteId,
        //         ServiceType.MAIN_HT_ELECTRICAL
        //       ).then((response) => {
        //         this.trendLogData = response;
        //         this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
        //       });
        //       break;
        //     }
        //     case 1: {
        //       this.trendLogTabIndex = 1;
        //       this.trendLogData = this.htDashboardService.getHTTrendLogs(
        //         Interval.Weekly,
        //         this.datePipe.transform(this.thisMonthRange.start, 'yyyy/MM/dd'),
        //         this.datePipe.transform(this.thisMonthRange.end, 'yyyy/MM/dd'),
        //         HTApiType.SITE,
        //         this.configs.siteConfigurations.siteId,
        //         ServiceType.MAIN_HT_ELECTRICAL
        //       ).then((response) => {
        //         this.trendLogData = response;
        //         this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
        //       });
        //       break;
        //     }
        //     case 2: {
        //       this.trendLogTabIndex = 2;
        //       this.thisYearRange.start.setDate(1);
        //       this.thisYearRange.end.setDate(1);
        //       this.trendLogData = this.htDashboardService.getHTTrendLogs(
        //         Interval.Monthly,
        //         this.datePipe.transform(this.thisYearRange.start, 'yyyy/MM/dd'),
        //         this.datePipe.transform(this.thisYearRange.end, 'yyyy/MM/dd'),
        //         HTApiType.SITE,
        //         this.configs.siteConfigurations.siteId,
        //         ServiceType.MAIN_HT_ELECTRICAL
        //       ).then((response) => {
        //         this.trendLogData = response;
        //         this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
        //       });
        //       break;
        //     }
        //     case 3: {
        //       this.trendLogTabIndex = 3;
        //       this.trendLogData = this.htDashboardService.getHTTrendLogs(
        //         Interval.Yearly,
        //         this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
        //         this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd'),
        //         HTApiType.SITE,
        //         this.configs.siteConfigurations.siteId,
        //         ServiceType.MAIN_HT_ELECTRICAL
        //       ).then((response) => {
        //         this.trendLogData = response;
        //         this.trendLogData.chart["paletteColors"] = [this.colorMap.electric.secondary];
        //       });
        //       break;
        //     }
        //   }
        // }
        this._reload = true;
        this._todayConsumptionDate = {
            start: new Date(),
            end: new Date()
        };
        this._maxTodayConsumptionDate = new Date();
        this._minTodayConsumptionDate = new Date((new Date()).setDate(new Date().getDate() - 7));
        this.onChangeTodayConsumption = () => {
            this._todayConsumptionDate.end = this._todayConsumptionDate.start;
            this.todayDateRange = this._todayConsumptionDate;
            this.getOverviewDashboardData('_todayConsumptionDate');
        };
        this.dataService.get(this.configs.endPoints.site, { siteId: 1 })
            .subscribe(data => {
            this.headerService.setItem(data.siteName);
        }, error => {
            this.headerService.setItem('Site Name');
        });
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        }
        this.overollConsumptionRange = this.dateService.thisMonthUpToNow(this.today);
        this.substationDistRange = this.dateService.thisMonthUpToNow(this.today);
        this.todayDateRange = this.dateService.getToday(this.today);
        this.thisWeekDateRange = this.dateService.getLastDaysRange(this.today, 7, 'days');
        this.thisMonthRange = this.dateService.getLastDaysRange(this.today, 30, 'days');
        this.thisYearRange = this.dateService.getLastDaysRange(this.today, 12, 'months');
        this.lastFiveYearRange = this.dateService.getLastFiveYear(this.today);
        this.route.data.subscribe(data => {
            this.headerService.electricalDashboardType.next(_enums_DashboardType__WEBPACK_IMPORTED_MODULE_10__["DashboardType"].HIGH_TENSION);
        });
        this.headerService.setBoardLevel(0);
        this.eqBreakDownFilter = this.dateService.thisMonthUpToNow(this.today);
        this.eqBreakDownFilter.end = this.today;
        this.getOverviewDashboardData();
    }
    ngOnInit() { }
    getOverviewDashboardData(dateKey = '_todayConsumptionDate') {
        this.isDone.dailyConsumptionData = false;
        this.dailyConsumptionData = this.ltDashboardService.getTodaysConsumptionEmptyChart(src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].SITE_ELECTRICAL);
        this.htDashboardService.getHTTrendDaylyData(this.datePipe.transform(this[dateKey].start, 'yyyy/MM/dd'), this.datePipe.transform(this[dateKey].end, 'yyyy/MM/dd'), _enums_HTApiType__WEBPACK_IMPORTED_MODULE_12__["HTApiType"].SITE, this.configs.siteConfigurations.siteId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_16__["ServiceType"].MAIN_HT_ELECTRICAL).then(result => {
            this.dailyConsumptionData = result;
            this.isDone.dailyConsumptionData = true;
            // for (let i = 0; i < this.dailyConsumptionData.data.length; i++) {
            //   const item = this.dailyConsumptionData.data[i];
            //   const newValue = item.value / 1000
            //   this.dailyConsumptionData.data[i] = {
            //     ...item, 
            //     value: item.value ? newValue: null,
            //     displayValue: item.value ? moneyFormat((newValue || 0).toFixed(DECIMAL_MAP.electricalTodayConsumption)) : null,
            //     toolText: "Time: $label <br/> Consumption: $displayValue kWh",
            //   }
            // }
            this.dailyConsumptionData.chart = Object.assign({}, this.dailyConsumptionData.chart, { formatNumberScale: 0, paletteColors: [this.colorMap.electric.secondary] });
        });
        this.loopDistributionChanged(0);
        this.onChangeTrendLogByDate();
        this.overollConsumptionChanged();
    }
    setTabIndex(index) {
        this.tabIndex = index;
        switch (this.tabIndex) {
            case 0:
                this.getOverviewDashboardData();
                break;
            case 1:
                this.loopDistributionChanged(1);
                break;
            case 2:
                this.getEquipmentBreakdownData();
                break;
        }
    }
    getEquipmentBreakdownData() {
        this.htDashboardService.getSitehtBreakdownData(this.datePipe.transform(this.eqBreakDownFilter.start, 'yyyy/MM/dd'), this.datePipe.transform(this.eqBreakDownFilter.end, 'yyyy/MM/dd')).then((res) => {
            this.equipmentBreakdownData = res;
            this.tableLoading = false;
        });
    }
    onEqBreakdownDateChange(event) {
        this.getEquipmentBreakdownData();
    }
    onEquipmentBreakdownFiltered(data) {
        this.rows = [];
        data.forEach(item => {
            this.rows.push({ loop: item.loopName, substation: item.substationName, meter: item.meterName, tag: item.opcTag });
        });
        this.tableLoading = false;
    }
    overollConsumptionChanged() {
        this.isDone.overollConsumptionData = false;
        this.resetTime();
        this.htDashboardService.getHTOveralConsumptionData(this.overollConsumptionRange.start.toDateString(), this.overollConsumptionRange.end.toDateString(), _enums_HTApiType__WEBPACK_IMPORTED_MODULE_12__["HTApiType"].SITE, this.configs.siteConfigurations.siteId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_16__["ServiceType"].MAIN_HT_ELECTRICAL).then((response) => {
            this.overollConsumptionData = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["fixDecimalNumPrecision"])(response[0].data[0].value, 2);
            this.isDone.overollConsumptionData = true;
        });
    }
    loopDistributionChanged(index) {
        this.isDone.substationDistribution = false;
        this.resetTime();
        this.htDashboardService.getSubstationDistribution(this.datePipe.transform(this.substationDistRange.start, 'yyyy/MM/dd'), this.datePipe.transform(this.substationDistRange.end, 'yyyy/MM/dd'), this.configs.siteConfigurations.siteId, _enums_HTApiType__WEBPACK_IMPORTED_MODULE_12__["HTApiType"].SITE, _enums_HtCategory__WEBPACK_IMPORTED_MODULE_13__["HtCategory"].HTLoop, index, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].HT_LOOPS).then((response) => {
            this.substationDistribution = response;
            this.isDone.substationDistribution = true;
        });
    }
    getDate(date) {
        const month = new Date(date).getMonth() + 1;
        const day = new Date(date).getDate();
        const year = new Date(date).getFullYear();
        return `${year}/${month}/${day}`;
    }
    onChangeTrendLogByDate(isInit = false) {
        const { month, date, year, target } = this._mapArrayTrendIndex[this.trendLogTabIndex];
        this._isYear = year;
        this._isMonth = month;
        const { start, end } = this._startDateTrendLog;
        let newStart = new Date(start);
        let newEnd = new Date(end);
        if (isInit) {
            this._isFirstInit = false;
        }
        if (this._isFirstInit) {
            const currentDate = new Date(start);
            let newDate = this._maxDate.getDate();
            let newMonth = this._maxDate.getMonth();
            if (year || month) {
                newDate = 1;
                if (year) {
                    newMonth = 0;
                }
            }
            currentDate.setDate(newDate);
            currentDate.setMonth(newMonth);
            newEnd.setDate(newDate);
            newEnd.setMonth(newMonth);
            newStart = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(currentDate, month || date || year, target, 'minus');
            this._startDateTrendLog.end = newEnd;
            this._startDateTrendLog.start = newEnd;
        }
        else {
            if (date) {
                newStart.setDate(end.getDate() - date);
            }
            else if (month) {
                newStart.setMonth(end.getMonth() - month);
                newStart.setDate(1);
            }
            else if (year) {
                newStart.setFullYear(end.getFullYear() - year);
                newStart.setMonth(0);
            }
        }
        if (date) {
            newEnd = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["dateGapGenerator"])(newEnd, 1, 'day');
        }
        this.callApiTrendLogData(this.trendLogTabIndex + 1, this.getDate(newStart), this.getDate(newEnd));
        this.resetTime();
    }
    setTrendLogData(index) {
        this.trendLogTabIndex = index;
        this.onChangeTrendLogByDate();
    }
    callApiTrendLogData(interval, start, end) {
        this.isDone.trendLogData = false;
        this.htDashboardService.getHTTrendLogs(interval, start, end, _enums_HTApiType__WEBPACK_IMPORTED_MODULE_12__["HTApiType"].SITE, this.configs.siteConfigurations.siteId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_16__["ServiceType"].MAIN_HT_ELECTRICAL).then((response) => {
            this.trendLogData = response;
            this.isDone.trendLogData = true;
            for (let i = 0; i < this.trendLogData.data.length; i++) {
                const item = this.trendLogData.data[i];
                const newValue = item.value / 1000;
                this.trendLogData.data[i] = Object.assign({}, item, { value: item.value ? newValue : null, displayValue: item.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_15__["moneyFormat"])((newValue || 0).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_18__["DECIMAL_MAP"].trendLogs)) : null, toolText: "Day: $label<br/>Consumption: $displayValue kWh" });
            }
            this.trendLogData.chart = Object.assign({}, this.trendLogData.chart, { formatNumberScale: 0, valuefontSize: 16, paletteColors: [this.colorMap.electric.secondary] });
        });
    }
    resetTime() {
        setTimeout(() => this._reload = false);
        setTimeout(() => this._reload = true);
    }
};
HtElectricalSiteDashboardComponent.ctorParameters = () => [
    { type: _app_services_header_service__WEBPACK_IMPORTED_MODULE_8__["HeaderService"] },
    { type: _app_services_http_service__WEBPACK_IMPORTED_MODULE_9__["HttpService"] },
    { type: _app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: _app_services_date_service_service__WEBPACK_IMPORTED_MODULE_5__["DateServiceService"] },
    { type: _app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: _services_dashboards_ht_dashboard_service__WEBPACK_IMPORTED_MODULE_4__["HtDashboardService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__["ActivatedRoute"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["LtDashboardService"] }
];
HtElectricalSiteDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-ht-site-electrical-dashboard',
        template: __webpack_require__(/*! raw-loader!./ht-electrical-site-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./ht-electrical-site-dashboard.component.scss */ "./app/dashboards/ht-electrical-site-dashboard/ht-electrical-site-dashboard.component.scss")]
    })
], HtElectricalSiteDashboardComponent);



/***/ }),

/***/ "./app/dashboards/overview/overview.component.scss":
/*!*********************************************************!*\
  !*** ./app/dashboards/overview/overview.component.scss ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.topic {\n  font-size: 1.7rem;\n  font-weight: 500;\n}\n\n.topic p {\n  font-size: 0.8rem;\n  font-weight: 400;\n}\n\n.topic .text-elec {\n  color: #e78c3c;\n}\n\n.topic .text-water {\n  color: #007bff;\n}\n\n.topic .text-cooling {\n  color: #00dcff;\n}\n\n.topic small {\n  font-size: 0.9rem;\n}\n\n.topic .time {\n  font-size: 0.8rem;\n  font-weight: 300;\n}\n\n.card-scroll {\n  min-height: 90vh;\n  max-height: 90vh;\n}\n\n.unit-size {\n  font-size: 1.4rem;\n}\n\n.column-seperator {\n  border-right: 1px solid #2F4251;\n}\n\n.monthly-consumption {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 53px);\n  padding: 7px;\n  padding-bottom: 0;\n  background-color: #2f4251;\n  padding-top: 0;\n}\n\n.monthly-consumption .field {\n  flex: 1;\n  border: 1px solid #727272;\n  margin-bottom: 7px;\n  padding: 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #293946;\n  border-color: transparent;\n  padding-top: 25px;\n}\n\n.monthly-consumption .field .title {\n  font-size: 16px;\n}\n\n.monthly-consumption .field .value {\n  font-size: 24px;\n}\n\n.customs-consuption .title {\n  position: absolute;\n  top: 3px;\n  font-size: 14px !important;\n}\n\n.customs-consuption img {\n  width: 40px !important;\n  height: 40px !important;\n}\n\ndiv.customs-activity-consumption {\n  padding-top: 0 !important;\n}\n\ndiv.customs-activity-consumption .content-item {\n  background-color: #2f4251;\n  padding-top: 0 !important;\n}\n\ndiv.customs-activity-consumption .content-item .pointer-container {\n  background-color: #293946 !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9vdmVydmlldy9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFxkYXNoYm9hcmRzXFxvdmVydmlld1xcb3ZlcnZpZXcuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvb3ZlcnZpZXcvb3ZlcnZpZXcuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvb3ZlcnZpZXcvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNFLGlCRjRCa0I7RUUzQmxCLGdCQUFBO0FER0Y7O0FDREU7RUFDRSxpQkZvQmdCO0VFbkJoQixnQkFBQTtBREdKOztBQ0FFO0VBQ0UsY0ZZVztBQ1ZmOztBQ0NFO0VBQ0UsY0ZaUztBQ2FiOztBQ0VFO0VBQ0UsY0FBQTtBREFKOztBQ0dFO0VBQ0UsaUJGTW1CO0FDUHZCOztBQ0lFO0VBQ0UsaUJGTVk7RUVMWixnQkFBQTtBREZKOztBQ01BO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtBREhGOztBQ01BO0VBQ0UsaUJBQUE7QURIRjs7QUNNQTtFQUNFLCtCQUFBO0FESEY7O0FDTUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsY0FBQTtBREhGOztBQ0lFO0VBQ0UsT0FBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtFQUNBLHlCQUFBO0VBQ0EsaUJBQUE7QURGSjs7QUNHSTtFQUNFLGVBQUE7QURETjs7QUNJSTtFQUNFLGVBQUE7QURGTjs7QUNTRTtFQUNFLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLDBCQUFBO0FETko7O0FDUUU7RUFDRSxzQkFBQTtFQUNBLHVCQUFBO0FETko7O0FDVUE7RUFDRSx5QkFBQTtBRFBGOztBQ1dFO0VBQ0UseUJBQUE7RUFDQSx5QkFBQTtBRFJKOztBQ1NJO0VBQ0Usb0NBQUE7QURQTiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvb3ZlcnZpZXcvb3ZlcnZpZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtYXRlcmlhbCBjb2xvcnNcclxuJGJnLWNvbG9yOiAjMWUxZjIxO1xyXG4kaGVhZGVyLWNvbG9yOiAjMjkzOTQ2O1xyXG4kYmctY2FyZDogIzI0MmMzMztcclxuJGJnLXByaW1hcnk6ICMwMDdiZmY7XHJcbiRiZy1zZWNvbmRhcnk6ICMyOTM5NDY7XHJcbiRiZy1vcHQtb25lOiAjMmY0MjUxO1xyXG4kYmctb3B0LXR3bzogIzNjNjE3ZDtcclxuJGJnLW9wdC1mb3VyOiAjMzY1NTZmO1xyXG4kYmctdGFibGUtaGVhZGVyOiAjMWMyMzI4O1xyXG4kYmctdGFibGUtYm9keTogIzM0M2Y0OTtcclxuXHJcbi8vIGJvcmRlciBjb2xvcnNcclxuJGNvbG9yLWJvcmRlci1wcmltYXJ5OiAjMzU0OTU4O1xyXG5cclxuLy8gY29tbW9uIGNvbG9yc1xyXG4kdHJhbnNwYXJlbnQ6IHRyYW5zcGFyZW50O1xyXG5cclxuLy8gdHlwbyBjb2xvcnNcclxuJGZvbnQtY29sb3I6ICNmZmZmZmY7XHJcbiRjb2xvci1mb250LXNlY29uZGFyeTogI2ZmZjtcclxuJGNvbG9yLWZvbnQtdGVybmFyeTogI2I5YmFiYjtcclxuJGZvbnQtZGFuZ2VyOiAjZTc0ODNjO1xyXG4kZm9udC1uZXV0cmFsOiAjMTFiNzJjO1xyXG4kZm9udC13YXJuaW5nOiAjZTc4YzNjO1xyXG5cclxuLy8gdHlwbyBzaXplc1xyXG4kc2l6ZS1mb250LXByaW1hcnk6IC44cmVtO1xyXG4kc2l6ZS1mb250LXNlY29uZGFyeTogMXJlbTtcclxuJHNpemUtZm9udC1sYXJnZTogM3JlbTtcclxuJHNpemUtZm9udC1oZWFkZXItYnRuOiAwLjlyZW07XHJcbiRzaXplLWZvbnQtcG9pbnRlcjogMS43cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXItdW5pdDogMS41cmVtO1xyXG4kc2l6ZS1mb250LW1pZDogMi4xcmVtO1xyXG4kc2l6ZS1mb250LWxvdzogMC44cmVtO1xyXG5cclxuLy8gY29tcG9uZW50IHNpemVzXHJcbiRoZWFkZXItaGVpZ2h0OiA3MHB4O1xyXG4kaGVpZ2h0LWNoYXJ0LWhlYWRlcjogNDcuNzhweDtcclxuJHNpZGUtYmFyLXdpZHRoOiAyNTBweDtcclxuXHJcbi5kYXRlLXBpY2tlci1pbnB1dHtcclxuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcclxufSIsIi5kYXRlLXBpY2tlci1pbnB1dCB7XG4gIGJvcmRlci1zdHlsZTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4udG9waWMge1xuICBmb250LXNpemU6IDEuN3JlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbi50b3BpYyBwIHtcbiAgZm9udC1zaXplOiAwLjhyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG4udG9waWMgLnRleHQtZWxlYyB7XG4gIGNvbG9yOiAjZTc4YzNjO1xufVxuLnRvcGljIC50ZXh0LXdhdGVyIHtcbiAgY29sb3I6ICMwMDdiZmY7XG59XG4udG9waWMgLnRleHQtY29vbGluZyB7XG4gIGNvbG9yOiAjMDBkY2ZmO1xufVxuLnRvcGljIHNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjlyZW07XG59XG4udG9waWMgLnRpbWUge1xuICBmb250LXNpemU6IDAuOHJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cblxuLmNhcmQtc2Nyb2xsIHtcbiAgbWluLWhlaWdodDogOTB2aDtcbiAgbWF4LWhlaWdodDogOTB2aDtcbn1cblxuLnVuaXQtc2l6ZSB7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xufVxuXG4uY29sdW1uLXNlcGVyYXRvciB7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICMyRjQyNTE7XG59XG5cbi5tb250aGx5LWNvbnN1bXB0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA1M3B4KTtcbiAgcGFkZGluZzogN3B4O1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJmNDI1MTtcbiAgcGFkZGluZy10b3A6IDA7XG59XG4ubW9udGhseS1jb25zdW1wdGlvbiAuZmllbGQge1xuICBmbGV4OiAxO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNzI3MjcyO1xuICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI5Mzk0NjtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgcGFkZGluZy10b3A6IDI1cHg7XG59XG4ubW9udGhseS1jb25zdW1wdGlvbiAuZmllbGQgLnRpdGxlIHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuLm1vbnRobHktY29uc3VtcHRpb24gLmZpZWxkIC52YWx1ZSB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuLmN1c3RvbXMtY29uc3VwdGlvbiAudGl0bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDtcbn1cbi5jdXN0b21zLWNvbnN1cHRpb24gaW1nIHtcbiAgd2lkdGg6IDQwcHggIWltcG9ydGFudDtcbiAgaGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XG59XG5cbmRpdi5jdXN0b21zLWFjdGl2aXR5LWNvbnN1bXB0aW9uIHtcbiAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDtcbn1cblxuZGl2LmN1c3RvbXMtYWN0aXZpdHktY29uc3VtcHRpb24gLmNvbnRlbnQtaXRlbSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZjQyNTE7XG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG59XG5kaXYuY3VzdG9tcy1hY3Rpdml0eS1jb25zdW1wdGlvbiAuY29udGVudC1pdGVtIC5wb2ludGVyLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTM5NDYgIWltcG9ydGFudDtcbn0iLCJAaW1wb3J0ICdzcmMvc2Nzcy9fdmFyaWFibGVzLnNjc3MnO1xyXG5cclxuLnRvcGljIHtcclxuICBmb250LXNpemU6ICRzaXplLWZvbnQtcG9pbnRlcjtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG5cclxuICBwIHtcclxuICAgIGZvbnQtc2l6ZTogJHNpemUtZm9udC1wcmltYXJ5O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICB9XHJcblxyXG4gIC50ZXh0LWVsZWMge1xyXG4gICAgY29sb3I6ICRmb250LXdhcm5pbmc7XHJcbiAgfVxyXG5cclxuICAudGV4dC13YXRlciB7XHJcbiAgICBjb2xvcjogJGJnLXByaW1hcnk7XHJcbiAgfVxyXG5cclxuICAudGV4dC1jb29saW5nIHtcclxuICAgIGNvbG9yOiAjMDBkY2ZmO1xyXG4gIH1cclxuXHJcbiAgc21hbGwge1xyXG4gICAgZm9udC1zaXplOiAkc2l6ZS1mb250LWhlYWRlci1idG47XHJcbiAgfVxyXG5cclxuICAudGltZSB7XHJcbiAgICBmb250LXNpemU6ICRzaXplLWZvbnQtbG93O1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICB9XHJcbn1cclxuXHJcbi5jYXJkLXNjcm9sbCB7XHJcbiAgbWluLWhlaWdodDogOTB2aDtcclxuICBtYXgtaGVpZ2h0OiA5MHZoO1xyXG59XHJcblxyXG4udW5pdC1zaXple1xyXG4gIGZvbnQtc2l6ZTogMS40cmVtO1xyXG59XHJcblxyXG4uY29sdW1uLXNlcGVyYXRvciB7XHJcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgIzJGNDI1MTtcclxufVxyXG5cclxuLm1vbnRobHktY29uc3VtcHRpb24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDUzcHgpO1xyXG4gIHBhZGRpbmc6IDdweDtcclxuICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmY0MjUxO1xyXG4gIHBhZGRpbmctdG9wOiAwO1xyXG4gIC5maWVsZCB7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzcyNzI3MjtcclxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICAgIHBhZGRpbmc6IDEycHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICByZ2IoNDEgNTcgNzApO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHBhZGRpbmctdG9wOiAyNXB4O1xyXG4gICAgLnRpdGxlIHtcclxuICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgfVxyXG5cclxuICAgIC52YWx1ZSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4uY3VzdG9tcy1jb25zdXB0aW9ue1xyXG4gIC50aXRsZXtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogM3B4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIGltZ3tcclxuICAgIHdpZHRoOiA0MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwcHggIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuXHJcbmRpdi5jdXN0b21zLWFjdGl2aXR5LWNvbnN1bXB0aW9ue1xyXG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmRpdi5jdXN0b21zLWFjdGl2aXR5LWNvbnN1bXB0aW9ue1xyXG4gIC5jb250ZW50LWl0ZW17XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAgIzJmNDI1MTtcclxuICAgIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XHJcbiAgICAucG9pbnRlci1jb250YWluZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0MSA1NyA3MCkgIWltcG9ydGFudDtcclxuICAgIH1cclxuICB9XHJcbn0iXX0= */"

/***/ }),

/***/ "./app/dashboards/overview/overview.component.ts":
/*!*******************************************************!*\
  !*** ./app/dashboards/overview/overview.component.ts ***!
  \*******************************************************/
/*! exports provided: OverviewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverviewComponent", function() { return OverviewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _enums_intervals__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../enums/intervals */ "./enums/intervals.ts");
/* harmony import */ var _enums_group_by__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../enums/group-by */ "./enums/group-by.ts");
/* harmony import */ var _enums_DataMode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../enums/DataMode */ "./enums/DataMode.ts");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash/find */ "../node_modules/lodash/find.js");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");















let OverviewComponent = class OverviewComponent {
    constructor(headerService, dataService, configs, datePipe, dateHelper, initialService, thousandSeparator) {
        this.headerService = headerService;
        this.dataService = dataService;
        this.configs = configs;
        this.datePipe = datePipe;
        this.dateHelper = dateHelper;
        this.initialService = initialService;
        this.thousandSeparator = thousandSeparator;
        this.elecChangeInConsumption = {};
        this.waterChangeInConsumption = {};
        this.coolingChangeInConsumption = {};
        this.consumptionSummary = {};
        this.serviceTypeChangeSummary = false;
        this.suffix = { 'elec': '', 'water': '', 'cooling': '' };
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"];
        this.isDone = {};
        this.headerService.setBoardLevel(2);
        this.dataService
            .get(this.configs.endPoints.site, { siteId: this.configs.siteConfigurations.siteId })
            .subscribe(data => {
            this.headerService.setItem(data.siteName);
        }, error => {
            this.headerService.setItem('Site Name');
        });
        if (!this.initialService.getDemoConfig().isDemo) {
            this.today = new Date();
        }
        else {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        this.lastTwoMonthRange = this.dateHelper.getTwoMonth(this.today);
        this.lastSixMonthRange = this.dateHelper.getLastSixMonth(this.today);
        this.thisMonthConsumption = this.dateHelper.thisMonthUpToNow(this.today);
        this.thisYearConsumption = this.dateHelper.getThisYear(this.today);
        this.dataService.siteId.subscribe(data => {
            this.siteId = data;
        });
        this.decimalNumPrecision = this.configs.siteConfigurations.realTimeConsumptiondecimalNumPrecision;
    }
    ngOnInit() {
        // TODO: replaced stack chart with column3d chart
        this.getMonthlyYearlyConsumption();
        this.getWaterChangeInConsumption();
        this.getElecChangeInConsumption();
        // this.getMainIncomerConsumption();
        this.getCoolingChangeInConsumption();
        this.getElectricalCoolingConsumptionSummary().then(res => {
            this.consumptionSummary = res;
            this.isDone.consumptionSummary = true;
        });
        setInterval(() => {
            this.getMonthlyYearlyConsumption();
        }, 1000 * 60 * 30);
    }
    generateChangeInConsumption() {
        let dateRange = this.dateHelper.getDateRangeDateList(this.lastTwoMonthRange, "months");
        const labelAndValue = [];
        for (let i = 1; i >= 0; i--) {
            labelAndValue.push({
                label: dateRange[i],
                value: null
            });
        }
        const data = [{ data: labelAndValue }];
        return data;
    }
    serviceTypeToggleSummary(event) {
        if (event) {
            this.serviceTypeChangeSummary = true;
        }
        else {
            this.serviceTypeChangeSummary = false;
        }
    }
    plotChnageInConsumption(data, mode) {
        let unit;
        switch (mode) {
            case _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER:
                unit = 'kWh';
                break;
            case _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].WATER:
                unit = 'm<sup>3</sup>';
                break;
            case _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_WATER:
                unit = 'm<sup>3</sup>';
                break;
            case _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER:
                unit = 'RTh';
                break;
        }
        const newData = [];
        for (let i = 0; i < data.length; i++) {
            const childData = data[i].data;
            for (let j = 0; j < childData.length; j++) {
                let newValue = childData[j].value;
                const { scalledNumber, suffix, unit } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["abbreviateNumber"])(Number(newValue), mode);
                let displayValue = childData[j].value ? `${scalledNumber}${suffix}` : null;
                if (mode == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER && newValue) {
                    newValue = (newValue / 1000).toFixed(0);
                    displayValue = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["moneyFormat"])(newValue);
                }
                const dateVale = this.datePipe.transform(childData[j].label, "yyyy-MMMM");
                const newItem = {
                    label: this.datePipe.transform(childData[j].label, "MMM"),
                    value: newValue,
                    displayValue: displayValue,
                    dateVale: this.datePipe.transform(childData[j].label, "yyyy-MMMM"),
                    tooltext: `Month: ${dateVale} <br/>Consumption: $displayValue ${unit}`
                };
                newData.push(newItem);
            }
        }
        // let newData = [
        //   {
        //     label: this.datePipe.transform(data[0].data[0].label, "MMM"),
        //     value: data[0].data[0].value,
        //     tooltext: `Month: ${this.datePipe.transform(data[0].data[0].label, "yyyy-MMMM")}<br/>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[0].data[0].value, this.configs.siteConfigurations.decimalNumPrecision))} ${unit}`
        //   },
        //   {
        //     label: this.datePipe.transform(data[0].data[1].label, "MMM"),
        //     value: data[0].data[1].value,
        //     tooltext: `Month: ${this.datePipe.transform(data[0].data[1].label, "yyyy-MMMM")}<br/>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[0].data[1].value, this.configs.siteConfigurations.decimalNumPrecision))} ${unit}`
        //   }
        // ];
        // console.log(mode, '=> ',newData);
        switch (mode) {
            case _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER:
                this.elecChangeInConsumption.data = newData;
                this.elecChangeInConsumption.chart = this.configs.chartConfigurations['site-consumption-mode'];
                this.elecOldValue = data[0].data[0].value;
                this.elecNewValue = data[0].data[1].value;
                this.elecChangeInConsumption.chart['paletteColors'] = [src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].electric.primary, src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].electric.secondary];
                break;
            case _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].WATER:
                this.waterChangeInConsumption.data = newData;
                this.waterChangeInConsumption.chart = this.configs.chartConfigurations['water-change-in-consumption'];
                this.waterOldValue = data[0].data[0].value;
                this.waterNewValue = data[0].data[1].value;
                this.waterChangeInConsumption.chart['paletteColors'] = [src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].water.primary, src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].water.secondary];
                break;
            case _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_WATER:
                this.waterChangeInConsumption.data = newData;
                this.waterChangeInConsumption.chart = this.configs.chartConfigurations['water-change-in-consumption'];
                this.waterOldValue = data[0].data[0].value;
                this.waterNewValue = data[0].data[1].value;
                this.waterChangeInConsumption.chart['paletteColors'] = [src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].water.primary, src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].water.secondary];
                break;
            case _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER:
                this.coolingChangeInConsumption.data = newData;
                this.coolingChangeInConsumption.chart = this.configs.chartConfigurations['cooling-change-in-consumption'];
                this.coolingOldValue = data[0].data[0].value;
                this.coolingNewValue = data[0].data[1].value;
                this.coolingChangeInConsumption.chart['paletteColors'] = [src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].cooling.primary, src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].cooling.secondary];
                break;
        }
    }
    getElecChangeInConsumption() {
        this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER);
        this.getChangeInConsumptionData(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER)
            .then(data => {
            this.isDone.elecChangeInConsumption = true;
            if (data == null || data.length == 0) {
                this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER);
            }
            else {
                this.plotChnageInConsumption(data, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER);
            }
        }, err => {
            this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER);
        });
    }
    getWaterChangeInConsumption() {
        this.isDone.waterChangeInConsumption = false;
        this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].WATER);
        this.getChangeInConsumptionData(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_WATER)
            .then(data => {
            this.isDone.waterChangeInConsumption = true;
            if (data == null || data.length == 0) {
                this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].WATER);
            }
            else {
                this.plotChnageInConsumption(data, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].WATER);
            }
        }, err => {
            this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].WATER);
        });
    }
    getCoolingChangeInConsumption() {
        this.isDone.coolingChangeInConsumption = false;
        this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER);
        this.getChangeInConsumptionData(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER)
            .then(data => {
            this.isDone.coolingChangeInConsumption = true;
            if (data == null || data.length == 0) {
                this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER);
            }
            else {
                this.plotChnageInConsumption(data, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER);
            }
        }, err => {
            this.plotChnageInConsumption(this.generateChangeInConsumption(), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER);
        });
    }
    getChangeInConsumptionData(serviceType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let data = yield this.dataService
                    .get(this.configs.endPoints['site-consumption-mode'], {
                    siteId: this.configs.siteConfigurations.siteId,
                    startDate: this.datePipe.transform(this.lastTwoMonthRange.start, 'yyyy/MM/dd'),
                    endDate: this.datePipe.transform(this.lastTwoMonthRange.end, 'yyyy/MM/dd'),
                    groupId: _enums_group_by__WEBPACK_IMPORTED_MODULE_9__["GroupBy"].None,
                    serviceTypeId: serviceType,
                    interval: _enums_intervals__WEBPACK_IMPORTED_MODULE_8__["Interval"].Monthly
                }).toPromise();
                return data;
            }
            catch (e) {
                return "error";
            }
        });
    }
    getConsumptionSummaryChartData(serviceType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            // this.plotMainIncomerConsumptionChart(this.generateMainIncomerConsumptionData());
            let data = yield this.dataService.get(this.configs.endPoints['site-consumption-mode'], {
                siteId: this.configs.siteConfigurations.siteId,
                startDate: this.datePipe.transform(this.lastSixMonthRange.start, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(this.lastSixMonthRange.end, 'yyyy/MM/dd'),
                groupId: _enums_group_by__WEBPACK_IMPORTED_MODULE_9__["GroupBy"].None,
                serviceTypeId: serviceType,
                interval: _enums_intervals__WEBPACK_IMPORTED_MODULE_8__["Interval"].Monthly
            }).toPromise();
            return data;
        });
    }
    generateMainIncomerConsumptionData() {
        const labelAndValue = [];
        for (let i = 6; i >= 1; i--) {
            labelAndValue.push({
                label: this.datePipe.transform(new Date().setMonth(new Date().getMonth() - i), 'MMMM'),
                value: null
            });
        }
        return labelAndValue;
    }
    fetchMonthlyYearlyConsumption(dateRang, serviceType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let res = yield this.dataService.get(this.configs.endPoints['site-consumption-data-mode'], {
                    siteId: this.configs.siteConfigurations.siteId,
                    startDate: this.datePipe.transform(dateRang.start, 'yyyy/MM/dd'),
                    endDate: this.datePipe.transform(dateRang.end, 'yyyy/MM/dd'),
                    groupId: _enums_group_by__WEBPACK_IMPORTED_MODULE_9__["GroupBy"].None,
                    serviceTypeId: serviceType,
                    interval: _enums_intervals__WEBPACK_IMPORTED_MODULE_8__["Interval"].ThirtyMin,
                    dataMode: 1
                }).toPromise();
                return res != null ? res : [];
            }
            catch (error) {
                return [];
            }
        });
    }
    initialValueNA(keyArr = ['realTimeConsumptionElec']) {
        for (let i = 0; i < keyArr.length; i++) {
            const key = keyArr[i];
            if (this[key] === null || this[key] === undefined) {
                this[key] = 'N/A';
            }
        }
    }
    getMonthlyYearlyConsumption() {
        // Fetch Data For This Month Consumption charts
        this.initialValueNA(['realTimeConsumptionElec', 'realTimeConsumptionCoolingLoad', 'realTimeConsumptionWater']);
        this.isDone.realTimeConsumptionElec = false;
        this.isDone.realTimeConsumptionCoolingLoad = false;
        this.isDone.realTimeConsumptionWater = false;
        this.isDone.thisYearConsumptionElec = false;
        this.isDone.thisYearConsumptionWater = false;
        this.isDone.thisYearConsumptionCooling = false;
        this.isDone.thisYearConsumptionFootPrint = false;
        this.fetchMonthlyYearlyConsumption(this.thisMonthConsumption, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER).then(res => {
            const { scalledNumber, suffix, unit } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["abbreviateNumber"])(Number(res[0].data[0].value), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER);
            // this.realTimeConsumptionElec = fixDecimalNumPrecision(scalledNumber, 3);
            this.realTimeConsumptionElec = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["moneyFormat"])((res[0].data[0].value / 1000).toFixed());
            this.realTimeConsumptionElecUnit = unit;
            this.suffix['elec'] = '';
            this.isDone.realTimeConsumptionElec = true;
            // this.realTimeConsumptionElec = roundConsumptionValue(res[0].data[0].value, ServiceType.MAIN_INCOMER).value;
            // this.realTimeConsumptionElecUnit = roundConsumptionValue(res[0].data[0].value, ServiceType.MAIN_INCOMER).unit;
        });
        this.fetchMonthlyYearlyConsumption(this.thisMonthConsumption, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER).then(res => {
            const { scalledNumber, suffix, unit } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["abbreviateNumber"])(Number(res[0].data[0].value), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER);
            this.realTimeConsumptionCoolingLoad = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(scalledNumber, 3);
            ;
            this.realTimeConsumptionCoolingLoadUnit = unit;
            this.suffix['cooling'] = suffix;
            this.isDone.realTimeConsumptionCoolingLoad = true;
            // this.realTimeConsumptionCoolingLoad = roundConsumptionValue(res[0].data[0].value, ServiceType.CHILLER).value;
            // this.realTimeConsumptionCoolingLoadUnit = roundConsumptionValue(res[0].data[0].value, ServiceType.CHILLER).unit;
        });
        this.fetchMonthlyYearlyConsumption(this.thisMonthConsumption, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_WATER).then(res => {
            const { scalledNumber, suffix, unit } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["abbreviateNumber"])(Number(res[0].data[0].value), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_WATER);
            this.realTimeConsumptionWater = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(scalledNumber, 3);
            this.realTimeConsumptionWaterUnit = unit;
            this.suffix['water'] = suffix;
            this.isDone.realTimeConsumptionWater = true;
            // this.realTimeConsumptionWater = roundConsumptionValue(res[0].data[0].value, ServiceType.WATER).value, 2;
            // this.realTimeConsumptionWaterUnit = roundConsumptionValue(res[0].data[0].value, ServiceType.WATER).unit;
        });
        // Fetch data for this year consumption charts
        this.fetchMonthlyYearlyConsumption(this.thisYearConsumption, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER).then(res => {
            this.thisYearConsumptionElec = res[0].data[0].value;
            this.isDone.thisYearConsumptionElec = true;
        });
        this.fetchMonthlyYearlyConsumption(this.thisYearConsumption, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_WATER).then(res => {
            this.thisYearConsumptionWater = res[0].data[0].value;
            this.isDone.thisYearConsumptionWater = true;
        });
        this.fetchMonthlyYearlyConsumption(this.thisYearConsumption, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER).then(res => {
            this.thisYearConsumptionCooling = res[0].data[0].value;
            this.isDone.thisYearConsumptionCooling = true;
        });
        this.fetchMonthlyYearlyConsumption(this.thisYearConsumption, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER).then(res => {
            this.thisYearConsumptionFootPrint = res[0].data[0].value * .408;
            this.isDone.thisYearConsumptionFootPrint = true;
        });
    }
    // TODO: replaced stack chart with column3d chart
    plotEnergyConsumption(data) {
        const newData = [];
        data.forEach(element => {
            const labelAndValue = [];
            element.data.forEach(i => {
                labelAndValue.push({ label: i.label, value: i.value });
            });
            newData.push({
                name: element.name,
                data: labelAndValue,
                itemId: element.itemId
            });
        });
        let chart = this.configs.chartConfigurations['site-elec-cat-overview'];
        chart.exportFileName = 'Water Summary - Last 6 Months';
        const category = [];
        const dataSets = [];
        const total = [];
        if (newData !== null) {
            newData[0].data.forEach(element => {
                total.push({ value: null, tooltext: '' });
            });
        }
        newData.forEach((element, i) => {
            const data = [];
            element.data.forEach((month, key) => {
                if (i === 0) {
                    category.push({
                        label: this.datePipe.transform(month.label, 'yyyy-MMM')
                    });
                }
                data.push({
                    value: month.value,
                    tooltext: `Category: ${element.name}<br/>Month: ${this.datePipe.transform(month.label, 'yyyy-MMMM')}<br/>Consumption: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(month.value, this.configs.siteConfigurations.decimalNumPrecision))} m³`
                });
                if (month.value !== null) {
                    if (total[key].value === null) {
                        total[key].value = 0;
                    }
                    total[key].value = total[key].value + month.value;
                    total[key].tooltext = `Category: $seriesname<br/>Month: ${this.datePipe.transform(month.label, 'yyyy-MMMM')}<br/>Consumption: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(total[key].value, this.configs.siteConfigurations.decimalNumPrecision))} m³`;
                }
            });
            dataSets.push({
                seriesname: element.name,
                data,
                color: this.getEnergyConsumptionChartColor(element.itemId)
            });
        });
        dataSets.push({
            seriesname: "Total Consumption",
            renderas: "Line",
            data: total,
            showValues: '1'
        });
        return {
            chart,
            categories: [{ category }],
            dataset: dataSets
        };
    }
    getEnergyConsumptionChartColor(itemId) {
        if (itemId !== undefined && itemId !== null) {
            let item = lodash_find__WEBPACK_IMPORTED_MODULE_11___default()(this.initialService.navigationStore.buildingCategories, { buildingCategoryID: itemId });
            let color = lodash_find__WEBPACK_IMPORTED_MODULE_11___default()(item.attributes, { textId: this.configs.config.attributes.COLOR_CODE });
            return color === null || color === undefined ? this.configs.config.defaultColorCode : color.value;
        }
        else {
            return this.configs.config.defaultColorCode;
        }
    }
    generateEnergyConsumption() {
        const labelAndValue = [];
        const months = this.dateHelper.getDateRangeDateList(this.lastSixMonthRange, "months");
        for (let i = 5; i > 6; i--) {
            labelAndValue.push({
                label: months[i],
                value: null
            });
        }
        const data = [
            {
                name: null,
                itemId: 1,
                data: labelAndValue
            }
        ];
        return data;
    }
    onSixMonthChartToggle(event) {
        // this.consumptionSummary = null
        this.consumptionSummary.dataset = [];
        this.isDone.consumptionSummary = false;
        if (event) {
            this.serviceTypeChangeSummary = true;
            this.getWaterConsumptionSummary().then(res => {
                this.consumptionSummary = res;
                this.isDone.consumptionSummary = true;
            });
        }
        else {
            this.serviceTypeChangeSummary = false;
            this.getElectricalCoolingConsumptionSummary().then(res => {
                this.consumptionSummary = res;
                this.isDone.consumptionSummary = true;
            });
        }
    }
    getElectricalCoolingConsumptionSummary() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let electricalData = yield this.getConsumptionSummaryChartData(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER);
            let coolingLoad = yield this.getConsumptionSummaryChartData(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].CHILLER);
            this.plotElectricalCoolingConsumptionSummary(this.lastSixMonthRange);
            let preparedData = this.plotElectricalCoolingConsumptionSummary(this.lastSixMonthRange);
            preparedData.dataset[0].data = [];
            preparedData.dataset[1].data = [];
            electricalData[0].data.forEach(item => {
                preparedData.dataset[0].data.push({
                    value: item.value / 1000,
                    toolText: `Category: $seriesName <br>Month: ${this.datePipe.transform(item.label, 'yyyy-MMMM')}<br>Value: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])((item.value), this.configs.siteConfigurations.decimalNumPrecision))} kWh`,
                    color: src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].electric.secondary,
                    displayValue: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["moneyFormat"])((item.value / 1000).toFixed())
                });
            });
            coolingLoad[0].data.forEach(item => {
                const { scalledNumber, suffix, unit } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["abbreviateNumber"])(Number(item.value), _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].MAIN_INCOMER);
                preparedData.dataset[1].data.push({
                    value: item.value / 1000,
                    toolText: `Category: $seriesName <br>Month: ${this.datePipe.transform(item.label, 'yyyy-MMMM')}<br>Value: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])((item.value), this.configs.siteConfigurations.decimalNumPrecision))} RTh`,
                    color: src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].cooling.secondary,
                    displayValue: `${scalledNumber}${suffix}`
                });
            });
            preparedData.chart = Object.assign({}, preparedData.chart, { showValues: 1, placeValuesInside: 1, rotateValues: 1 });
            return preparedData;
            // TODO: Prepare chart for the consumption summary chart
        });
    }
    plotElectricalCoolingConsumptionSummary(dateRange) {
        let data = {
            chart: {},
            categories: [
                {
                    category: []
                }
            ],
            dataset: [
                {
                    seriesname: 'Electrical Energy (kWh)',
                    data: [],
                    formatNumberScale: 0,
                    color: src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].electric.primary,
                    renderAs: "column",
                },
                {
                    seriesname: 'Cooling Load (RTh)',
                    data: [],
                    color: src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"].cooling.primary,
                }
            ]
        };
        data.chart = this.configs.chartConfigurations.energyConsumptionSummaryCoolingElectrical;
        data.chart = Object.assign({}, data.chart, { formatNumberScale: 0 });
        data.chart['exportFileName'] = 'Electrical Energy and Cooling Load Summary - Last 6 Months';
        let months = this.dateHelper.getDateRangeDateList(dateRange, 'month');
        for (let i = 0; i < 6; i++) {
            data.categories[0].category.push({
                label: this.datePipe.transform(months[i], "yyyy-MMM")
            });
        }
        return data;
    }
    getWaterConsumptionSummary() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.plotEnergyConsumption(this.generateEnergyConsumption());
            let data = yield this.dataService
                .get(this.configs.endPoints['site-consumption-data-mode'], {
                siteId: this.configs.siteConfigurations.siteId,
                startDate: this.datePipe.transform(this.lastSixMonthRange.start, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(this.lastSixMonthRange.end, 'yyyy/MM/dd'),
                groupId: _enums_group_by__WEBPACK_IMPORTED_MODULE_9__["GroupBy"].BuildingCategory,
                serviceTypeId: _enums_ServiceType__WEBPACK_IMPORTED_MODULE_7__["ServiceType"].WATER,
                interval: _enums_intervals__WEBPACK_IMPORTED_MODULE_8__["Interval"].Monthly,
                dataMode: _enums_DataMode__WEBPACK_IMPORTED_MODULE_10__["DataMode"].CategorySum
            }).toPromise();
            data = this.plotEnergyConsumption(data);
            return data;
        });
    }
};
OverviewComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] },
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_3__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_4__["DatePipe"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_5__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_13__["ThousandSeparatorPipe"] }
];
OverviewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-overview',
        template: __webpack_require__(/*! raw-loader!./overview.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/overview/overview.component.html"),
        styles: [__webpack_require__(/*! ./overview.component.scss */ "./app/dashboards/overview/overview.component.scss")]
    })
], OverviewComponent);



/***/ }),

/***/ "./app/dashboards/power-meter/power-meter.component.scss":
/*!***************************************************************!*\
  !*** ./app/dashboards/power-meter/power-meter.component.scss ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "form {\n  font-size: 1em;\n}\n\nfieldset {\n  border: 1px solid #757575;\n  padding: 10px 20px 10px 20px;\n  border-radius: 3px;\n  color: #757575;\n}\n\nfieldset legend {\n  font-size: 1em;\n  color: #757575;\n  margin-left: 10px;\n  padding: 0px 10px 0px 10px;\n  width: auto;\n}\n\n.form-check-label {\n  color: #fff;\n}\n\nlabel {\n  vertical-align: middle;\n}\n\nselect {\n  font-size: 1em;\n}\n\n.meter-check {\n  display: inline-block;\n  margin-left: 20px;\n  vertical-align: middle;\n}\n\n.card-scroll {\n  min-height: 90vh;\n  max-height: 90vh;\n}\n\n.mt-10 {\n  margin-top: 10px;\n}\n\n.text-colour-white {\n  color: #fff;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9wb3dlci1tZXRlci9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFxkYXNoYm9hcmRzXFxwb3dlci1tZXRlclxccG93ZXItbWV0ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvcG93ZXItbWV0ZXIvcG93ZXItbWV0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLDRCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0FDQ0o7O0FEQ0k7RUFDSSxjQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0VBQ0EsMEJBQUE7RUFDQSxXQUFBO0FDQ1I7O0FER0E7RUFDSSxXQUFBO0FDQUo7O0FER0E7RUFDSSxzQkFBQTtBQ0FKOztBREdBO0VBQ0ksY0FBQTtBQ0FKOztBREdBO0VBQ0kscUJBQUE7RUFDQSxpQkFBQTtFQUNBLHNCQUFBO0FDQUo7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGdCQUFBO0FDQ0o7O0FEQ0U7RUFDSSxnQkFBQTtBQ0VOOztBREFFO0VBQ0ksV0FBQTtBQ0dOIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkcy9wb3dlci1tZXRlci9wb3dlci1tZXRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbn1cclxuXHJcbmZpZWxkc2V0IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM3NTc1NzU7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAyMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgY29sb3I6ICM3NTc1NzU7XHJcblxyXG4gICAgbGVnZW5kIHtcclxuICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICBjb2xvcjogIzc1NzU3NTtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTBweCAwcHggMTBweDtcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgIH1cclxufVxyXG5cclxuLmZvcm0tY2hlY2stbGFiZWwge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbnNlbGVjdCB7XHJcbiAgICBmb250LXNpemU6IDFlbTtcclxufVxyXG5cclxuLm1ldGVyLWNoZWNrIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG4uY2FyZC1zY3JvbGwge1xyXG4gICAgbWluLWhlaWdodDogOTB2aDtcclxuICAgIG1heC1oZWlnaHQ6IDkwdmg7XHJcbiAgfVxyXG4gIC5tdC0xMHtcclxuICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICB9XHJcbiAgLnRleHQtY29sb3VyLXdoaXRle1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICB9IiwiZm9ybSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM3NTc1NzU7XG4gIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgY29sb3I6ICM3NTc1NzU7XG59XG5maWVsZHNldCBsZWdlbmQge1xuICBmb250LXNpemU6IDFlbTtcbiAgY29sb3I6ICM3NTc1NzU7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBwYWRkaW5nOiAwcHggMTBweCAwcHggMTBweDtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi5mb3JtLWNoZWNrLWxhYmVsIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbmxhYmVsIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuc2VsZWN0IHtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi5tZXRlci1jaGVjayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5jYXJkLXNjcm9sbCB7XG4gIG1pbi1oZWlnaHQ6IDkwdmg7XG4gIG1heC1oZWlnaHQ6IDkwdmg7XG59XG5cbi5tdC0xMCB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi50ZXh0LWNvbG91ci13aGl0ZSB7XG4gIGNvbG9yOiAjZmZmO1xufSJdfQ== */"

/***/ }),

/***/ "./app/dashboards/power-meter/power-meter.component.ts":
/*!*************************************************************!*\
  !*** ./app/dashboards/power-meter/power-meter.component.ts ***!
  \*************************************************************/
/*! exports provided: PowerMeterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PowerMeterComponent", function() { return PowerMeterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");



let PowerMeterComponent = class PowerMeterComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.pageName = 'Meter Report';
        //0 = daily, 1 = monthly, 2 = custom
        this.reportType = null;
        //0 = electrical, 1 = water
        this.serviceType = null;
        this.meters = [
            'DB/SAMPLE 01',
            'DB/SAMPLE 02',
            'DB/SAMPLE 03',
            'DB/SAMPLE 04',
            'DB/SAMPLE 05',
            'DB/SAMPLE 06',
            'DB/SAMPLE 07',
            'DB/SAMPLE 08',
            'DB/SAMPLE 09',
            'DB/SAMPLE 10',
            'DB/SAMPLE 11',
            'DB/SAMPLE 12',
            'DB/SAMPLE 14',
            'DB/SAMPLE 15',
            'DB/SAMPLE 16',
            'DB/SAMPLE 17',
            'DB/SAMPLE 18',
            'DB/SAMPLE 19',
            'DB/SAMPLE 20',
            'DB/SAMPLE 21',
            'DB/SAMPLE 22'
        ];
    }
    ngOnInit() {
        this.headerService.setItem(this.pageName);
        this.headerService.setBoardLevel(2);
        this.reportType = 0;
        this.serviceType = 0;
        // this.meterDailySource = meterDaily;
        this.meterDailySource =
            {
                "chart": {
                    "caption": "",
                    "placeholder": "",
                    "subCaption": "",
                    "xAxisName": "Days of July, 2021",
                    "yAxisName": "Consumption (kWh)",
                    "baseFont": "Poppins",
                    "loadMessage": "",
                    "canvasBaseColor": "#ffffff",
                    "canvasBaseDepth": 4,
                    "showCanvasBg": false,
                    "baseFontColor": "#ffffff",
                    "baseFontSize": 14,
                    "theme": "carbon",
                    "xAxisNameFontColor": "#ffffff",
                    "xAxisNameFontSize": 14,
                    "xAxisNameFontBold": false,
                    "yAxisNameFontColor": "#ffffff",
                    "yAxisNameFontSize": 14,
                    "yAxisNameFontBold": false,
                    "palettecolors": "#007bff,#29c3be",
                    "use3DLighting": 0,
                    "bgColor": "#293946",
                    "bgAlpha": 100,
                    "exportenabled": 1,
                    "exportformats": "JPG=Export as Image|PDF=Export as PDF",
                    "exportFileName": "Change In Energy Consumption",
                    "toolbarButtonColor": "#455f73",
                    "toolbarButtonScale": 1.5
                },
                "categories": [
                    {
                        "category": [
                            {
                                "label": "1"
                            },
                            {
                                "label": "2"
                            },
                            {
                                "label": "3"
                            },
                            {
                                "label": "4"
                            },
                            {
                                "label": "5"
                            },
                            {
                                "label": "6"
                            },
                            {
                                "label": "7"
                            },
                            {
                                "label": "8"
                            },
                            {
                                "label": "9"
                            },
                            {
                                "label": "10"
                            },
                            {
                                "label": "11"
                            },
                            {
                                "label": "12"
                            },
                            {
                                "label": "13"
                            },
                            {
                                "label": "14"
                            },
                            {
                                "label": "15"
                            },
                            {
                                "label": "16"
                            },
                            {
                                "label": "17"
                            },
                            {
                                "label": "18"
                            },
                            {
                                "label": "19"
                            },
                            {
                                "label": "20"
                            },
                            {
                                "label": "21"
                            },
                            {
                                "label": "22"
                            },
                            {
                                "label": "23"
                            },
                            {
                                "label": "24"
                            },
                            {
                                "label": "25"
                            },
                            {
                                "label": "26"
                            },
                            {
                                "label": "27"
                            },
                            {
                                "label": "28"
                            },
                            {
                                "label": "29"
                            },
                            {
                                "label": "30"
                            },
                            {
                                "label": "31"
                            }
                        ]
                    }
                ],
                "dataset": [
                    {
                        "seriesname": "DB/SAMPLE 02",
                        "data": [
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "150"
                            }
                        ]
                    },
                    {
                        "seriesname": "DB/SAMPLE 03",
                        "data": [
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "105"
                            }
                        ]
                    }
                ]
            };
        this.reportType = 1;
        this.serviceType = 1;
        // this.meterMonthlySource = meterMonthly;
        this.meterMonthlySource =
            {
                "chart": {
                    "caption": "",
                    "placeholder": "",
                    "subCaption": "",
                    "xAxisName": "Months of 2021",
                    "yAxisName": "Consumption (kWh)",
                    "baseFont": "Poppins",
                    "loadMessage": "",
                    "canvasBaseColor": "#ffffff",
                    "canvasBaseDepth": 4,
                    "showCanvasBg": false,
                    "baseFontColor": "#ffffff",
                    "baseFontSize": 14,
                    "theme": "carbon",
                    "xAxisNameFontColor": "#ffffff",
                    "xAxisNameFontSize": 14,
                    "xAxisNameFontBold": false,
                    "yAxisNameFontColor": "#ffffff",
                    "yAxisNameFontSize": 14,
                    "yAxisNameFontBold": false,
                    "palettecolors": "#007bff,#29c3be",
                    "use3DLighting": 0,
                    "bgColor": "#293946",
                    "bgAlpha": 100,
                    "exportenabled": 1,
                    "exportformats": "JPG=Export as Image|PDF=Export as PDF",
                    "exportFileName": "Change In Energy Consumption",
                    "toolbarButtonColor": "#455f73",
                    "toolbarButtonScale": 1.5
                },
                "categories": [
                    {
                        "category": [
                            {
                                "label": "January"
                            },
                            {
                                "label": "February"
                            },
                            {
                                "label": "March"
                            },
                            {
                                "label": "April"
                            },
                            {
                                "label": "May"
                            },
                            {
                                "label": "June"
                            },
                            {
                                "label": "July"
                            },
                            {
                                "label": "August"
                            },
                            {
                                "label": "September"
                            },
                            {
                                "label": "October"
                            },
                            {
                                "label": "November"
                            },
                            {
                                "label": "December"
                            }
                        ]
                    }
                ],
                "dataset": [
                    {
                        "seriesname": "DB/SAMPLE 02",
                        "data": [
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            },
                            {
                                "value": "150"
                            },
                            {
                                "value": "100"
                            },
                            {
                                "value": "115"
                            },
                            {
                                "value": "125"
                            }
                        ]
                    },
                    {
                        "seriesname": "DB/SAMPLE 03",
                        "data": [
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            },
                            {
                                "value": "190"
                            },
                            {
                                "value": "220"
                            },
                            {
                                "value": "215"
                            },
                            {
                                "value": "105"
                            }
                        ]
                    }
                ]
            };
    }
    setReportType(value) {
        this.reportType = value;
    }
    setServiceType(value) {
        this.serviceType = value;
    }
    isChecked(index) {
        const items = [1, 2];
        return items.includes(index);
    }
};
PowerMeterComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] }
];
PowerMeterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-power-meter',
        template: __webpack_require__(/*! raw-loader!./power-meter.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/power-meter/power-meter.component.html"),
        styles: [__webpack_require__(/*! ./power-meter.component.scss */ "./app/dashboards/power-meter/power-meter.component.scss")]
    })
], PowerMeterComponent);



/***/ }),

/***/ "./app/dashboards/reports-dashboard/reports-dashboard.component.scss":
/*!***************************************************************************!*\
  !*** ./app/dashboards/reports-dashboard/reports-dashboard.component.scss ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvcmVwb3J0cy1kYXNoYm9hcmQvcmVwb3J0cy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/dashboards/reports-dashboard/reports-dashboard.component.ts":
/*!*************************************************************************!*\
  !*** ./app/dashboards/reports-dashboard/reports-dashboard.component.ts ***!
  \*************************************************************************/
/*! exports provided: ReportsDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportsDashboardComponent", function() { return ReportsDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");



let ReportsDashboardComponent = class ReportsDashboardComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.headerService.setItem('Nanyang Technological University');
        this.headerService.setBoardLevel(1);
    }
    ngOnInit() { }
};
ReportsDashboardComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] }
];
ReportsDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-reports-dashboard',
        template: __webpack_require__(/*! raw-loader!./reports-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/reports-dashboard/reports-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./reports-dashboard.component.scss */ "./app/dashboards/reports-dashboard/reports-dashboard.component.scss")]
    })
], ReportsDashboardComponent);



/***/ }),

/***/ "./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.scss":
/*!*******************************************************************************************!*\
  !*** ./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.scss ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header-max-height {\n  max-height: 54px;\n}\n\n.input-date {\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n  display: flex;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9zaXRlLWVsZWN0cmljYWwtZGFzaGJvYXJkL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXGRhc2hib2FyZHNcXHNpdGUtZWxlY3RyaWNhbC1kYXNoYm9hcmRcXHNpdGUtZWxlY3RyaWNhbC1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvc2l0ZS1lbGVjdHJpY2FsLWRhc2hib2FyZC9zaXRlLWVsZWN0cmljYWwtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7QUNDRjs7QURHQTtFQUNFLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvc2l0ZS1lbGVjdHJpY2FsLWRhc2hib2FyZC9zaXRlLWVsZWN0cmljYWwtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaGVhZGVyLW1heC1oZWlnaHQge1xyXG4gIG1heC1oZWlnaHQ6IDU0cHg7XHJcbn1cclxuXHJcblxyXG4uaW5wdXQtZGF0ZXtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxufSIsIi5jYXJkLWhlYWRlci1tYXgtaGVpZ2h0IHtcbiAgbWF4LWhlaWdodDogNTRweDtcbn1cblxuLmlucHV0LWRhdGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZGlzcGxheTogZmxleDtcbn0iXX0= */"

/***/ }),

/***/ "./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.ts":
/*!*****************************************************************************************!*\
  !*** ./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: SiteElectricalDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SiteElectricalDashboardComponent", function() { return SiteElectricalDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _services_http_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");
















let SiteElectricalDashboardComponent = class SiteElectricalDashboardComponent {
    constructor(headerService, dataService, configs, dateService, initialService, datePipe, route, ltDashboardService) {
        this.headerService = headerService;
        this.dataService = dataService;
        this.configs = configs;
        this.dateService = dateService;
        this.initialService = initialService;
        this.datePipe = datePipe;
        this.route = route;
        this.ltDashboardService = ltDashboardService;
        // 0 = overview, 1 = equipment breakdown, 3 = reports
        this.tabIndex = 0;
        this.subscriptions = [];
        // 0 = week, 1 = month, 2 = year, 3 = 5 years
        this.trendLogTabIndex = 0;
        this.dailyConsumptionData = {};
        this.trendLogData = {};
        this.equipDistribution = {};
        this.loaderArray = [];
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"];
        this.isDone = {};
        this.rows = [];
        this.columns = [
            { name: 'Category', key: 'category' },
            { name: 'Building', key: 'building' },
            { name: 'Total Number of Meters', key: 'noOfMeters' },
            { name: 'Total Consumption (kWh)', key: 'consumption' }
        ];
        this._startDateTrendLog = {
            start: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._mapArrayTrendIndex = src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_15__["LIST_DAY_CONSUMPTION"];
        this._isFirstInit = true;
        this._maxDate = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        this._isYear = null;
        this._isMonth = null;
        this._reload = true;
        this._todayConsumptionDate = {
            start: new Date(),
            end: new Date()
        };
        this._maxTodayConsumptionDate = new Date();
        this._minTodayConsumptionDate = new Date((new Date()).setDate(new Date().getDate() - 7));
        this.onChangeTodayConsumption = () => {
            this._todayConsumptionDate.end = this._todayConsumptionDate.start;
            this.todayDateRange = this._todayConsumptionDate;
            this.getTrendDaylyData('_todayConsumptionDate');
        };
        this.dataService.get(this.configs.endPoints.site, { siteId: 1 }).subscribe(data => {
            this.headerService.setItem(data.siteName);
        }, error => {
            this.headerService.setItem('Site Name');
        });
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        }
        this.todayDateRange = this.dateService.getToday(this.today);
        this.thisWeekDateRange = this.dateService.getLastDaysRange(this.today, 7, 'days');
        this.thisMonthRange = this.dateService.getLastDaysRange(this.today, 30, 'days');
        this.thisYearRange = this.dateService.getLastDaysRange(this.today, 12, 'months');
        this.lastFiveYearRange = this.dateService.getLastFiveYear(this.today);
        this.equipmentDistRange = this.dateService.thisMonthUpToNow(this.today);
        this.overollConsumptionRange = this.dateService.thisMonthUpToNow(this.today);
        this.equipmentBreakdownDateRange = this.dateService.getTodayUpToNow(this.today);
        this.dataService.serviceTypeId.subscribe(data => {
            this.serviceTypeId = data;
        });
        this.route.data.subscribe(data => {
            this.headerService.electricalDashboardType.next(src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_12__["DashboardType"].LOW_TENSION);
        });
    }
    ngOnInit() {
        this.headerService.setBoardLevel(0);
        this.dataService.setserviceTypeId(1);
        this.getOveralConsumptionData();
        this.getTrendDaylyData();
        this.initialService.navigationStore.buildingCategories$.subscribe(res => {
            if (res !== null && res.length !== 0) {
                this.getEqDistribution();
            }
        });
        this.onChangeTrendLogByDate();
    }
    setTabIndex(index) {
        this.tabIndex = index;
        if (index === 1 && this.rows.length === 0) {
            this.getEquipmentBreakDown();
        }
    }
    plotEqDistribution(data) {
        let processedData = [];
        let totalValue = 0;
        data.forEach(element => {
            totalValue += element.data[0].value;
        });
        data.forEach(element => {
            let percentage = (element.data[0].value / totalValue * 100).toFixed(2) + ' %';
            processedData.push({
                displayValue: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["chartTitle"])(element.name, element.data[0].value, 'kWh', percentage, true),
                label: element.name,
                value: element.data[0].value
            });
        });
        let chart = Object.assign({}, this.configs.chartConfigurations["eq-distribution"]);
        this.equipDistribution = {
            chart: chart,
            data: processedData
        };
    }
    getEqDistribution() {
        this.isDone.equipDistribution = false;
        this.ltDashboardService.getSiteEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].ELECTRICAL, this.equipmentDistRange.start, this.equipmentDistRange.end, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_2__["default"].SITE_ELECTRICAL, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].BUILDING_CATEGORY).then(res => {
            this.equipDistribution = res;
            this.isDone.equipDistribution = true;
        });
    }
    getDate(date) {
        const month = new Date(date).getMonth() + 1;
        const day = new Date(date).getDate();
        const year = new Date(date).getFullYear();
        return `${year}/${month}/${day}`;
    }
    onChangeTrendLogByDate(isInit = false) {
        const { month, date, year, target } = this._mapArrayTrendIndex[this.trendLogTabIndex];
        this._isYear = year;
        this._isMonth = month;
        const { start, end } = this._startDateTrendLog;
        let newStart = new Date(start);
        let newEnd = new Date(end);
        if (isInit) {
            this._isFirstInit = false;
        }
        if (this._isFirstInit) {
            const currentDate = new Date(start);
            let newDate = this._maxDate.getDate();
            let newMonth = this._maxDate.getMonth();
            if (year || month) {
                newDate = 1;
                if (year) {
                    newMonth = 0;
                }
            }
            currentDate.setDate(newDate);
            currentDate.setMonth(newMonth);
            newEnd.setDate(newDate);
            newEnd.setMonth(newMonth);
            newStart = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["dateGapGenerator"])(currentDate, month || date || year, target, 'minus');
            this._startDateTrendLog.end = newEnd;
            this._startDateTrendLog.start = newEnd;
        }
        else {
            if (date) {
                newStart.setDate(end.getDate() - date);
            }
            else if (month) {
                newStart.setMonth(end.getMonth() - month);
                newStart.setDate(1);
            }
            else if (year) {
                newStart.setFullYear(end.getFullYear() - year);
                newStart.setMonth(0);
            }
        }
        if (date) {
            newEnd = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["dateGapGenerator"])(newEnd, 1, 'day');
        }
        this.getTrendLogs(this.trendLogTabIndex + 1, this.getDate(newStart), this.getDate(newEnd));
        this.resetTime();
    }
    setTrendLogData(index) {
        this.trendLogTabIndex = index;
        this.onChangeTrendLogByDate();
    }
    // setTrendLogData(index: number) {
    //   switch (index) {
    //     case 0: {
    //       this.trendLogTabIndex = 0;
    //       this.getTrendLogs(1,
    //         this.datePipe.transform(
    //           this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd')),
    //         this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 1: {
    //       this.trendLogTabIndex = 1;
    //       this.getTrendLogs(2,
    //         this.datePipe.transform(this.thisMonthRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisMonthRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 2: {
    //       this.trendLogTabIndex = 2;
    //       this.thisYearRange.start.setDate(1);
    //       this.thisYearRange.end.setDate(1);
    //       this.getTrendLogs(3,
    //         this.datePipe.transform(this.thisYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisYearRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 3: {
    //       this.trendLogTabIndex = 3;
    //       this.getTrendLogs(4,
    //         this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //   }
    // }
    getOveralConsumptionData() {
        this.isDone.overollConsumptionData = false;
        this.ltDashboardService.getOverallConsumptionSite(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].ELECTRICAL, this.overollConsumptionRange.start, this.overollConsumptionRange.end).then(res => {
            this.overollConsumptionData = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["fixDecimalNumPrecision"])(res, 2);
            this.isDone.overollConsumptionData = true;
        });
    }
    generateTrendDaylyData() {
        var time0 = new Date().setHours(0, 0, 0, 0);
        let labelAndValue = [];
        for (let i = 0; i < 48; i++) {
            labelAndValue.push({ "label": this.datePipe.transform(time0, 'HH:mm'), "value": null });
            time0 = new Date(time0).setTime(new Date(time0).getTime() + 30 * 60 * 1000);
        }
        let data = [
            {
                "name": "Nanyang Technological University",
                "data": labelAndValue
            }
        ];
        return data;
    }
    getTrendDaylyData(dateKey = '_todayConsumptionDate') {
        this.isDone.dailyConsumptionData = false;
        this.dailyConsumptionData = this.ltDashboardService.getTodaysConsumptionEmptyChart(src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_2__["default"].SITE_ELECTRICAL);
        this.ltDashboardService.getSiteTodaysConsumption(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].ELECTRICAL, this[dateKey].start, this[dateKey].end, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_2__["default"].SITE_ELECTRICAL).then(res => {
            this.dailyConsumptionData = res;
            this.isDone.dailyConsumptionData = true;
            for (let i = 0; i < this.dailyConsumptionData.data.length; i++) {
                const item = this.dailyConsumptionData.data[i];
                const newValue = item.value / 1000;
                this.dailyConsumptionData.data[i] = Object.assign({}, item, { value: item.value ? newValue : null, displayValue: item.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_13__["moneyFormat"])((newValue || 0).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_15__["DECIMAL_MAP"].electricalTodayConsumption)) : null, toolText: "Time: $label <br/> Consumption: $displayValue kWh" });
            }
            this.dailyConsumptionData.chart = Object.assign({}, this.dailyConsumptionData.chart, { formatNumberScale: 0, valuePosition: "outside", paletteColors: [this.colorMap.electric.secondary] });
        });
    }
    getTrendLogs(interval, from, to) {
        // TODO: load empty chart chart
        // this.trendLogData = this.ltDashboardService.getEmptyConsumptionChart(ServiceType.ELECTRICAL, interval);
        this.isDone.trendLogData = false;
        this.ltDashboardService.getSiteConsumptionChart(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].ELECTRICAL, from, to, interval).then(res => {
            this.trendLogData = res;
            this.isDone.trendLogData = true;
            this.trendLogData.chart = Object.assign({}, this.trendLogData.chart, { formatNumberScale: 0, valuefontSize: 16, paletteColors: [this.colorMap.electric.secondary] });
        });
    }
    getEquipmentBreakDown() {
        this.tableLoading = true;
        this.ltDashboardService.getSiteEquipmentBreakdown(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].ELECTRICAL, this.equipmentBreakdownDateRange).then(res => {
            this.rows = res;
            this.tableLoading = false;
        });
    }
    loaderSwitcher() {
        for (let i = 0; i < this.loaderArray.length; i++) {
            if (this.loaderArray[i]) {
                this.loaderArray[i] = !this.loaderArray[i];
                break;
            }
        }
        let load = true;
        this.loaderArray.forEach((data) => {
            if (data) {
                load = true;
                return;
            }
            else {
                load = false;
            }
        });
        if (!load) {
            this.tableLoading = false;
        }
    }
    overallConsumptionChanged() {
        this.resetTime();
        this.getOveralConsumptionData();
    }
    equiDistributionChanged() {
        this.resetTime();
        this.getEqDistribution();
    }
    unsubscribeCalls() {
        this.subscriptions.forEach(subscription => {
            subscription.unsubscribe();
        });
    }
    ngOnDestroy() {
        this.unsubscribeCalls();
    }
    resetTime() {
        setTimeout(() => this._reload = false);
        setTimeout(() => this._reload = true);
    }
};
SiteElectricalDashboardComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_6__["HeaderService"] },
    { type: _services_http_service__WEBPACK_IMPORTED_MODULE_4__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_7__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__["ActivatedRoute"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_3__["LtDashboardService"] }
];
SiteElectricalDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"])({
        selector: 'app-site-electrical-dashboard',
        template: __webpack_require__(/*! raw-loader!./site-electrical-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./site-electrical-dashboard.component.scss */ "./app/dashboards/site-electrical-dashboard/site-electrical-dashboard.component.scss")]
    })
], SiteElectricalDashboardComponent);



/***/ }),

/***/ "./app/dashboards/site-water-dashboard/site-water-dashboard.component.scss":
/*!*********************************************************************************!*\
  !*** ./app/dashboards/site-water-dashboard/site-water-dashboard.component.scss ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header-max-height {\n  max-height: 54px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy9zaXRlLXdhdGVyLWRhc2hib2FyZC9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFxkYXNoYm9hcmRzXFxzaXRlLXdhdGVyLWRhc2hib2FyZFxcc2l0ZS13YXRlci1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvc2l0ZS13YXRlci1kYXNoYm9hcmQvc2l0ZS13YXRlci1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkcy9zaXRlLXdhdGVyLWRhc2hib2FyZC9zaXRlLXdhdGVyLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWhlYWRlci1tYXgtaGVpZ2h0IHtcclxuICBtYXgtaGVpZ2h0OiA1NHB4O1xyXG59XHJcblxyXG4iLCIuY2FyZC1oZWFkZXItbWF4LWhlaWdodCB7XG4gIG1heC1oZWlnaHQ6IDU0cHg7XG59Il19 */"

/***/ }),

/***/ "./app/dashboards/site-water-dashboard/site-water-dashboard.component.ts":
/*!*******************************************************************************!*\
  !*** ./app/dashboards/site-water-dashboard/site-water-dashboard.component.ts ***!
  \*******************************************************************************/
/*! exports provided: SiteWaterDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SiteWaterDashboardComponent", function() { return SiteWaterDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _services_http_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");
















let SiteWaterDashboardComponent = class SiteWaterDashboardComponent {
    constructor(headerService, dataService, configs, datePipe, dateService, initialService, route, ltDashboardService) {
        this.headerService = headerService;
        this.dataService = dataService;
        this.configs = configs;
        this.datePipe = datePipe;
        this.dateService = dateService;
        this.initialService = initialService;
        this.route = route;
        this.ltDashboardService = ltDashboardService;
        this.tabIndex = 0;
        this.subscriptions = [];
        // 0 = week, 1 = month, 2 = year, 3 = 5 years
        this.trendLogTabIndex = 0;
        this.dailyConsumptionData = {};
        this.trendLogData = {};
        this.equipDistribution = {};
        this.loaderArray = [];
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_14__["ChartColorMap"];
        this.rows = [];
        this.columns = [
            { name: 'Category', key: 'category' },
            { name: 'Building', key: 'building' },
            { name: 'Total Number of Meters', key: 'noOfMeters' },
            { name: 'Total Consumption (m<sup>3</sup>)', key: 'consumption' }
        ];
        this.tableLoading = true;
        this._startDateTrendLog = {
            start: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._mapArrayTrendIndex = src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_15__["LIST_DAY_CONSUMPTION"];
        this._isFirstInit = true;
        this._maxDate = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        this._isYear = null;
        this._isMonth = null;
        this.isDone = {};
        this._reload = true;
        this._todayConsumptionDate = {
            start: new Date(),
            end: new Date()
        };
        this._maxTodayConsumptionDate = new Date();
        this._minTodayConsumptionDate = new Date((new Date()).setDate(new Date().getDate() - 7));
        this.onChangeTodayConsumption = () => {
            this._todayConsumptionDate.end = this._todayConsumptionDate.start;
            this.todayDateRange = this._todayConsumptionDate;
            this.getTrendDaylyData('_todayConsumptionDate');
        };
        this.dataService.get(this.configs.endPoints.site, { siteId: 1 }).subscribe(data => {
            this.headerService.setItem(data.siteName);
        }, error => {
            this.headerService.setItem('Site Name');
        });
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        }
        this.todayDateRange = this.dateService.getToday(this.today);
        this.thisWeekDateRange = this.dateService.getLastDaysRange(this.today, 7, 'days');
        this.thisMonthRange = this.dateService.getLastDaysRange(this.today, 30, 'days');
        this.thisYearRange = this.dateService.getLastDaysRange(this.today, 12, 'months');
        this.lastFiveYearRange = this.dateService.getLastFiveYear(this.today);
        this.overollConsumptionRange = this.dateService.thisMonthUpToNow(this.today);
        this.equipmentDistRange = this.dateService.thisMonthUpToNow(this.today);
        this.equipmentBreakdownDateRange = this.dateService.getTodayUpToNow(this.today);
        this.dataService.serviceTypeId.subscribe(data => {
            this.serviceTypeId = data;
        });
        this.route.data.subscribe(data => {
            this.headerService.electricalDashboardType.next(src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_10__["DashboardType"].WATER);
        });
    }
    ngOnInit() {
        this.headerService.setBoardLevel(1);
        this.dataService.setserviceTypeId(2);
        this.getOverollConsumptionData();
        this.getTrendDaylyData();
        this.initialService.navigationStore.buildingCategories$.subscribe(res => {
            if (res !== null && res.length !== 0) {
                this.getEqDistribution();
            }
        });
        this.onChangeTrendLogByDate();
    }
    setTabIndex(index) {
        this.tabIndex = index;
        if (index === 1 && this.rows.length === 0) {
            this.getEquipmentBreakDown();
        }
    }
    generateTrendDaylyData() {
        var time0 = new Date().setHours(0, 0, 0, 0);
        let labelAndValue = [];
        for (let i = 0; i < 48; i++) {
            labelAndValue.push({ "label": this.datePipe.transform(time0, 'HH:mm'), "value": null });
            time0 = new Date(time0).setTime(new Date(time0).getTime() + 30 * 60 * 1000);
        }
        let data = [
            {
                "name": "Nanyang Technological University",
                "data": labelAndValue
            }
        ];
        return data;
    }
    getTrendDaylyData(dateKey = '_todayConsumptionDate') {
        this.isDone.dailyConsumptionData = false;
        this.dailyConsumptionData = this.ltDashboardService.getTodaysConsumptionEmptyChart(src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_13__["default"].SITE_WATER);
        this.ltDashboardService.getSiteTodaysConsumption(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].MAIN_WATER, this[dateKey].start, this[dateKey].end, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_13__["default"].SITE_WATER).then(res => {
            this.dailyConsumptionData = res;
            this.dailyConsumptionData.chart["paletteColors"] = [this.colorMap.water.secondary];
            this.isDone.dailyConsumptionData = true;
        });
    }
    getEqDistribution() {
        this.isDone.equipDistribution = false;
        this.ltDashboardService.getSiteEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].MAIN_WATER, this.equipmentDistRange.start, this.equipmentDistRange.end, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_13__["default"].SITE_WATER, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].BUILDING_CATEGORY).then(res => {
            this.equipDistribution = res;
            this.isDone.equipDistribution = true;
        });
    }
    errHandleEqDist() {
        let chart = Object.assign({}, this.configs.chartConfigurations["eq-distribution"]);
        this.equipDistribution = {
            chart: chart,
            data: {}
        };
    }
    getDate(date) {
        const month = new Date(date).getMonth() + 1;
        const day = new Date(date).getDate();
        const year = new Date(date).getFullYear();
        return `${year}/${month}/${day}`;
    }
    onChangeTrendLogByDate(isInit = false) {
        const { month, date, year, target } = this._mapArrayTrendIndex[this.trendLogTabIndex];
        this._isYear = year;
        this._isMonth = month;
        const { start, end } = this._startDateTrendLog;
        let newStart = new Date(start);
        let newEnd = new Date(end);
        if (isInit) {
            this._isFirstInit = false;
        }
        if (this._isFirstInit) {
            const currentDate = new Date(start);
            let newDate = this._maxDate.getDate();
            let newMonth = this._maxDate.getMonth();
            if (year || month) {
                newDate = 1;
                if (year) {
                    newMonth = 0;
                }
            }
            currentDate.setDate(newDate);
            currentDate.setMonth(newMonth);
            newEnd.setDate(newDate);
            newEnd.setMonth(newMonth);
            newStart = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["dateGapGenerator"])(currentDate, month || date || year, target, 'minus');
            this._startDateTrendLog.end = newEnd;
            this._startDateTrendLog.start = newEnd;
        }
        else {
            if (date) {
                newStart.setDate(end.getDate() - date);
            }
            else if (month) {
                newStart.setMonth(end.getMonth() - month);
                newStart.setDate(1);
            }
            else if (year) {
                newStart.setFullYear(end.getFullYear() - year);
                newStart.setMonth(0);
            }
        }
        if (date) {
            newEnd = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["dateGapGenerator"])(newEnd, 1, 'day');
        }
        this.getTrendLogs(this.trendLogTabIndex + 1, this.getDate(newStart), this.getDate(newEnd));
        this.resetTime();
    }
    setTrendLogData(index) {
        this.trendLogTabIndex = index;
        this.onChangeTrendLogByDate();
    }
    getEquipmentBreakDown() {
        this.tableLoading = true;
        this.ltDashboardService.getSiteEquipmentBreakdown(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].MAIN_WATER, this.equipmentBreakdownDateRange).then(res => {
            this.rows = res;
            this.tableLoading = false;
        });
    }
    loaderSwitcher() {
        for (let i = 0; i < this.loaderArray.length; i++) {
            if (this.loaderArray[i]) {
                this.loaderArray[i] = !this.loaderArray[i];
                break;
            }
        }
        let load = true;
        this.loaderArray.forEach((data) => {
            if (data) {
                load = true;
                return;
            }
            else {
                load = false;
            }
        });
        if (!load) {
            this.tableLoading = false;
        }
    }
    generateTrendLogsForMonth() {
        var numberOfDays = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate();
        let labelAndValues = [];
        for (let num = 1; num <= numberOfDays; num++) {
            labelAndValues.push({ "label": num.toString(), "value": null });
        }
        let data = [
            {
                "name": "Nanyang Technological University",
                "data": labelAndValues
            }
        ];
        return data;
    }
    generateTrendLogsForYears() {
        let labelAndValues = [];
        for (let i = 0; i < 12; i++) {
            labelAndValues.push({ "label": this.datePipe.transform(new Date().setMonth(i), 'MMM'), "value": null });
        }
        let data = [
            {
                "name": "Nanyang Technological University",
                "data": labelAndValues
            }
        ];
        return data;
    }
    generateTrendLogsFor5Year() {
        let labelAndValue = [];
        for (let i = 4; i >= 0; i--) {
            labelAndValue.push({ "label": this.datePipe.transform(new Date().setFullYear(new Date().getFullYear() - i), 'yyyy'), "value": null });
        }
        let data = [
            {
                "name": "Nanyang Technological University",
                "data": labelAndValue
            }
        ];
        return data;
    }
    getTrendLogs(interval, from, to) {
        // TODO: load empty chart chart
        // this.trendLogData = this.ltDashboardService.getEmptyConsumptionChart(ServiceType.WATER, interval);
        this.isDone.trendLogData = false;
        this.ltDashboardService.getSiteConsumptionChart(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].MAIN_WATER, from, to, interval).then(res => {
            this.trendLogData = res;
            this.trendLogData.chart["paletteColors"] = [this.colorMap.water.secondary];
            this.isDone.trendLogData = true;
        });
    }
    getOverollConsumptionData() {
        this.isDone.overollConsumptionData = false;
        this.ltDashboardService.getOverallConsumptionSite(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].MAIN_WATER, this.overollConsumptionRange.start, this.overollConsumptionRange.end)
            .then(res => {
            this.overollConsumptionData = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(res, 2);
            this.isDone.overollConsumptionData = true;
        });
    }
    equiDistributionChanged() {
        this.resetTime();
        this.getEqDistribution();
    }
    overollConsuptionChanged() {
        this.getOverollConsumptionData();
        this.resetTime();
    }
    unsubscribeCalls() {
        this.subscriptions.forEach(subscription => {
            subscription.unsubscribe();
        });
    }
    ngOnDestroy() {
        this.unsubscribeCalls();
    }
    resetTime() {
        setTimeout(() => this._reload = false);
        setTimeout(() => this._reload = true);
    }
};
SiteWaterDashboardComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_5__["HeaderService"] },
    { type: _services_http_service__WEBPACK_IMPORTED_MODULE_3__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_7__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_11__["ActivatedRoute"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["LtDashboardService"] }
];
SiteWaterDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-site-water-dashboard',
        template: __webpack_require__(/*! raw-loader!./site-water-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/site-water-dashboard/site-water-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./site-water-dashboard.component.scss */ "./app/dashboards/site-water-dashboard/site-water-dashboard.component.scss")]
    })
], SiteWaterDashboardComponent);



/***/ }),

/***/ "./app/dashboards/solar/solar.component.scss":
/*!***************************************************!*\
  !*** ./app/dashboards/solar/solar.component.scss ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvc29sYXIvc29sYXIuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/dashboards/solar/solar.component.ts":
/*!*************************************************!*\
  !*** ./app/dashboards/solar/solar.component.ts ***!
  \*************************************************/
/*! exports provided: SolarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SolarComponent", function() { return SolarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");



let SolarComponent = class SolarComponent {
    constructor(headerService) {
        this.headerService = headerService;
    }
    ngOnInit() {
        this.headerService.setItem('Nanyang Technological University');
        this.headerService.setBoardLevel(1);
    }
};
SolarComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] }
];
SolarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-solar',
        template: __webpack_require__(/*! raw-loader!./solar.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/solar/solar.component.html"),
        styles: [__webpack_require__(/*! ./solar.component.scss */ "./app/dashboards/solar/solar.component.scss")]
    })
], SolarComponent);



/***/ }),

/***/ "./app/dashboards/water-dashboard/water-dashboard.component.scss":
/*!***********************************************************************!*\
  !*** ./app/dashboards/water-dashboard/water-dashboard.component.scss ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".card-header-max-height {\n  max-height: 54px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkcy93YXRlci1kYXNoYm9hcmQvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcZGFzaGJvYXJkc1xcd2F0ZXItZGFzaGJvYXJkXFx3YXRlci1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZHMvd2F0ZXItZGFzaGJvYXJkL3dhdGVyLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmRzL3dhdGVyLWRhc2hib2FyZC93YXRlci1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXItbWF4LWhlaWdodCB7XHJcbiAgbWF4LWhlaWdodDogNTRweDtcclxufVxyXG5cclxuIiwiLmNhcmQtaGVhZGVyLW1heC1oZWlnaHQge1xuICBtYXgtaGVpZ2h0OiA1NHB4O1xufSJdfQ== */"

/***/ }),

/***/ "./app/dashboards/water-dashboard/water-dashboard.component.ts":
/*!*********************************************************************!*\
  !*** ./app/dashboards/water-dashboard/water-dashboard.component.ts ***!
  \*********************************************************************/
/*! exports provided: WaterDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaterDashboardComponent", function() { return WaterDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _services_meter_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../services/meter.service */ "./app/services/meter.service.ts");
/* harmony import */ var src_app_services_equipment_breakdown_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/services/equipment-breakdown.service */ "./app/services/equipment-breakdown.service.ts");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! save-svg-as-png */ "../node_modules/save-svg-as-png/lib/saveSvgAsPng.js");
/* harmony import */ var save_svg_as_png__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/enums/DustributionChartType */ "./enums/DustributionChartType.ts");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");




















let WaterDashboardComponent = class WaterDashboardComponent {
    constructor(headerService, thousandSeparator, configs, dateService, route, datePipe, initialService, meterService, equipmentBreakdownService, router, ltDashboardService) {
        this.headerService = headerService;
        this.thousandSeparator = thousandSeparator;
        this.configs = configs;
        this.dateService = dateService;
        this.route = route;
        this.datePipe = datePipe;
        this.initialService = initialService;
        this.meterService = meterService;
        this.equipmentBreakdownService = equipmentBreakdownService;
        this.router = router;
        this.ltDashboardService = ltDashboardService;
        this.tabIndex = 0;
        this.trendLogTabIndex = 0;
        this.dailyConsumptionData = { chart: {} };
        this.trendLogData = {};
        this.equipDistribution = {};
        this.equipDistributionLg = {};
        this.equipmentBreakdownData = null;
        this.serviceTypeId = 2;
        this.squareMeterPointerDescription = 'EUI<br> (GFA = N/A m2)';
        this.FileDownloadIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_12__["faDownload"];
        this.buildingList = [];
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_18__["ChartColorMap"];
        this.rows = [];
        this.columns = [
            { name: 'No.', key: 'meterId' },
            { name: 'Level', key: 'level' },
            { name: 'Equipment Type', key: 'eqType' },
            { name: 'Equipment Code', key: 'eqCode' },
            { name: 'Consumption ( m<sup>3</sup> )', key: 'value' }
        ];
        this.tableLoading = true;
        this.appOnInit = () => {
            const { tabkey = 0 } = this.route.snapshot.queryParams || {};
            this.tabIndex = tabkey;
            this.getBuildingName((isDone) => {
                if (tabkey && tabkey != 0) {
                    this.setTabIndex(tabkey);
                }
                else {
                    this.getChartDetails();
                }
            });
        };
        // getGfa() {
        //   this.ltDashboardService.getGFABuilding(ServiceType.WATER, this.buildingId).then(res=>{
        //     if (res == null || res == 0 ) {
        //       this.overallConsumptioSquareData = null;
        //       this.squareMeterPointerDescription = 'Total consumption per square meter (GFA = N/A m<sup>2</sup>)';
        //     } else {
        //       this.overallConsumptioSquareData = (this.overallConsumptioSquareData == null || this.overallConsumptioSquareData == 0)?null:this.overallConsumptioSquareData / (res);
        //       this.squareMeterPointerDescription = 'Total consumption per square meter (GFA = '+res+' m<sup>2</sup>)';
        //     }
        //   });
        // }
        this.isDone = {};
        this._startDateTrendLog = {
            start: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._mapArrayTrendIndex = src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_19__["LIST_DAY_CONSUMPTION"];
        this._isFirstInit = true;
        this._maxDate = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        this._isYear = null;
        this._isMonth = null;
        this._todayConsumptionDate = {
            start: new Date(),
            end: new Date()
        };
        this._maxTodayConsumptionDate = new Date();
        this._minTodayConsumptionDate = new Date((new Date()).setDate(new Date().getDate() - 7));
        this.onChangeTodayConsumption = () => {
            this._todayConsumptionDate.end = this._todayConsumptionDate.start;
            this.todayDateRange = this._todayConsumptionDate;
            this.getTrendDaylyData('_todayConsumptionDate');
        };
        // setTrendLogData(index: number) {
        //   switch(index) {
        //     case 0: {
        //       this.trendLogTabIndex = 0;
        //       this.getTrendLogs(
        //         Interval.Daily,
        //         this.datePipe.transform(
        //           this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd')),
        //         this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd'));
        //       break;
        //     };
        //     case 1: {
        //       this.trendLogTabIndex = 1;
        //       this.getTrendLogs(2,
        //         this.datePipe.transform(this.thisMonthRange.start, 'yyyy/MM/dd'),
        //         this.datePipe.transform(this.thisMonthRange.end, 'yyyy/MM/dd'));
        //       break;
        //     };
        //     case 2: {
        //       this.trendLogTabIndex = 2;
        //       this.thisYearRange.start.setDate(1);
        //       this.thisYearRange.end.setDate(1);
        //       this.getTrendLogs(3,
        //         this.datePipe.transform(this.thisYearRange.start, 'yyyy/MM/dd'),
        //         this.datePipe.transform(this.thisYearRange.end, 'yyyy/MM/dd'));
        //       break;
        //     };
        //     case 3: {
        //       this.trendLogTabIndex = 3;
        //       this.getTrendLogs(4,
        //         this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
        //         this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd'));
        //       break;
        //     }
        //   }
        // }
        this._reload = true;
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        }
        this.todayDateRange = this.dateService.getToday(this.today);
        this.thisWeekDateRange = this.dateService.getLastDaysRange(this.today, 7, 'days');
        this.thisMonthRange = this.dateService.getLastDaysRange(this.today, 30, 'days');
        this.thisYearRange = this.dateService.getLastDaysRange(this.today, 12, 'months');
        this.meterTreeDateRange = this.dateService.getTodayUpToNow(this.today);
        this.equipmentBreakdownDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.lastFiveYearRange = this.dateService.getLastFiveYear(this.today);
        this.eqDIstDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.eqdistlg = this.dateService.thisMonthUpToNow(this.today);
        this.weekFirst = new Date(this.today).getDate() - new Date(this.today).getDay() + 1;
        this.weekLast = this.weekFirst + 7;
        this.monthFirst = new Date(this.today.getFullYear(), this.today.getMonth(), 1);
        this.monthLast = new Date(this.today.getFullYear(), this.today.getMonth() + 1, 1);
        this.overollConsumptionRange = this.dateService.thisMonthUpToNow(this.today);
        this.route.params.subscribe(params => {
            this.trendLogTabIndex = 0;
            // this.tabIndex = 0;
            this.buildingId = parseInt(params.id);
            // this.getChartDetails();
            this.headerService.setBoardLevel(1);
            this.appOnInit();
        });
    }
    ngOnInit() {
    }
    getBuildingName(callback) {
        this.initialService.navigationStore.buildings$.subscribe(res => {
            if (res.length !== 0 && res !== null) {
                let building = this.initialService.navigationStore.getBuilding(this.buildingId);
                if (building.length !== 0 && !null) {
                    this.headerService.setItem(building[0].buildingName);
                    this.headerService.serviceType.next(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER);
                    this.buildingGroupId = building[0].buildingGroupID;
                    this.buildingGroupName = this.initialService.navigationStore.getBuildingGroupById(this.buildingGroupId)[0].description;
                    let buildingList = this.initialService.navigationStore.getBuildingsByBuildingGroup(building[0].buildingGroupID);
                    this.buildingList = [];
                    buildingList = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER));
                    buildingList.forEach(element => {
                        this.buildingList.push({ name: element.buildingName, id: element.buildingID });
                    });
                    this.selectedBuilding = this.buildingId;
                    callback(true);
                }
            }
        });
    }
    exportMeter() {
        // saveSvgAsPng(document.getElementById("meterTreeSvg"), "Meter Tree.jpeg");
        const svg = document.getElementById("meterTreeSvg");
        // const svg: any = parent.querySelector('svg'); 
        const g = svg.querySelector('g');
        g.setAttribute('transform', 'scale(.72)');
        Object(save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__["saveSvgAsPng"])(svg, "Meter Tree-" + new Date().getTime() + '.jpeg', { width: 1440 });
    }
    onEqBreakdownFilter(e) {
        this.equipmentBreakdownDateRange = e;
        this.getEqBreakdownData(this.equipmentBreakdownDateRange);
    }
    getChartDetails() {
        this.getOverallConsumption();
        this.getTrendDaylyData();
        this.onChangeTrendLogByDate();
        this.initialService.navigationStore.meterTypes$.subscribe(res => {
            if (res !== null && res.length !== 0) {
                this.getEqDistribution();
            }
        });
    }
    getEqBreakdownData(daterange) {
        this.equipmentBreakdownService.requestBuildingData(this.buildingId, null, null, null, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER, this.equipmentBreakdownDateRange.start, this.equipmentBreakdownDateRange.end).then(data => {
            this.equipmentBreakdownData = data;
            this.tableLoading = false;
        });
    }
    getMeterTreeData() {
        this.meterTreeLoading = true;
        this.meterService.getBuildingMeterTree(this.buildingId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER).then(res => {
            this.meterTreeDatas = res;
            this.meterTreeLoading = false;
        });
    }
    onBreakdownFiltered(event) {
        if (event !== null) {
            this.rows = [];
            event.forEach((row, i) => {
                const { scalledNumber, suffix, unit } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["abbreviateNumber"])(row.meter.value, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER);
                this.rows.push({
                    meterId: i + 1,
                    level: row.level.name,
                    eqType: row.eqType.name,
                    eqCode: row.eqCode.name,
                    value: scalledNumber + suffix
                    // value: this.thousandSeparator.transform(fixDecimalNumPrecision(row.meter.value, this.configs.siteConfigurations.decimalNumPrecision))
                });
            });
        }
    }
    // private getOverallConsumption() {
    //   this.ltDashboardService.getOverallConsumptionBuilding(ServiceType.WATER, this.overollConsumptionRange.start, this.overollConsumptionRange.end, this.buildingId).then(res=>{
    //     this.overollConsumptionData = fixDecimalNumPrecision(res, 2);
    //     this.getGfa();
    //   });
    // }
    get serviceType() { return _enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"]; }
    getOverallConsumption() {
        this.isDone.overollConsumptionData = false;
        this.ltDashboardService.getOverallConsumptionBuilding(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER, this.overollConsumptionRange.start, this.overollConsumptionRange.end, this.buildingId).then(res => {
            this.overollConsumptionData = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["fixDecimalNumPrecision"])(res, 2);
            this.getGfa();
            this.isDone.overollConsumptionData = true;
        });
    }
    getGfa() {
        this.isDone.overallConsumptioSquareData = false;
        this.ltDashboardService.getGFABuilding(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER, this.buildingId).then(res => {
            this.isDone.overallConsumptioSquareData = true;
            if (res == null || res == 0) {
                this.overallConsumptioSquareData = null;
                this.squareMeterPointerDescription = 'Total consumption per square meter (GFA = N/A m<sup>2</sup>)';
            }
            else {
                this.overallConsumptioSquareData = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["fixDecimalNumPrecision"])((this.overollConsumptionData == null || this.overollConsumptionData == 0) ? null : this.overollConsumptionData / (res), this.configs.siteConfigurations.decimalNumPrecision);
                this.squareMeterPointerDescription = 'Total consumption per square meter (GFA = ' + res + ' m<sup>2</sup>)';
            }
        });
    }
    getEqDistribution() {
        this.ltDashboardService.getBuildingEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER, this.eqDIstDateRange.start, this.eqDIstDateRange.end, this.buildingId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].BUILDING_WATER, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_15__["DistributionChartType"].SMALL, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES).then(res => {
            this.equipDistribution = res;
        });
    }
    getEqDistributionLg() {
        this.resetTime();
        this.ltDashboardService.getBuildingEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER, this.eqDIstDateRange.start, this.eqDIstDateRange.end, this.buildingId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].BUILDING_WATER, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_15__["DistributionChartType"].LARGE, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES).then(res => {
            this.equipDistributionLg = res;
        });
    }
    setTabIndex(index) {
        this.tabIndex = index;
        this.meterTreeDatas = null;
        if (this.tabIndex == 0) {
            this.getChartDetails();
        }
        else if (this.tabIndex == 1) {
            this.getEqBreakdownData(this.equipmentBreakdownDateRange);
        }
        else if (this.tabIndex == 2) {
            this.meterTreeDatas = null;
            this.getMeterTreeData();
        }
        else if (this.tabIndex == 3) {
            this.getEqDistributionLg();
        }
        window.history.replaceState(null, null, index != 0 ? `${window.location.pathname}?tabkey=${index}` : `${window.location.pathname}`);
    }
    getTrendDaylyData(dateKey = '_todayConsumptionDate') {
        this.isDone.dailyConsumptionData = false;
        this.dailyConsumptionData = this.ltDashboardService.getTodaysConsumptionEmptyChart(src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].BUILDING_WATER);
        this.ltDashboardService.getBuildingTodaysConsumption(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER, this[dateKey].start, this[dateKey].end, this.buildingId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].BUILDING_WATER).then(res => {
            this.dailyConsumptionData = res;
            this.dailyConsumptionData.chart["paletteColors"] = [this.colorMap.water.secondary];
            this.isDone.dailyConsumptionData = true;
        });
    }
    getTrendLogs(interval, from, to) {
        // TODO: load empty chart chart
        // this.trendLogData = this.ltDashboardService.getEmptyConsumptionChart(ServiceType.WATER, interval);
        this.isDone.trendLogData = false;
        this.ltDashboardService.getBuildingConsumptionChart(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER, from, to, this.buildingId, interval).then(res => {
            this.trendLogData = res;
            this.trendLogData.chart["paletteColors"] = [this.colorMap.water.secondary];
            this.isDone.trendLogData = true;
        });
    }
    buildingChanged(data) {
        this.rows = null;
        this.equipmentBreakdownData = null;
        if (data.value == '0') {
            this.router.navigateByUrl(encodeURI(`water-building-group/${this.buildingGroupId}?tabkey=${this.tabIndex}`));
        }
        else {
            this.router.navigateByUrl(encodeURI(`water/${data.value}?tabkey=${this.tabIndex}`));
        }
    }
    overallConsumptionChanged() {
        this.resetTime();
        this.getOverallConsumption();
    }
    eqDateRangeChange(type = "small") {
        this.resetTime();
        switch (type) {
            case 'small':
                this.getEqDistribution();
                break;
            case 'large':
                this.getEqDistributionLg();
                break;
        }
    }
    getDate(date) {
        const month = new Date(date).getMonth() + 1;
        const day = new Date(date).getDate();
        const year = new Date(date).getFullYear();
        return `${year}/${month}/${day}`;
    }
    onChangeTrendLogByDate(isInit = false) {
        const { month, date, year, target } = this._mapArrayTrendIndex[this.trendLogTabIndex];
        this._isYear = year;
        this._isMonth = month;
        const { start, end } = this._startDateTrendLog;
        let newStart = new Date(start);
        let newEnd = new Date(end);
        if (isInit) {
            this._isFirstInit = false;
        }
        if (this._isFirstInit) {
            const currentDate = new Date(start);
            let newDate = this._maxDate.getDate();
            let newMonth = this._maxDate.getMonth();
            if (year || month) {
                newDate = 1;
                if (year) {
                    newMonth = 0;
                }
            }
            currentDate.setDate(newDate);
            currentDate.setMonth(newMonth);
            newEnd.setDate(newDate);
            newEnd.setMonth(newMonth);
            newStart = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(currentDate, month || date || year, target, 'minus');
            this._startDateTrendLog.end = newEnd;
            this._startDateTrendLog.start = newEnd;
        }
        else {
            if (date) {
                newStart.setDate(end.getDate() - date);
            }
            else if (month) {
                newStart.setMonth(end.getMonth() - month);
                newStart.setDate(1);
            }
            else if (year) {
                newStart.setFullYear(end.getFullYear() - year);
                newStart.setMonth(0);
            }
        }
        if (date) {
            newEnd = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(newEnd, 1, 'day');
        }
        this.getTrendLogs(this.trendLogTabIndex + 1, this.getDate(newStart), this.getDate(newEnd));
        this.resetTime();
    }
    setTrendLogData(index) {
        this.trendLogTabIndex = index;
        this.onChangeTrendLogByDate();
    }
    resetTime() {
        setTimeout(() => this._reload = false);
        setTimeout(() => this._reload = true);
    }
};
WaterDashboardComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_4__["HeaderService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_17__["ThousandSeparatorPipe"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_5__["DateServiceService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: _services_meter_service__WEBPACK_IMPORTED_MODULE_10__["MeterService"] },
    { type: src_app_services_equipment_breakdown_service__WEBPACK_IMPORTED_MODULE_11__["EquipmentBreakdownService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["LtDashboardService"] }
];
WaterDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-water-dashboard',
        template: __webpack_require__(/*! raw-loader!./water-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/water-dashboard/water-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./water-dashboard.component.scss */ "./app/dashboards/water-dashboard/water-dashboard.component.scss")]
    })
], WaterDashboardComponent);



/***/ }),

/***/ "./app/dashboards/water-group-dashboard/water-group-dashboard.component.scss":
/*!***********************************************************************************!*\
  !*** ./app/dashboards/water-group-dashboard/water-group-dashboard.component.scss ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvd2F0ZXItZ3JvdXAtZGFzaGJvYXJkL3dhdGVyLWdyb3VwLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./app/dashboards/water-group-dashboard/water-group-dashboard.component.ts":
/*!*********************************************************************************!*\
  !*** ./app/dashboards/water-group-dashboard/water-group-dashboard.component.ts ***!
  \*********************************************************************************/
/*! exports provided: WaterGroupDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaterGroupDashboardComponent", function() { return WaterGroupDashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _services_http_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _services_date_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _services_initial_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _services_meter_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../services/meter.service */ "./app/services/meter.service.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! save-svg-as-png */ "../node_modules/save-svg-as-png/lib/saveSvgAsPng.js");
/* harmony import */ var save_svg_as_png__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/enums/DustributionChartType */ "./enums/DustributionChartType.ts");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");



















let WaterGroupDashboardComponent = class WaterGroupDashboardComponent {
    constructor(headerService, dataService, configs, datePipe, route, dateService, initialService, meterService, router, ltServiceDashboard) {
        this.headerService = headerService;
        this.dataService = dataService;
        this.configs = configs;
        this.datePipe = datePipe;
        this.route = route;
        this.dateService = dateService;
        this.initialService = initialService;
        this.meterService = meterService;
        this.router = router;
        this.ltServiceDashboard = ltServiceDashboard;
        this.tabIndex = 0;
        // 0 = week, 1 = month, 2 = year, 3 = 5 years
        this.trendLogTabIndex = 0;
        this.dailyConsumptionData = { chart: {} };
        this.overallConsumptioTotalData = 0;
        this.overallConsumptioSquareData = 0;
        this.trendLogData = {};
        this.equipDistribution = {};
        this.equipDistributionLg = {};
        this.squareMeterPointerDescription = 'EUI<br> (GFA = N/A m<sup>2</sup>)';
        this.buildings = [];
        this.FileDownloadIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_12__["faDownload"];
        this.colorMap = src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_17__["ChartColorMap"];
        this.rows = [];
        this.columns = [
            { name: 'No.', key: 'meterId' },
            { name: 'Group Name', key: 'groupName' },
            { name: 'Block', key: 'block' },
            { name: 'Level', key: 'level' },
            { name: 'Equipment Type', key: 'eqType' },
            { name: 'Equipment Code', key: 'eqCode' },
            { name: 'Consumption ( m<sup>3</sup> )', key: 'value' }
        ];
        this.tableLoading = true;
        this.appOnInit = () => {
            const { tabkey = 0 } = this.route.snapshot.queryParams || {};
            this.tabIndex = tabkey;
            this.fillDashboard((isDone) => {
                if (tabkey && tabkey != 0) {
                    this.setTabIndex(tabkey);
                }
                else {
                    this.getChartDatas();
                    this.getOverallConsumption();
                }
            });
        };
        this._startDateTrendLog = {
            start: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(new Date(), 1, 'day', 'minus'),
            end: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(new Date(), 1, 'day', 'minus')
        };
        this._mapArrayTrendIndex = src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_18__["LIST_DAY_CONSUMPTION"];
        this._isFirstInit = true;
        this._maxDate = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        this._isYear = null;
        this._isMonth = null;
        this._todayConsumptionDate = {
            start: new Date(),
            end: new Date()
        };
        this._maxTodayConsumptionDate = new Date();
        this._minTodayConsumptionDate = new Date((new Date()).setDate(new Date().getDate() - 7));
        this.onChangeTodayConsumption = () => {
            this._todayConsumptionDate.end = this._todayConsumptionDate.start;
            this.todayDateRange = this._todayConsumptionDate;
            this.getTrendDaylyData('_todayConsumptionDate');
        };
        this.isDone = {};
        this._reload = true;
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(new Date(), 1, 'day', 'minus');
        }
        this.overallDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.meterTreeDateRange = this.dateService.getTodayUpToNow(this.today);
        this.profileDateRange = this.dateService.getThisMonth(this.today);
        this.eqDIstDateRange = this.dateService.getThisMonth(this.today);
        this.todayDateRange = this.dateService.getToday(this.today);
        this.thisWeekDateRange = this.dateService.getLastDaysRange(this.today, 7, 'days');
        this.thisMonthRange = this.dateService.getLastDaysRange(this.today, 30, 'days');
        this.thisYearRange = this.dateService.getLastDaysRange(this.today, 12, 'months');
        this.equipmentBreakdownDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.lastFiveYearRange = this.dateService.getLastFiveYear(this.today);
        this.eqdistlg = this.dateService.thisMonthUpToNow(this.today);
        this.eqDIstDateRange = this.dateService.thisMonthUpToNow(this.today);
        this.weekFirst = new Date(this.today).getDate() - new Date(this.today).getDay() + 1;
        this.weekLast = this.weekFirst + 7;
        this.monthFirst = new Date(this.today.getFullYear(), this.today.getMonth(), 1);
        this.monthLast = new Date(this.today.getFullYear(), this.today.getMonth() + 1, 1);
        this.route.params.subscribe(params => {
            this.trendLogTabIndex = 0;
            // this.tabIndex = 0;
            this.groupId = parseInt(params.id);
            this.equipDistributionLg = null;
            // this.fillDashboard();
            this.appOnInit();
        });
    }
    ngOnInit() {
    }
    fillDashboard(callback) {
        this.initialService.navigationStore.buildingGroups$.subscribe(res => {
            if (res.length !== 0 && res !== null) {
                let buildingGroup = this.initialService.navigationStore.getBuildingGroupById(this.groupId);
                if (buildingGroup.length !== 0 && !null) {
                    this.buildingName = buildingGroup[0].description;
                    this.headerService.setItem(buildingGroup[0].description);
                    this.headerService.serviceType.next(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER);
                }
            }
        });
        this.initialService.navigationStore.buildings$.subscribe(res => {
            if (res.length !== 0 && res !== null) {
                let buildingList = this.initialService.navigationStore.getBuildingsByBuildingGroup(this.groupId);
                this.buildings = [];
                buildingList = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER));
                buildingList.forEach(element => {
                    this.buildings.push({ name: element.buildingName, id: element.buildingID });
                });
                callback(true);
            }
        });
    }
    onEqBreakdownFilter(e) {
        this.equipmentBreakdownDateRange = e;
        this.getEqBreakdownData(this.equipmentBreakdownDateRange);
    }
    exportMeter() {
        // saveSvgAsPng(document.getElementById("meterTreeSvg"), "Meter Tree.jpeg");
        const svg = document.getElementById("meterTreeSvg");
        // const svg: any = parent.querySelector('svg'); 
        const g = svg.querySelector('g');
        g.setAttribute('transform', 'scale(.72)');
        Object(save_svg_as_png__WEBPACK_IMPORTED_MODULE_13__["saveSvgAsPng"])(svg, "Meter Tree-" + new Date().getTime() + '.jpeg', { width: 1440 });
    }
    getChartDatas() {
        this.initialService.navigationStore.meterTypes$.subscribe(res => {
            if (res !== null && res.length !== 0) {
                this.getEqDistribution();
            }
        });
        this.getTrendDaylyData();
        this.onChangeTrendLogByDate();
    }
    getEqBreakdownData(dateRange) {
        this.tableLoading = true;
        this.ltServiceDashboard.getBuildingGroupEqBreakDown(this.groupId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER, dateRange).then(res => {
            this.eqBreakdownFiltered = res;
            this.tableLoading = false;
        });
    }
    getMeterTreeData() {
        this.meterTreeLoading = true;
        this.meterService.getGroupMeterTree(this.groupId, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER).then(res => {
            this.meterTreeData = res;
            this.meterTreeLoading = false;
        }).catch(err => {
            this.meterTreeData = {};
            this.meterTreeLoading = false;
        });
    }
    get serviceType() { return _enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"]; }
    dataSourceOut(data) {
        if (data !== undefined) {
            this.rows = [];
            data.forEach((row, i) => {
                const { scalledNumber, suffix, unit } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["abbreviateNumber"])(row.meter.value, _enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER);
                this.rows.push({
                    meterId: i + 1,
                    groupName: row.group.name,
                    block: row.block.name,
                    level: row.level.name,
                    eqType: row.eqType.name,
                    eqCode: row.eqCode.name,
                    value: scalledNumber + suffix
                    // value: fixDecimalNumPrecision(row.meter.value, this.configs.siteConfigurations.decimalNumPrecision)
                });
            });
        }
    }
    getTrendDaylyData(dateKey = '_todayConsumptionDate') {
        this.isDone.dailyConsumptionData = false;
        this.dailyConsumptionData = this.ltServiceDashboard.getTodaysConsumptionEmptyChart(src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].BUILDING_WATER);
        this.ltServiceDashboard.getBuildingGroupTodaysConsumption(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER, this[dateKey].start, this[dateKey].end, this.groupId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].BUILDING_WATER).then(res => {
            this.dailyConsumptionData = res;
            this.dailyConsumptionData.chart["paletteColors"] = [this.colorMap.water.secondary];
            this.isDone.dailyConsumptionData = true;
        });
    }
    getTrendLogs(interval, from, to) {
        // TODO: load empty chart chart
        // this.trendLogData = this.ltServiceDashboard.getEmptyConsumptionChart(ServiceType.WATER, interval);
        this.isDone.trendLogData = false;
        this.ltServiceDashboard.getBuildingGroupConsumptionChart(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER, from, to, this.groupId, interval).then(res => {
            this.trendLogData = res;
            this.trendLogData.chart["paletteColors"] = [this.colorMap.water.secondary];
            this.isDone.trendLogData = true;
        });
    }
    getEqDistribution() {
        this.ltServiceDashboard.getBuildingGroupEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER, this.eqDIstDateRange.start, this.eqDIstDateRange.end, this.groupId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].BUILDING_WATER, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_15__["DistributionChartType"].SMALL, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES).then(res => {
            this.equipDistribution = res;
        });
    }
    getEqDistributionLg() {
        this.isDone.equipDistributionLg = false;
        this.ltServiceDashboard.getBuildingGroupEquipmentDistribution(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER, this.eqdistlg.start, this.eqdistlg.end, this.groupId, src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_14__["default"].BUILDING_WATER, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_15__["DistributionChartType"].LARGE, src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES).then(res => {
            this.equipDistributionLg = res;
            this.isDone.equipDistributionLg = true;
        });
    }
    setTabIndex(index) {
        this.tabIndex = index;
        this.meterTreeData = null;
        if (this.tabIndex == 0) {
            this.getChartDatas();
        }
        else if (this.tabIndex == 1) {
            this.equipDistributionLg = {};
            this.getEqDistributionLg();
        }
        else if (this.tabIndex == 2) {
            this.getEqBreakdownData(this.equipmentBreakdownDateRange);
        }
        else if (this.tabIndex == 3) {
            this.meterTreeData = null;
            this.getMeterTreeData();
        }
        window.history.pushState(null, null, index != 0 ? `${window.location.pathname}?tabkey=${index}` : `${window.location.pathname}`);
    }
    getDate(date) {
        const month = new Date(date).getMonth() + 1;
        const day = new Date(date).getDate();
        const year = new Date(date).getFullYear();
        return `${year}/${month}/${day}`;
    }
    onChangeTrendLogByDate(isInit = false) {
        const { month, date, year, target } = this._mapArrayTrendIndex[this.trendLogTabIndex];
        this._isYear = year;
        this._isMonth = month;
        const { start, end } = this._startDateTrendLog;
        let newStart = new Date(start);
        let newEnd = new Date(end);
        if (isInit) {
            this._isFirstInit = false;
        }
        if (this._isFirstInit) {
            const currentDate = new Date(start);
            let newDate = this._maxDate.getDate();
            let newMonth = this._maxDate.getMonth();
            if (year || month) {
                newDate = 1;
                if (year) {
                    newMonth = 0;
                }
            }
            currentDate.setDate(newDate);
            currentDate.setMonth(newMonth);
            newEnd.setDate(newDate);
            newEnd.setMonth(newMonth);
            newStart = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(currentDate, month || date || year, target, 'minus');
            this._startDateTrendLog.end = newEnd;
            this._startDateTrendLog.start = newEnd;
        }
        else {
            if (date) {
                newStart.setDate(end.getDate() - date);
            }
            else if (month) {
                newStart.setMonth(end.getMonth() - month);
                newStart.setDate(1);
            }
            else if (year) {
                newStart.setFullYear(end.getFullYear() - year);
                newStart.setMonth(0);
            }
        }
        if (date) {
            newEnd = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["dateGapGenerator"])(newEnd, 1, 'day');
        }
        this.getTrendLogs(this.trendLogTabIndex + 1, this.getDate(newStart), this.getDate(newEnd));
        this.resetTime();
    }
    setTrendLogData(index) {
        this.trendLogTabIndex = index;
        this.onChangeTrendLogByDate();
    }
    // setTrendLogData(index: number) {
    //   switch(index) {
    //     case 0: {
    //       this.trendLogTabIndex = 0;
    //       this.getTrendLogs(1,
    //         this.datePipe.transform(
    //           this.datePipe.transform(this.thisWeekDateRange.start, 'yyyy/MM/dd')),
    //         this.datePipe.transform(this.thisWeekDateRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 1: {
    //       this.trendLogTabIndex = 1;
    //       this.getTrendLogs(2,
    //         this.datePipe.transform(this.thisMonthRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisMonthRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 2: {
    //       this.trendLogTabIndex = 2;
    //       this.thisYearRange.start.setDate(1);
    //       this.thisYearRange.end.setDate(1);
    //       this.getTrendLogs(3,
    //         this.datePipe.transform(this.thisYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.thisYearRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //     case 3: {
    //       this.trendLogTabIndex = 3;
    //       this.getTrendLogs(4,
    //         this.datePipe.transform(this.lastFiveYearRange.start, 'yyyy/MM/dd'),
    //         this.datePipe.transform(this.lastFiveYearRange.end, 'yyyy/MM/dd'));
    //       break;
    //     }
    //   }
    // }
    getOverallConsumption() {
        this.isDone.overallConsumptioTotalData = false;
        this.ltServiceDashboard.getOverallConsumptionBuildingGroup(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER, this.overallDateRange.start, this.overallDateRange.end, this.groupId).then(res => {
            this.overallConsumptioTotalData = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["fixDecimalNumPrecision"])(res, 2);
            this.getGfa();
            this.isDone.overallConsumptioTotalData = true;
        });
    }
    getGfa() {
        this.isDone.overallConsumptioSquareData = false;
        this.ltServiceDashboard.getGFABuildingGroup(_enums_ServiceType__WEBPACK_IMPORTED_MODULE_11__["ServiceType"].WATER, this.groupId).then(res => {
            if (res != null && res != 0) {
                this.overallConsumptioSquareData = (this.overallConsumptioTotalData == null || this.overallConsumptioTotalData == 0) ? null : Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_16__["fixDecimalNumPrecision"])(this.overallConsumptioTotalData / (res), 2);
                this.squareMeterPointerDescription = 'Total consumption per square meter (GFA = ' + res + ' m<sup>2</sup>)';
            }
            else {
                this.overallConsumptioSquareData = null;
                this.squareMeterPointerDescription = 'Total consumption per square meter (GFA = N/A m<sup>2</sup>)';
            }
            this.isDone.overallConsumptioSquareData = true;
        });
    }
    buildingChanged(data) {
        if (data.value === 0) {
            this.router.navigateByUrl(encodeURI(`water-building-group/${this.groupId}?tabkey=${this.tabIndex}`));
        }
        this.router.navigateByUrl(encodeURI(`water/${data.value}?tabkey=${this.tabIndex}`));
    }
    dateRangeListner(chartType) {
        this.resetTime();
        let dataset;
        switch (chartType) {
            case 'eqDist':
                dataset = this.getEqDistribution();
                break;
            case 'overall':
                dataset = this.getOverallConsumption();
                break;
            case 'eqdistlg':
                this.getEqDistributionLg();
                break;
        }
    }
    resetTime() {
        setTimeout(() => this._reload = false);
        setTimeout(() => this._reload = true);
    }
};
WaterGroupDashboardComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_4__["HeaderService"] },
    { type: _services_http_service__WEBPACK_IMPORTED_MODULE_5__["HttpService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"] },
    { type: _services_date_service_service__WEBPACK_IMPORTED_MODULE_8__["DateServiceService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] },
    { type: _services_meter_service__WEBPACK_IMPORTED_MODULE_10__["MeterService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["LtDashboardService"] }
];
WaterGroupDashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-water-group-dashboard',
        template: __webpack_require__(/*! raw-loader!./water-group-dashboard.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/water-group-dashboard/water-group-dashboard.component.html"),
        styles: [__webpack_require__(/*! ./water-group-dashboard.component.scss */ "./app/dashboards/water-group-dashboard/water-group-dashboard.component.scss")]
    })
], WaterGroupDashboardComponent);



/***/ }),

/***/ "./app/dashboards/water-report/water-report.component.scss":
/*!*****************************************************************!*\
  !*** ./app/dashboards/water-report/water-report.component.scss ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZHMvd2F0ZXItcmVwb3J0L3dhdGVyLXJlcG9ydC5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./app/dashboards/water-report/water-report.component.ts":
/*!***************************************************************!*\
  !*** ./app/dashboards/water-report/water-report.component.ts ***!
  \***************************************************************/
/*! exports provided: WaterReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaterReportComponent", function() { return WaterReportComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_dashboards_report_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/dashboards/report.service */ "./app/services/dashboards/report.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/enums/location-type.enum */ "./enums/location-type.enum.ts");
/* harmony import */ var src_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/enums/report-type.enum */ "./enums/report-type.enum.ts");







let WaterReportComponent = class WaterReportComponent {
    constructor(headerService, reportService) {
        this.headerService = headerService;
        this.reportService = reportService;
        this.scheduleData = [];
        this.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"];
        this.tabIndex = 0;
    }
    ngOnInit() {
        this.headerService.setItem('Reports');
        this.headerService.setBoardLevel(2);
    }
    setTabIndex(index) {
        this.tabIndex = index;
    }
    initialData(event) {
        this.isLoading = true;
        this.reportService.isReportAvailable(event.categoryId, src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__["LocationType"][event.categoryName], src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER, src_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_6__["ReportType"][event.reportType], event.dateRange).then(res => {
            this.buttonText = res;
            this.isLoading = false;
        });
    }
    reGenerate(event) {
        this.isLoading = true;
        this.reportService.generateReport(event.categoryId, src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__["LocationType"][event.categoryName], src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER, src_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_6__["ReportType"][event.reportType], event.dateRange, this.buttonText).then(res => {
            this.buttonText = res;
            this.isLoading = false;
        });
    }
    downloadExcel(event) {
        this.reportService.downloadAsExcel(event.categoryId, src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__["LocationType"][event.categoryName], src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER, src_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_6__["ReportType"][event.reportType], event.dateRange);
    }
    onChangeLocation(event) {
        this.locationType = event;
        this.fetchSchedules(event);
    }
    fetchSchedules(locationType) {
        this.scheduleData = [];
        this.isSchedulesLoading = true;
        this.reportService.getSchedules(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER, src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_5__["LocationType"][locationType]).then((res) => {
            this.scheduleData = res;
            this.isSchedulesLoading = false;
        });
    }
    insertData(event) {
        this.isSchedulesLoading = true;
        let newData = event;
        newData.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER;
        this.reportService.insertSchedule(newData).then(res => {
            this.fetchSchedules(this.locationType);
        });
    }
    updateData(data) {
        this.isSchedulesLoading = true;
        data.updatedDta.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER;
        this.reportService.editSchedule(data.scheduleId, data.updatedDta).then(res => {
            this.fetchSchedules(this.locationType);
        });
    }
    deleteSchedule(id) {
        this.isSchedulesLoading = true;
        this.reportService.deleteSchedule(id).then(res => {
            this.fetchSchedules(this.locationType);
        });
    }
};
WaterReportComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] },
    { type: src_app_services_dashboards_report_service__WEBPACK_IMPORTED_MODULE_3__["ReportService"] }
];
WaterReportComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-water-report',
        template: __webpack_require__(/*! raw-loader!./water-report.component.html */ "../node_modules/raw-loader/index.js!./app/dashboards/water-report/water-report.component.html"),
        styles: [__webpack_require__(/*! ./water-report.component.scss */ "./app/dashboards/water-report/water-report.component.scss")]
    })
], WaterReportComponent);



/***/ }),

/***/ "./app/error_pages/maintainence/maintainence.component.scss":
/*!******************************************************************!*\
  !*** ./app/error_pages/maintainence/maintainence.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".page-header {\n  color: #FFA200;\n  font-size: 70px;\n  text-transform: uppercase;\n}\n\n.page-sub-header {\n  color: rgba(255, 162, 0, 0.75);\n  font-size: 40px;\n  text-transform: uppercase;\n}\n\n.page-description {\n  color: #5C819E;\n  font-size: 20px;\n  text-transform: capitalize;\n}\n\n.highlight-date {\n  color: #9FC8E8;\n  font-weight: bold;\n}\n\n.page-container {\n  background-color: #293946;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  padding: 20px;\n  display: flex;\n  flex-flow: column;\n}\n\n.logo-container {\n  flex: 0 1 auto;\n}\n\n.logo-container > img {\n  width: 107px;\n  height: 37px;\n}\n\n.maintain-image > img {\n  max-width: 900px;\n}\n\n.maintain-image {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.page-content {\n  flex: 1 1 auto;\n}\n\n.maintain-text {\n  display: table-cell;\n  vertical-align: middle;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXJyb3JfcGFnZXMvbWFpbnRhaW5lbmNlL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXGVycm9yX3BhZ2VzXFxtYWludGFpbmVuY2VcXG1haW50YWluZW5jZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZXJyb3JfcGFnZXMvbWFpbnRhaW5lbmNlL21haW50YWluZW5jZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7QUNDSjs7QURFQTtFQUNJLDhCQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLDBCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUE7RUFDSSxtQkFBQTtFQUNBLHNCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxtQkFBQTtFQUNBLHNCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9lcnJvcl9wYWdlcy9tYWludGFpbmVuY2UvbWFpbnRhaW5lbmNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtaGVhZGVyIHtcclxuICAgIGNvbG9yOiAjRkZBMjAwO1xyXG4gICAgZm9udC1zaXplOiA3MHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xyXG59XHJcblxyXG4ucGFnZS1zdWItaGVhZGVyIHtcclxuICAgIGNvbG9yOiByZ2JhKDI1NSwgMTYyLCAwLCAwLjc1KTtcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcclxufVxyXG5cclxuLnBhZ2UtZGVzY3JpcHRpb257XHJcbiAgICBjb2xvcjogIzVDODE5RTtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIHRleHQtdHJhbnNmb3JtOmNhcGl0YWxpemU7XHJcbn1cclxuXHJcbi5oaWdobGlnaHQtZGF0ZSB7XHJcbiAgICBjb2xvcjogIzlGQzhFODtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4ucGFnZS1jb250YWluZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI5Mzk0NjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwcHg7XHJcbiAgICBsZWZ0OiAwcHg7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uO1xyXG59XHJcblxyXG4ubG9nby1jb250YWluZXJ7XHJcbiAgICBmbGV4OiAwIDEgYXV0bztcclxufVxyXG5cclxuLmxvZ28tY29udGFpbmVyPmltZ3tcclxuICAgIHdpZHRoOiAxMDdweDtcclxuICAgIGhlaWdodDogMzdweDtcclxufVxyXG5cclxuLm1haW50YWluLWltYWdlPmltZ3tcclxuICAgIG1heC13aWR0aDogOTAwcHg7XHJcbn1cclxuXHJcbi5tYWludGFpbi1pbWFnZXtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG4ucGFnZS1jb250ZW50e1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcbi5tYWludGFpbi10ZXh0e1xyXG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn0iLCIucGFnZS1oZWFkZXIge1xuICBjb2xvcjogI0ZGQTIwMDtcbiAgZm9udC1zaXplOiA3MHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4ucGFnZS1zdWItaGVhZGVyIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAxNjIsIDAsIDAuNzUpO1xuICBmb250LXNpemU6IDQwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5wYWdlLWRlc2NyaXB0aW9uIHtcbiAgY29sb3I6ICM1QzgxOUU7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5cbi5oaWdobGlnaHQtZGF0ZSB7XG4gIGNvbG9yOiAjOUZDOEU4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnBhZ2UtY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI5Mzk0NjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgbGVmdDogMHB4O1xuICBwYWRkaW5nOiAyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbjtcbn1cblxuLmxvZ28tY29udGFpbmVyIHtcbiAgZmxleDogMCAxIGF1dG87XG59XG5cbi5sb2dvLWNvbnRhaW5lciA+IGltZyB7XG4gIHdpZHRoOiAxMDdweDtcbiAgaGVpZ2h0OiAzN3B4O1xufVxuXG4ubWFpbnRhaW4taW1hZ2UgPiBpbWcge1xuICBtYXgtd2lkdGg6IDkwMHB4O1xufVxuXG4ubWFpbnRhaW4taW1hZ2Uge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4ucGFnZS1jb250ZW50IHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi5tYWludGFpbi10ZXh0IHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn0iXX0= */"

/***/ }),

/***/ "./app/error_pages/maintainence/maintainence.component.ts":
/*!****************************************************************!*\
  !*** ./app/error_pages/maintainence/maintainence.component.ts ***!
  \****************************************************************/
/*! exports provided: MaintainenceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaintainenceComponent", function() { return MaintainenceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");




let MaintainenceComponent = class MaintainenceComponent {
    constructor(initialService, route) {
        this.initialService = initialService;
        this.route = route;
        if (!this.initialService.isUnderMaintenece()) {
            this.route.navigate(['/']);
        }
        this.dueDate = this.initialService.getMaintainDueDate();
    }
    ngOnInit() {
    }
};
MaintainenceComponent.ctorParameters = () => [
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__["InitialService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] }
];
MaintainenceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-maintainence',
        template: __webpack_require__(/*! raw-loader!./maintainence.component.html */ "../node_modules/raw-loader/index.js!./app/error_pages/maintainence/maintainence.component.html"),
        styles: [__webpack_require__(/*! ./maintainence.component.scss */ "./app/error_pages/maintainence/maintainence.component.scss")]
    })
], MaintainenceComponent);



/***/ }),

/***/ "./app/models/notification.ts":
/*!************************************!*\
  !*** ./app/models/notification.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
class NotificationItem {
    constructor(meterName, spikeValue, benchmarkValue, alertTimeStamp, meter2, toTime, direction) {
        this._MeterName = '';
        this._SpikeValue = 0;
        this._BenchmarkValue = 0;
        this._AlertTimeStamp = '';
        this._meter2 = '';
        this._toTime = '';
        this._Direction = '';
        this.MeterName = meterName;
        this.SpikeValue = spikeValue;
        this.BenchmarkValue = benchmarkValue;
        this.AlertTimeStamp = alertTimeStamp;
        this.Meter2 = meter2;
        this.ToTime = toTime;
        this._Direction = direction;
    }
    get SpikeValue() {
        return this._SpikeValue;
    }
    set SpikeValue(value) {
        this._SpikeValue = value;
    }
    get MeterName() {
        return this._MeterName;
    }
    set MeterName(value) {
        this._MeterName = value;
    }
    get BenchmarkValue() {
        return this._BenchmarkValue;
    }
    set BenchmarkValue(value) {
        this._BenchmarkValue = value;
    }
    get AlertTimeStamp() {
        return this._AlertTimeStamp;
    }
    set AlertTimeStamp(value) {
        this._AlertTimeStamp = value;
    }
    get Meter2() {
        return this._meter2;
    }
    set Meter2(value) {
        this._meter2 = value;
    }
    get ToTime() {
        return this._toTime;
    }
    set ToTime(value) {
        this._toTime = value;
    }
    get Direction() {
        return this._Direction;
    }
    set Direction(value) {
        this._Direction = value;
    }
}
NotificationItem.ctorParameters = () => [
    null,
    null,
    null,
    null,
    null,
    null,
    null
];
/* harmony default export */ __webpack_exports__["default"] = (NotificationItem);


/***/ }),

/***/ "./app/pipes/thousand-separator.pipe.ts":
/*!**********************************************!*\
  !*** ./app/pipes/thousand-separator.pipe.ts ***!
  \**********************************************/
/*! exports provided: ThousandSeparatorPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThousandSeparatorPipe", function() { return ThousandSeparatorPipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let ThousandSeparatorPipe = class ThousandSeparatorPipe {
    transform(nStr) {
        if (nStr === '' || !nStr) {
            return nStr;
        }
        let x, x1, x2, rgx;
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x[1];
        rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + (x2 ? `.${x2}` : '');
    }
};
ThousandSeparatorPipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
        name: 'thousandSeparator'
    })
], ThousandSeparatorPipe);



/***/ }),

/***/ "./app/services/dashboards/alert.service.ts":
/*!**************************************************!*\
  !*** ./app/services/dashboards/alert.service.ts ***!
  \**************************************************/
/*! exports provided: AlertService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertService", function() { return AlertService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../http.service */ "./app/services/http.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/store/navigation.service */ "./app/store/navigation.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/enums/bench-mark-type.enum */ "./enums/bench-mark-type.enum.ts");
/* harmony import */ var src_util_StringHelper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/util/StringHelper */ "./util/StringHelper.ts");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");












let AlertService = class AlertService {
    constructor(http, datePipe, config, navigationService, initialService, notifierService, thousandSeparator) {
        this.http = http;
        this.datePipe = datePipe;
        this.config = config;
        this.navigationService = navigationService;
        this.initialService = initialService;
        this.notifierService = notifierService;
        this.thousandSeparator = thousandSeparator;
        this.notifier = this.notifierService;
    }
    getLDWaterSummeryData(dateRange) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.http.get(this.config.endPoints['ld-water-alerts'], {
                    siteId: this.config.siteConfigurations.siteId,
                    serviceType: src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].LD_WATER,
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')
                }).toPromise();
                if (Array.isArray(res)) {
                    const data = [];
                    res.forEach(element => {
                        data.push({
                            id: element.guid,
                            time: this.datePipe.transform(element.from, 'MM/dd/yyyy HH:mm a', 'Z'),
                            meters: `${element.meterA} and ${element.meterB}`,
                            meterAId: element.meterAId,
                            meterBId: element.meterBId,
                            scenarioId: element.ldModelId,
                            scenario: element.ldModelId === 1 ? 'Without sub meters between main ring meters' : 'With sub meters between main ring meters',
                            maxError: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(element.maxError, this.config.siteConfigurations.decimalNumPrecision),
                            error: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(element.error, this.config.siteConfigurations.decimalNumPrecision),
                            status: element.status === 1 ? 'Pending' : 'Acknowledged',
                            buttonGroupAction: [{ buttonName: 'Acknowledge', actionKey: 'acknowledge' }]
                        });
                    });
                    return data;
                }
                else {
                    return [];
                }
            }
            catch (error) {
                console.log(error);
            }
        });
    }
    getWaterMeters(serviceType, buildingGroupId, buildingId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.http.get(this.config.endPoints['get-lt-water-meters'], {
                    siteId: this.config.siteConfigurations.siteId,
                    serviceTypeId: serviceType,
                    buildingGroupId,
                    buildingId
                }).toPromise();
                if (Array.isArray(res)) {
                    return res;
                }
                else {
                    return [];
                }
            }
            catch (e) {
                console.log(e);
                return [];
            }
        });
    }
    acknowledgeLDAlerts(body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.http.post(this.config.endPoints['acknowledge-alerts'], body, {}).toPromise();
                return res;
            }
            catch (error) {
                console.log(error);
            }
        });
    }
    exportLDAlerts(dateRange, ldModelId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_7__["buildPlaceholder"])(`${this.initialService.getHost()}/${this.config.endPoints['alert-ld-water-export']}`, {
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd HH:mm a'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd HH:mm a'),
                    serviceType: src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].LD_WATER,
                    ldModelId
                });
                this.downloadAsExcel(url);
            }
            catch (error) {
                console.log(error);
            }
        });
    }
    getLDWaterConfigurationData() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.http.get(this.config.endPoints['ld-water-config'], {
                    siteId: this.config.siteConfigurations.siteId,
                    serviceType: src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].LD_WATER
                }).toPromise();
                const data = [];
                res.forEach(element => {
                    data.push({
                        id: element.ldScenarioId,
                        status: element.status == 1,
                        scenarioId: element.ldModelId,
                        meterA: element.meterAName,
                        meterAId: element.meterAId,
                        meterB: element.meterBName,
                        meterBId: element.meterBId,
                        subMeters: element.subMeters ? element.subMeters : [],
                        edit: false
                    });
                });
                return data;
            }
            catch (error) {
                console.log(error);
                return [];
            }
        });
    }
    addNewLdScenario(body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const req = yield this.http.post(this.config.endPoints['add-ld-scenario'], body, {}).toPromise();
                return req;
            }
            catch (error) {
                console.log(error);
                return [];
            }
        });
    }
    changeLDConfigScenario(body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const req = yield this.http.post(this.config.endPoints['ld-config-status'], body, {}).toPromise();
                return req;
            }
            catch (error) {
                console.log(error);
                return [];
            }
        });
    }
    getChillerAlertSummaryData(dateRange) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let data = yield this.http.get(this.config.endPoints['chiller-alerts'], {
                    siteId: this.config.siteConfigurations.siteId,
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`
                }).toPromise();
                let processedData = [];
                data.forEach(element => {
                    if (this.navigationService.getPlantById(element.chillerPlantId)[0]) {
                        processedData.push({
                            id: { name: element.guid, id: element.guid },
                            time: { name: this.datePipe.transform(element.timeStamp, 'yyyy/MM/dd HH:mm', 'Z'), id: 0 },
                            equipment: { name: element.meterName, id: element.meterID },
                            detectedValue: {
                                name: this.thousandSeparator.transform(Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(element.value, this.config.siteConfigurations.decimalNumPrecision)),
                                id: 0
                            },
                            benchmarkValue: { name: this.thousandSeparator.transform(element.benchmarkValue), id: 0 },
                            status: { name: element.currentStatus == 0 ? 'Acknowledged' : 'Pending', id: 0 },
                            plant: {
                                name: this.navigationService.getPlantById(element.chillerPlantId)[0].name,
                                id: element.chillerPlantId
                            },
                            location: { name: element.locationName, id: element.locationID }
                        });
                    }
                });
                return processedData;
            }
            catch (e) {
                return null;
            }
        });
    }
    getWaterElectAlertSummary(dateRange, serviceType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let data = yield this.http.get(this.config.endPoints['water-elec-alerts'], {
                    siteId: this.config.siteConfigurations.siteId,
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`,
                    serviceType
                }).toPromise();
                let processedData = [];
                data.forEach(element => {
                    if (this.navigationService.getBuildingGroupById(element.buildingGroupID)[0] && this.navigationService.getBuilding(element.buildingID)[0] && this.navigationService.getLevelById(element.levelID)[0]) {
                        processedData.push({
                            id: { name: element.guid, id: element.guid },
                            time: { name: this.datePipe.transform(element.timeStamp, 'yyyy/MM/dd HH:mm', 'Z'), id: 0 },
                            buildingGroup: {
                                name: this.navigationService.getBuildingGroupById(element.buildingGroupID)[0].description,
                                id: element.buildingGroupID
                            },
                            building: {
                                name: this.navigationService.getBuilding(element.buildingID)[0].buildingName,
                                id: element.buildingID
                            },
                            level: {
                                name: this.navigationService.getLevelById(element.levelID)[0].floorName,
                                id: element.levelID
                            },
                            location: { name: element.locationName, id: element.locationID },
                            equipment: { name: element.meterName, id: element.meterID },
                            detectedValue: {
                                name: this.thousandSeparator.transform(Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(element.value, this.config.siteConfigurations.decimalNumPrecision)),
                                id: 0
                            },
                            benchmarkValue: { name: this.thousandSeparator.transform(element.benchmarkValue), id: 0 },
                            status: { name: element.currentStatus == 0 ? 'Acknowledged' : 'Pending', id: 0 }
                        });
                    }
                });
                return processedData;
            }
            catch (e) {
                return null;
            }
        });
    }
    getHTAlertAlertSummary(dateRange, serviceType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let data = yield this.http.get(this.config.endPoints['ht-alerts'], {
                    siteId: this.config.siteConfigurations.siteId,
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`,
                    serviceType
                }).toPromise();
                let processedData = [];
                data.forEach(element => {
                    if (this.navigationService.getLoopById(element.htLoopId)[0] && this.navigationService.getSubstationById(element.substationId)[0]) {
                        processedData.push({
                            id: { name: element.guid, id: element.guid },
                            time: { name: this.datePipe.transform(element.timeStamp, 'yyyy/MM/dd HH:mm', 'Z'), id: 0 },
                            equipment: { name: element.meterName, id: element.meterID },
                            detectedValue: {
                                name: this.thousandSeparator.transform(Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(element.value, this.config.siteConfigurations.decimalNumPrecision)),
                                id: 0
                            },
                            benchmarkValue: { name: this.thousandSeparator.transform(element.benchmarkValue), id: 0 },
                            status: { name: element.currentStatus == 0 ? 'Acknowledged' : 'Pending', id: 0 },
                            loop: {
                                name: this.navigationService.getLoopById(element.htLoopId)[0].htLoopName,
                                id: element.htLoopId
                            },
                            substation: {
                                name: this.navigationService.getSubstationById(element.substationId)[0].subStationName,
                                id: element.substationId
                            },
                            location: { name: element.locationName, id: element.locationID }
                        });
                    }
                });
                return processedData;
            }
            catch (e) {
                return null;
            }
        });
    }
    getElecWaterConfigurationData(serviceType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let data = yield this.http.get(this.config.endPoints['elec-water-alert-config'], {
                    siteId: this.config.siteConfigurations.siteId,
                    serviceType
                }).toPromise();
                const processedData = [];
                data.forEach(element => {
                    if (this.navigationService.getBuildingGroupById(element.buildingGroupID)[0] && this.navigationService.getBuilding(element.buildingID)[0]) {
                        processedData.push({
                            toggle: element.status == 1,
                            equipment: element.meterName,
                            mondayBenchMark: this.thousandSeparator.transform(element.benchmarkDay2),
                            tuesdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay3),
                            wednesdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay4),
                            thursdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay5),
                            fridayBenchMark: this.thousandSeparator.transform(element.benchmarkDay6),
                            saturdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay7),
                            sundayBenchMark: this.thousandSeparator.transform(element.benchmarkDay1),
                            changeMode: [
                                { key: 'auto', text: 'Auto', selected: element.benchmarkType == src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_6__["BenchMarkType"].Auto },
                                { key: 'manual', text: 'Manual', selected: element.benchmarkType == src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_6__["BenchMarkType"].Manual }
                            ],
                            buildingGroup: {
                                name: this.navigationService.getBuildingGroupById(element.buildingGroupID)[0].description,
                                id: element.buildingGroupID
                            },
                            building: {
                                name: this.navigationService.getBuilding(element.buildingID)[0].buildingName,
                                id: element.buildingID
                            },
                            level: { name: element.floorName, id: element.levelID },
                            location: { name: element.locationName, id: element.locationID },
                            meterID: element.meterID
                        });
                    }
                });
                return processedData;
            }
            catch (e) {
                return null;
            }
        });
    }
    getChillerConfigurationData() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const data = yield this.http.get(this.config.endPoints['chiller-alert-config'], {
                    siteId: this.config.siteConfigurations.siteId
                }).toPromise();
                const processedData = [];
                data.forEach(element => {
                    if (this.navigationService.getPlantById(element.chillerPlantId)[0]) {
                        processedData.push({
                            toggle: element.status == 1,
                            equipment: element.meterName,
                            mondayBenchMark: this.thousandSeparator.transform(element.benchmarkDay2),
                            tuesdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay3),
                            wednesdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay4),
                            thursdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay5),
                            fridayBenchMark: this.thousandSeparator.transform(element.benchmarkDay6),
                            saturdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay7),
                            sundayBenchMark: this.thousandSeparator.transform(element.benchmarkDay1),
                            changeMode: [
                                { key: 'auto', text: 'Auto', selected: element.benchmarkType == src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_6__["BenchMarkType"].Auto },
                                { key: 'manual', text: 'Manual', selected: element.benchmarkType == src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_6__["BenchMarkType"].Manual }
                            ],
                            plant: {
                                name: this.navigationService.getPlantById(element.chillerPlantId)[0].name,
                                id: element.chillerPlantId
                            },
                            location: { name: element.locationName, id: element.locationID },
                            meterID: element.meterID
                        });
                    }
                });
                return processedData;
            }
            catch (e) {
                return null;
            }
        });
    }
    getHTConfigurationData() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const data = yield this.http.get(this.config.endPoints['ht-alert-config'], {
                    siteId: this.config.siteConfigurations.siteId
                }).toPromise();
                const processedData = [];
                data.forEach(element => {
                    if (this.navigationService.getLoopById(element.htLoopId)[0] && this.navigationService.getSubstationById(element.substationId)[0]) {
                        processedData.push({
                            toggle: element.status == 1,
                            equipment: element.meterName,
                            mondayBenchMark: this.thousandSeparator.transform(element.benchmarkDay2),
                            tuesdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay3),
                            wednesdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay4),
                            thursdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay5),
                            fridayBenchMark: this.thousandSeparator.transform(element.benchmarkDay6),
                            saturdayBenchMark: this.thousandSeparator.transform(element.benchmarkDay7),
                            sundayBenchMark: this.thousandSeparator.transform(element.benchmarkDay1),
                            changeMode: [
                                { key: 'auto', text: 'Auto', selected: element.benchmarkType == src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_6__["BenchMarkType"].Auto },
                                { key: 'manual', text: 'Manual', selected: element.benchmarkType == src_enums_bench_mark_type_enum__WEBPACK_IMPORTED_MODULE_6__["BenchMarkType"].Manual }
                            ],
                            loop: {
                                name: this.navigationService.getLoopById(element.htLoopId)[0].htLoopName,
                                id: element.htLoopId
                            },
                            substation: {
                                name: this.navigationService.getSubstationById(element.substationId)[0].subStationName,
                                id: element.substationId
                            },
                            location: { name: element.locationName, id: element.locationID },
                            meterID: element.meterID
                        });
                    }
                });
                return processedData;
            }
            catch (e) {
                return null;
            }
        });
    }
    changeConfigurationMode(requestBody) {
        try {
            let data = this.http.post(this.config.endPoints['set-alert-benchmark-type'], requestBody, {}).toPromise();
            return data;
        }
        catch (e) {
            return null;
        }
    }
    changeAlertConfigStatus(requestBody) {
        try {
            let data = this.http.post(this.config.endPoints['set-alert-config-status'], requestBody, {}).toPromise();
            return data;
        }
        catch (e) {
            return null;
        }
    }
    updateManualModeConfiguration(requestBody) {
        try {
            let data = this.http.post(this.config.endPoints['set-alert-manual-config-data'], requestBody, {}).toPromise();
            return data;
        }
        catch (e) {
            return null;
        }
    }
    acknowldgeAlerts(requestBody) {
        try {
            let data = this.http.post(this.config.endPoints['acknowledge-alerts'], requestBody, {}).toPromise();
            return data;
        }
        catch (e) {
            return null;
        }
    }
    exportAlertsDetails(serviceType, dateRange, buildingGroupId, buildingId, levelId, loopId, substationId, plantId) {
        let url = "";
        switch (serviceType) {
            case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].CHILLER:
                url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_7__["buildPlaceholder"])(`${this.initialService.getHost()}/${this.config.endPoints["alert-chiller-export"]}`, {
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`,
                    plantId: plantId
                });
                break;
            case src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].ELECTRICAL:
                url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_7__["buildPlaceholder"])(`${this.initialService.getHost()}/${this.config.endPoints["alert-lt-water-export"]}`, {
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`,
                    buildingGroupId: buildingGroupId,
                    buildingId: buildingId,
                    levelId: levelId,
                    serviceTypeId: serviceType
                });
                break;
            case (src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].HT_ELECTRICAL):
                url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_7__["buildPlaceholder"])(`${this.initialService.getHost()}/${this.config.endPoints["alert-ht-export"]}`, {
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`,
                    loopId: loopId,
                    substationId: substationId,
                    serviceTypeId: serviceType,
                    siteId: 1
                });
                break;
            case (src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].MAIN_HT_ELECTRICAL):
                url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_7__["buildPlaceholder"])(`${this.initialService.getHost()}/${this.config.endPoints["alert-ht-export"]}`, {
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`,
                    loopId: loopId,
                    substationId: substationId,
                    serviceTypeId: serviceType,
                    siteId: 1
                });
                break;
            case (src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].WATER):
                url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_7__["buildPlaceholder"])(`${this.initialService.getHost()}/${this.config.endPoints["alert-lt-water-export"]}`, {
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`,
                    buildingGroupId: buildingGroupId,
                    buildingId: buildingId,
                    levelId: levelId,
                    serviceTypeId: serviceType
                });
                break;
            case (src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_5__["ServiceType"].MAIN_WATER):
                url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_7__["buildPlaceholder"])(`${this.initialService.getHost()}/${this.config.endPoints["alert-lt-water-export"]}`, {
                    from: `${this.datePipe.transform(dateRange.start, 'yyyy/MM/dd')} 00:00 AM`,
                    to: `${this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')} 00:00 AM`,
                    buildingGroupId: buildingGroupId,
                    buildingId: buildingId,
                    levelId: levelId,
                    serviceTypeId: serviceType
                });
                break;
        }
        this.downloadAsExcel(url);
    }
    downloadAsExcel(url) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let newTab;
                newTab = window.open(url);
                this.notifier.notify('success', 'Report Successfully Downloaded');
            }
            catch (e) {
                this.notifier.notify('error', 'Failed to Download the Report');
            }
        });
    }
};
AlertService.ctorParameters = () => [
    { type: _http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_4__["NavigationService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_8__["InitialService"] },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_9__["NotifierService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_11__["ThousandSeparatorPipe"] }
];
AlertService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], AlertService);



/***/ }),

/***/ "./app/services/dashboards/chiller-data-generate.service.ts":
/*!******************************************************************!*\
  !*** ./app/services/dashboards/chiller-data-generate.service.ts ***!
  \******************************************************************/
/*! exports provided: ChillerDataGenerateService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChillerDataGenerateService", function() { return ChillerDataGenerateService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../initial.service */ "./app/services/initial.service.ts");





let ChillerDataGenerateService = class ChillerDataGenerateService {
    constructor(config) {
        this.config = config;
        this.datePipe = new _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"]('en-US');
        this.dataSource = {};
    }
    plotHeatBalanceChart(data, dateRange) {
        let dateTime = '';
        let heatBalance = '';
        if (data.length === 0 && dateRange) {
            dateTime = this.chillerEfficiencyEmptyData(dateRange).dateTime;
            heatBalance = this.chillerEfficiencyEmptyData(dateRange).data;
        }
        else {
            data.forEach(element => {
                dateTime += element.dateTime + ',';
                heatBalance += (Number(element.heat_balance) < 10 && Number(element.heat_balance) > -10 ? Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.heat_balance, this.config.siteConfigurations.decimalNumPrecision) : 'null') + ',';
            });
        }
        dateTime = dateTime.substring(0, dateTime.length - 1);
        heatBalance = heatBalance.substring(0, heatBalance.length - 1);
        let returnData = this.config.chartConfigurations.heatBalance;
        returnData.categories[0].category = dateTime;
        returnData.dataset[0].data = heatBalance;
        return returnData;
    }
    heatBalanceEmptyData(dateRange) {
        let start = dateRange.start;
        start.setHours(0);
        start.setMinutes(0);
        let data = [];
        for (let index = 1; index < 1145; index++) {
            start.setTime(start.getTime() + 1000 * 60);
            data.push({
                lable: this.datePipe.transform(start, 'yyyy/MM/dd HH:mm'),
                value: null
            });
        }
        return data;
    }
    generateChillerEfficiencyChart(data, dateRange) {
        let dateTime = '';
        let efficiency = '';
        if (data.length === 0 && dateRange) {
            dateTime = this.chillerEfficiencyEmptyData(dateRange).dateTime;
            efficiency = this.chillerEfficiencyEmptyData(dateRange).data;
        }
        else {
            data.forEach(element => {
                dateTime += element.dateTime + ',';
                efficiency += Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.efficiency, this.config.siteConfigurations.decimalNumPrecision) + ',';
            });
        }
        dateTime = dateTime.substring(0, dateTime.length - 1);
        efficiency = efficiency.substring(0, efficiency.length - 1);
        let returnData = this.config.chartConfigurations.chillerEfficiency;
        returnData.categories[0].category = dateTime;
        returnData.dataset[0].data = efficiency;
        returnData.trendlines[0].line[0].startvalue = this.config.siteConfigurations.chillerEfficiencyBaseLineValue;
        return returnData;
    }
    generateCarbonFootprintChart(data, dateRange) {
        let category = '';
        let data0 = '';
        let data1 = '';
        let data2 = '';
        if (data.length === 0 && dateRange) {
            category = this.carbonFootprintEmptyData(dateRange).dateTime;
            data0 = data1 = data2 = this.carbonFootprintEmptyData(dateRange).data;
        }
        else {
            data.forEach(element => {
                category += element.dateTime + '|';
                data0 += Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.daily_energy, this.config.siteConfigurations.decimalNumPrecision) + '|';
                data1 += Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.co2_daily_emission, this.config.siteConfigurations.decimalNumPrecision) + '|';
                data2 += Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.co2_monthly_emission, this.config.siteConfigurations.decimalNumPrecision) + '|';
            });
        }
        category = category.substring(0, category.length - 1);
        data0 = data0.substring(0, data0.length - 1);
        data1 = data1.substring(0, data1.length - 1);
        data2 = data2.substring(0, data2.length - 1);
        let returnData = this.config.chartConfigurations.carbonFootprint;
        returnData.categories[0].category = category;
        returnData.dataset[0].data = data0;
        returnData.dataset[1].data = data1;
        // returnData.dataset[2].data = data2;
        return returnData;
    }
    generateCondenserPerformanceChart(data) {
        let data0 = [];
        let data1 = [];
        if (data.length === 0) {
            data0 = data1 = this.condenserPerformanceEmptyChartData();
        }
        else {
            data.forEach((element, i) => {
                if (element.cdw_supply_temp != null && element.dry_bulb != null) {
                    data0.push({
                        y: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.cdw_supply_temp, this.config.siteConfigurations.decimalNumPrecision),
                        x: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.dry_bulb, this.config.siteConfigurations.decimalNumPrecision)
                    });
                }
                if (element.cdw_return_temp != null && element.dry_bulb != null) {
                    data1.push({
                        y: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.cdw_return_temp, this.config.siteConfigurations.decimalNumPrecision),
                        x: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["fixDecimalNumPrecision"])(element.dry_bulb, this.config.siteConfigurations.decimalNumPrecision)
                    });
                }
            });
        }
        let returnData = this.config.chartConfigurations.condenserPerformance;
        returnData.dataset[0].data = data0;
        returnData.dataset[1].data = data1;
        return returnData;
    }
    chillerEfficiencyEmptyData(dateRange) {
        let hours = new Date().getHours();
        let dateTime = '';
        let data = '';
        for (let hour = 0; hour <= hours; hour++) {
            let date = new Date().setHours(hour);
            for (let minute = 0; minute < 60; minute++) {
                dateTime = dateTime + this.datePipe.transform(new Date(date).setMinutes(minute), 'dd/MM/y HH:mm') + ',';
                data = data + 'null,';
            }
        }
        return {
            dateTime,
            data
        };
    }
    carbonFootprintEmptyData(dateRange) {
        const diffDays = Math.ceil(Math.abs(dateRange.end.getTime() - dateRange.start.getTime()) / (1000 * 3600 * 24));
        let dateTime = '';
        let data = '';
        for (let index = 1; index <= diffDays; index++) {
            dateTime = dateTime + this.datePipe.transform(new Date(dateRange.start.getFullYear(), dateRange.start.getMonth(), index), 'dd-MM-y') + ',';
            data = data + 'null,';
        }
        return {
            dateTime,
            data
        };
    }
    condenserPerformanceEmptyChartData() {
        const data = [];
        for (let index = 1; index < 36; index++) {
            data.push({
                x: index,
                y: null
            });
        }
        return data;
    }
};
ChillerDataGenerateService.ctorParameters = () => [
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] }
];
ChillerDataGenerateService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], ChillerDataGenerateService);



/***/ }),

/***/ "./app/services/dashboards/configuration-dashboard.service.ts":
/*!********************************************************************!*\
  !*** ./app/services/dashboards/configuration-dashboard.service.ts ***!
  \********************************************************************/
/*! exports provided: ConfigurationDashboardService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurationDashboardService", function() { return ConfigurationDashboardService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../http.service */ "./app/services/http.service.ts");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../initial.service */ "./app/services/initial.service.ts");




let ConfigurationDashboardService = class ConfigurationDashboardService {
    constructor(httpService, configs, initialService) {
        this.httpService = httpService;
        this.configs = configs;
        this.initialService = initialService;
    }
    /**
     * get low tension meters and water meters
     * @param serviceTypeId
     * @param buildingGroupId
     * @param buildingId
     */
    getLtWaterMeters(serviceTypeId, buildingGroupId, buildingId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.get(this.configs.endPoints['get-lt-water-meters'], {
                    siteId: this.configs.siteConfigurations.siteId,
                    serviceTypeId,
                    buildingGroupId,
                    buildingId
                }).toPromise();
                let data = [];
                if (res.length != 0) {
                    res.forEach(element => {
                        data.push({
                            buildingGroup: { id: element.buildingGroupId, name: element.buildingGroupName },
                            building: { id: element.buildingId, name: element.buildingName },
                            level: { id: element.levelID, name: element.level },
                            location: { id: element.locationID, name: element.location },
                            meter: { id: element.meterID, name: element.meterName },
                            meterType: { id: element.meterTypeID, name: element.meterTypeName },
                            relationship: { id: null, name: element.meterRelationship },
                            opcTag: { id: null, name: element.opcTag }
                        });
                    });
                }
                return data;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * add low tension meter or water meters
     * @param serviceTypeId
     * @param body
     */
    addLtWaterMeters(serviceTypeId, body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.post(this.configs.endPoints['add-lt-water-meters'], body, {
                    siteId: this.configs.siteConfigurations.siteId,
                    serviceTypeId
                }).toPromise();
                return res === null ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    deleteMeter(data, serviceMode) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.put(this.configs.endPoints["meter-state"], {
                    siteId: this.configs.siteConfigurations.siteId,
                    serviceMode: serviceMode
                }, data).toPromise();
                return res === null ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * update low tension meter or water meters
     * @param serviceTypeId
     * @param body
     */
    updateLtWaterMeters(serviceTypeId, body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.put(this.configs.endPoints['update-lt-water-meters'], {
                    siteId: this.configs.siteConfigurations.siteId,
                    serviceTypeId
                }, body).toPromise();
                return res === null ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * get high tension electrical meters
     * @param htLoopId
     */
    getHtMeters(htLoopId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.get(this.configs.endPoints['get-ht-meters'], {
                    siteId: this.configs.siteConfigurations.siteId,
                    htLoopId
                }).toPromise();
                let data = [];
                if (res.length != 0) {
                    res.forEach(element => {
                        data.push({
                            meter: { id: element.meterID, name: element.meterName },
                            loop: { id: element.htLoopID, name: element.htLoopName },
                            substation: { id: element.subStationID, name: element.subStationName },
                            opcTag: { id: null, name: element.opcTag },
                        });
                    });
                }
                return data;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * add high tension meters or water meters
     * @param body
     */
    addHtMeters(body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.post(this.configs.endPoints['add-ht-meters'], body, {
                    siteId: this.configs.siteConfigurations.siteId
                }).toPromise();
                return res === null ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * update low tension meter or water meters
     * @param body
     */
    updateHtMeters(body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.put(this.configs.endPoints['update-ht-meters'], {
                    siteId: this.configs.siteConfigurations.siteId
                }, body).toPromise();
                return res === null ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * get chiller meters
     * @param chillerPlantId
     */
    getChillerMeters(chillerPlantId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.get(this.configs.endPoints['get-chiller-meters'], {
                    siteId: this.configs.siteConfigurations.siteId,
                    chillerPlantId
                }).toPromise();
                let data = [];
                if (res.length != 0) {
                    res.forEach(element => {
                        data.push({
                            plant: { id: element.chillerPlantID, name: element.chillerPlantName },
                            equipmentType: { id: element.equipmentTypeID, name: element.equipmentTypeName },
                            equipment: { id: element.equipmentID, name: null },
                            meter: { id: element.meterID, name: element.meterName },
                            opcTag: { id: null, name: element.opcTag },
                        });
                    });
                }
                return data;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * add chiller meter
     * @param chillerPlantId
     * @param body
     */
    addChillerMeters(chillerPlantId, body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.post(this.configs.endPoints['add-chiller-meters'], body, {
                    siteId: this.configs.siteConfigurations.siteId,
                    chillerPlantId
                }).toPromise();
                return res === null ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * update chiller meter
     * @param chillerPlantId
     * @param body
     */
    updateChillerMeters(chillerPlantId, body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.put(this.configs.endPoints['update-chiller-meters'], {
                    siteId: this.configs.siteConfigurations.siteId,
                    chillerPlantId
                }, body).toPromise();
                return res === null ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    /**
     * update service mode
     * @param serviceTypeId
     * @param body
     */
    updateMeterStatus(serviceTypeId, body) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const res = yield this.httpService.put(this.configs.endPoints['meter-state'], {
                    siteId: this.configs.siteConfigurations.siteId,
                    serviceMode: serviceTypeId
                }, body).toPromise();
                return res === null ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
};
ConfigurationDashboardService.ctorParameters = () => [
    { type: _http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_3__["InitialService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_3__["InitialService"] }
];
ConfigurationDashboardService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], ConfigurationDashboardService);



/***/ }),

/***/ "./app/services/dashboards/gfa.service.ts":
/*!************************************************!*\
  !*** ./app/services/dashboards/gfa.service.ts ***!
  \************************************************/
/*! exports provided: GfaService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GfaService", function() { return GfaService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../initial.service */ "./app/services/initial.service.ts");




let GfaService = class GfaService {
    constructor(http, initialService) {
        this.http = http;
        this.initialService = initialService;
    }
    updateGfa(gfa) {
        return this.http.post(this.initialService.config.api_host + '/' + this.initialService.endPoints['update-gfa'], gfa).toPromise();
    }
    getBuildingGfa(id) {
        return this.http.get(this.initialService.config.api_host + '/' + this.initialService.endPoints['get-building-gfa'].replace('${buildingId}', id)).toPromise();
    }
    getBuildingGroupGfa(id) {
        return this.http.get(this.initialService.config.api_host + '/' + this.initialService.endPoints['get-buildingGroup-gfa'].replace('${buildingGroupId}', id)).toPromise();
    }
};
GfaService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_3__["InitialService"] }
];
GfaService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
    })
], GfaService);



/***/ }),

/***/ "./app/services/dashboards/greenmark-data-fetching.service.ts":
/*!********************************************************************!*\
  !*** ./app/services/dashboards/greenmark-data-fetching.service.ts ***!
  \********************************************************************/
/*! exports provided: GreenmarkDataFetchingService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GreenmarkDataFetchingService", function() { return GreenmarkDataFetchingService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _services_http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");
/* harmony import */ var src_enums_group_name_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/enums/group-name.enum */ "./enums/group-name.enum.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var src_util_StringHelper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/util/StringHelper */ "./util/StringHelper.ts");
/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/sortBy */ "../node_modules/lodash/sortBy.js");
/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_sortBy__WEBPACK_IMPORTED_MODULE_9__);










let GreenmarkDataFetchingService = class GreenmarkDataFetchingService {
    constructor(httpService, intialService, configs, datePipe, notifierService, http) {
        this.httpService = httpService;
        this.intialService = intialService;
        this.configs = configs;
        this.datePipe = datePipe;
        this.notifierService = notifierService;
        this.http = http;
        this.notifier = this.notifierService;
    }
    getPlants() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const plants = [];
                const res = yield this.httpService.get(this.configs.endPoints['site-all-chillers'], {
                    siteId: this.configs.siteConfigurations.siteId
                }).toPromise();
                this.plantList = lodash_sortBy__WEBPACK_IMPORTED_MODULE_9___default()(res, (o) => o.name);
                this.plantList.forEach(element => {
                    plants.push({
                        name: element.name,
                        id: element.chillerPlantID
                    });
                });
                return res === null ? [] : plants;
            }
            catch (e) {
                this.plantList = [];
                return [];
            }
        });
    }
    getEquipmentId(plantId, equipmentName) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const equipmentTypes = this.plantList.find(x => x.chillerPlantID == plantId).equipmentTypes;
            const equipment = equipmentTypes.find(x => x.name == equipmentName);
            if (equipment && equipment.equipmentTypeID) {
                return equipment.equipmentTypeID;
            }
            else {
                return null;
            }
        });
    }
    getEquipments(plantId, equipmentTypeId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const equipments = [];
                const res = yield this.httpService.get(this.configs.endPoints['chiller-equipments'], {
                    plant_id: plantId,
                    equipment_type_id: equipmentTypeId
                }).toPromise();
                res.forEach(element => {
                    equipments.push({
                        name: element.name,
                        id: element.equipmentID
                    });
                });
                return res === null ? [] : equipments;
            }
            catch (e) {
                return [];
            }
        });
    }
    fetchHeatBalanceData(dateRange, plantId, frequency) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const chartConfigs = this.intialService.getGreenmarkData()['heat-balance'];
            const plant = chartConfigs.find(x => x.chillerPlantID == plantId);
            this.groupId = plant.groupId;
            try {
                let res = yield this.httpService.get(this.configs.endPoints['heat-balance'], {
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd'),
                    groupName: src_enums_group_name_enum__WEBPACK_IMPORTED_MODULE_6__["GroupName"].Plant,
                    groupId: plant.groupId,
                    frequency
                }).toPromise();
                return res.StatusCode || res.errors ? [] : res;
            }
            catch (e) {
                return null;
            }
        });
    }
    fetchChillerEfficiencyData(dateRange, plantId, chillerId, frequency) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const chartConfigs = this.intialService.getGreenmarkData()['chiller-efficiency'];
            const chillers = chartConfigs.find(x => x.chillerPlantID == plantId);
            const chiller = chillers.chillers.find(x => x.equipmentId == chillerId);
            this.groupId = chiller.groupId;
            try {
                let res = yield this.httpService.get(this.configs.endPoints['chiller-efficiency'], {
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd'),
                    groupName: src_enums_group_name_enum__WEBPACK_IMPORTED_MODULE_6__["GroupName"].Plant,
                    groupId: chiller.groupId,
                    frequency
                }).toPromise();
                return res[0].StatusCode || res.errors ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    fetchCarbonFootPrintData(dateRange, plantId, frequency) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const chartConfigs = this.intialService.getGreenmarkData()['carbon-footprint'];
            const plant = chartConfigs.find(x => x.chillerPlantID == plantId);
            this.groupId = plant.groupId;
            try {
                let res = yield this.httpService.get(this.configs.endPoints['carbon-footprint'], {
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd'),
                    groupName: src_enums_group_name_enum__WEBPACK_IMPORTED_MODULE_6__["GroupName"].Plant,
                    groupId: plant.groupId,
                    frequency
                }).toPromise();
                return res[0].StatusCode || res.errors ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    fetchCondenserPerformanceData(dateRange, plantId, headerId, frequency) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const chartConfigs = this.intialService.getGreenmarkData()['condenser-performance'];
            const plant = chartConfigs.find(x => x.chillerPlantID == plantId);
            const header = plant.headers.find(x => x.equipmentId == headerId);
            this.groupId = header.groupId;
            try {
                let res = yield this.httpService.get(this.configs.endPoints['condenser-performance'], {
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd'),
                    groupName: src_enums_group_name_enum__WEBPACK_IMPORTED_MODULE_6__["GroupName"].Plant,
                    groupId: header.groupId,
                    frequency
                }).toPromise();
                return res[0].StatusCode || res.errors ? [] : res;
            }
            catch (e) {
                return [];
            }
        });
    }
    exportChart(dateRange, frequency, reportType, plantId, equipmentId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let url;
                if (equipmentId) {
                    url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_8__["buildPlaceholder"])(`${this.intialService.getHost()}/${this.configs.endPoints['green-mark-export']}`, {
                        from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                        to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd'),
                        groupName: src_enums_group_name_enum__WEBPACK_IMPORTED_MODULE_6__["GroupName"].Plant,
                        groupId: this.groupId,
                        frequency,
                        reportType,
                        plantId,
                        childId: equipmentId ? equipmentId : 0
                    });
                }
                else {
                    url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_8__["buildPlaceholder"])(`${this.intialService.getHost()}/${this.configs.endPoints['heat-balance-export']}`, {
                        from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                        to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd'),
                        groupName: src_enums_group_name_enum__WEBPACK_IMPORTED_MODULE_6__["GroupName"].Plant,
                        groupId: this.groupId,
                        frequency,
                        reportType,
                        plantId
                    });
                }
                let newTab = window.open(url);
                if (!newTab || newTab.closed || typeof newTab.closed == 'undefined') {
                    throw new TypeError('File downloading error');
                }
                else {
                    this.notifier.notify('success', 'Report Exported Successfully');
                }
            }
            catch (e) {
                this.notifier.notify('error', 'Something Went Wrong');
            }
        });
    }
};
GreenmarkDataFetchingService.ctorParameters = () => [
    { type: _services_http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"] },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_5__["NotifierService"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_7__["HttpClient"] }
];
GreenmarkDataFetchingService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])({
        providedIn: 'root'
    })
], GreenmarkDataFetchingService);



/***/ }),

/***/ "./app/services/dashboards/ht-dashboard.service.ts":
/*!*********************************************************!*\
  !*** ./app/services/dashboards/ht-dashboard.service.ts ***!
  \*********************************************************/
/*! exports provided: HtDashboardService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtDashboardService", function() { return HtDashboardService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _services_http_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _services_date_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _services_initial_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _enums_intervals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../enums/intervals */ "./enums/intervals.ts");
/* harmony import */ var _enums_group_by__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../enums/group-by */ "./enums/group-by.ts");
/* harmony import */ var _enums_DataMode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../enums/DataMode */ "./enums/DataMode.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _enums_HtCategory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../enums/HtCategory */ "./enums/HtCategory.ts");
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var _enums_HTApiType__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../enums/HTApiType */ "./enums/HTApiType.ts");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lodash/find */ "../node_modules/lodash/find.js");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");

















let HtDashboardService = class HtDashboardService {
    constructor(dataService, configs, datePipe, dateService, initialService, thousandSeparator) {
        this.dataService = dataService;
        this.configs = configs;
        this.datePipe = datePipe;
        this.dateService = dateService;
        this.initialService = initialService;
        this.thousandSeparator = thousandSeparator;
        this.decimalNumPrecision = this.configs.siteConfigurations.decimalNumPrecision;
        this.generateConsumptionData = (totalDay = 7, keyDate = 'days', dateFormat = 'MM-dd') => {
            let data = [];
            if (keyDate == 'years') {
                for (let i = totalDay; i >= 0; i--) {
                    data.push({
                        label: this.datePipe.transform(this.getDemoDate().setFullYear(this.getDemoDate().getFullYear() - i), 'yyyy'),
                        value: null,
                        tooltext: ''
                    });
                }
            }
            else {
                let lastdayList = this.dateService.getLastDays(this.today, totalDay, keyDate);
                for (let i = 0; i < totalDay; i++) {
                    data.push({
                        label: this.datePipe.transform(lastdayList[i], dateFormat),
                        value: null,
                        tooltext: ''
                    });
                }
            }
            return data;
        };
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        this.todayDateRange = this.dateService.getToday(this.today);
        this.dataService.serviceTypeId.subscribe(data => {
            this.serviceTypeId = data;
        });
    }
    getHTOveralConsumptionData(startDate, endDate, dashboardType, locationId, serviceTypeId = _enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].HT_ELECTRICAL) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let overollConsumptionData;
            let response = null;
            try {
                response = yield this.dataService.get(this.configs.endPoints[`ht-${dashboardType}-consumption-data-mode`], {
                    location: locationId,
                    startDate,
                    endDate,
                    serviceTypeId: serviceTypeId,
                    dataMode: _enums_DataMode__WEBPACK_IMPORTED_MODULE_9__["DataMode"].OverallSum,
                    groupId: _enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].None,
                    categoryId: _enums_HtCategory__WEBPACK_IMPORTED_MODULE_11__["HtCategory"].NONE
                }).toPromise();
            }
            catch (e) { }
            if (response == null || !response.length || response.length === 0) {
                overollConsumptionData = this.generateOverallConsumption();
            }
            else {
                overollConsumptionData = response;
            }
            return overollConsumptionData;
        });
    }
    generateOverallConsumption() {
        return [{ name: 'Nanyang Technological University', data: [{ label: '', value: null }] }];
    }
    getHTTrendDaylyData(startDate, endDate, dashboardType, locationId, serviceTypeId = _enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].HT_ELECTRICAL) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let dailyConsumptionData;
            let response = null;
            try {
                response = yield this.dataService.get(this.configs.endPoints[`ht-${dashboardType}-trend-log`], {
                    startDate,
                    endDate,
                    interval: _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].ThirtyMin,
                    serviceTypeId: serviceTypeId,
                    location: locationId
                }).toPromise();
            }
            catch (e) {
                dailyConsumptionData = this.plotHTTrendDaylyData(this.generateHTTrendDaylyData(), serviceTypeId);
            }
            if (response == null || !response.length || response.length === 0) {
                dailyConsumptionData = this.plotHTTrendDaylyData(this.generateHTTrendDaylyData(), serviceTypeId);
            }
            else {
                dailyConsumptionData = this.plotHTTrendDaylyData(response, serviceTypeId);
            }
            return dailyConsumptionData;
        });
    }
    plotHTTrendDaylyData(data, serviceType) {
        let dailyConsumptionData;
        const chart = Object.assign({}, this.configs.chartConfigurations['elec-trend-log']);
        chart.xAxisName = 'Time';
        chart.yAxisName = 'Energy Consumption (kWh)';
        chart.exportFileName = 'Today\'s Consumption';
        chart.total = 0;
        data[0].data.forEach(item => {
            chart.total += item.value;
            item.value = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(item.value, this.configs.siteConfigurations.decimalNumPrecision);
            item['toolText'] = `Time: $label<br/>Consumption: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(item.value, this.configs.siteConfigurations.decimalNumPrecision))} kWh`;
            if (_enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].ELECTRICAL == serviceType || _enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].MAIN_HT_ELECTRICAL == serviceType) {
                const newValue = item.value / 1000;
                item = Object.assign({}, item, { value: item.value ? newValue : null, displayValue: item.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["moneyFormat"])((newValue || 0).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_16__["DECIMAL_MAP"].electricalTodayConsumption)) : null, toolText: "Time: $label <br/> Consumption: $displayValue kWh" });
            }
        });
        dailyConsumptionData = {
            chart,
            data: data[0].data ? data[0].data : []
        };
        return dailyConsumptionData;
    }
    generateHTTrendDaylyData() {
        let time0 = new Date().setHours(0, 30, 0, 0);
        const labelAndValue = [];
        for (let i = 0; i < 48; i++) {
            labelAndValue.push({ label: this.datePipe.transform(time0, 'HH:mm') === '00:00' ? '24:00' : this.datePipe.transform(time0, 'HH:mm'), value: null });
            time0 = new Date(time0).setTime(new Date(time0).getTime() + 30 * 60 * 1000);
        }
        const data = [
            {
                name: this.configs.siteConfigurations.siteName,
                data: labelAndValue
            }
        ];
        return data;
    }
    getSubstationDistribution(startDate, endDate, id, dashboardType, category, index, chartGroupType, serviceTypeId = _enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].HT_ELECTRICAL) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let substationDistribution = [];
            let response = null;
            let group = null;
            switch (dashboardType) {
                case _enums_HTApiType__WEBPACK_IMPORTED_MODULE_13__["HTApiType"].LOOP:
                    group = _enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].BuildingCategory;
                    break;
                case _enums_HTApiType__WEBPACK_IMPORTED_MODULE_13__["HTApiType"].SITE:
                    group = _enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].HT;
                    break;
            }
            response = yield this.dataService.get(this.configs.endPoints[`ht-${dashboardType}-consumption-data-mode`], {
                startDate,
                endDate,
                groupId: group,
                serviceTypeId: serviceTypeId,
                interval: _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].SecondaryThirtyMin,
                location: id,
                dataMode: _enums_DataMode__WEBPACK_IMPORTED_MODULE_9__["DataMode"].OverallSum,
                categoryId: category
            }).toPromise();
            if (response == null || response.length === 0) {
                substationDistribution = this.plotSubstationDistribution(dashboardType, [], index, chartGroupType);
            }
            else {
                substationDistribution = this.plotSubstationDistribution(dashboardType, response, index, chartGroupType);
            }
            return substationDistribution;
        });
    }
    plotSubstationDistribution(dashboardType, data, index, chartGroupType) {
        let substationDistribution;
        const processedData = [];
        let totalValue = 0;
        data.forEach(element => {
            totalValue += element.data[0].value;
        });
        data.forEach((element, i) => {
            const percentage = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])((element.data[0].value / totalValue * 100), this.decimalNumPrecision) + ' %';
            let color = this.getColorCode(chartGroupType, element.itemId);
            element.data[0].value = element.data[0].value / 1000;
            let value = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(element.data[0].value, src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_16__["DECIMAL_MAP"].equipDistributionLg);
            let processedObject = {
                displayValue: Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["chartTitle"])(element.name, this.thousandSeparator.transform(value), 'kWh', percentage, index === 0),
                label: element.name,
                value,
                toolText: `Category: $label<br/>Consumption: ${this.thousandSeparator.transform(value)} kWh<br/>Percentage: ${percentage}`
            };
            if (color !== null) {
                processedObject = Object.assign({}, processedObject, { color });
            }
            processedData.push(processedObject);
        });
        const chart = Object.assign({}, this.configs.chartConfigurations['eq-distribution-lg']);
        if (dashboardType === _enums_HTApiType__WEBPACK_IMPORTED_MODULE_13__["HTApiType"].SITE) {
            chart.exportFileName = 'Loop Distribution';
        }
        else if (dashboardType === _enums_HTApiType__WEBPACK_IMPORTED_MODULE_13__["HTApiType"].LOOP) {
            chart.exportFileName = 'Substation Distribution';
        }
        substationDistribution = {
            chart,
            data: processedData
        };
        return substationDistribution;
    }
    getHTTrendLogs(interval, from, to, dashboardType, locationId, serviceTypeId = _enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].HT_ELECTRICAL) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let trendLogData;
            let response = null;
            try {
                response = yield this.dataService.get(this.configs.endPoints[`ht-${dashboardType}-trend-log`], {
                    startDate: from,
                    endDate: to,
                    interval: interval == _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Daily ? _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Weekly : interval,
                    serviceTypeId: serviceTypeId,
                    location: locationId
                }).toPromise();
            }
            catch (e) { }
            switch (interval) {
                case 1: {
                    trendLogData = this.plotTrendLogs('Day', 'Energy Consumption(kWh)', 'Last 7 Days Consumption', response, interval, serviceTypeId);
                    break;
                }
                case 2: {
                    trendLogData = this.plotTrendLogs('Date', 'Energy Consumption(kWh)', 'Last 30 Days Consumption', response, interval, serviceTypeId);
                    break;
                }
                case 3: {
                    trendLogData = this.plotTrendLogs('Month', 'Energy Consumption(kWh)', 'Last 12 Months Consumption', response, interval, serviceTypeId);
                    break;
                }
                case 4: {
                    trendLogData = this.plotTrendLogs('Year', 'Energy Consumption(kWh)', 'Last 5 Years Consumption', response, interval, serviceTypeId);
                    break;
                }
            }
            return trendLogData;
        });
    }
    plotTrendLogs(xAxis, yAxis, exportFileName, response, interval, serviceType) {
        let data = [];
        // switch (interval) {
        //   case Interval.Daily:
        //     data = this.generateWeekConsumption();
        //     break;
        //   case Interval.Weekly:
        //     data = this.generateMonthConsumption();
        //     break;
        //   case Interval.Monthly:
        //     data = this.generateYearConsumption();
        //     break;
        //   case Interval.Yearly:
        //     data = this.generateFiveYearConsumption();
        //     break;
        // }
        switch (interval) {
            case _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Daily:
                data = this.generateConsumptionData(7, 'days', 'MMM-dd');
                // this.generateWeekConsumption();
                break;
            case _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Weekly:
                data = this.generateConsumptionData(30, 'days', 'MMM-dd');
                // data = this.generateMonthConsumption();
                break;
            case _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Monthly:
                data = this.generateConsumptionData(12, 'month', 'MMM-yyyy');
                // data = this.generateYearConsumption();
                break;
            case _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Yearly:
                data = this.generateConsumptionData(4, 'years', 'yyyy');
                // data = this.generateFiveYearConsumption();
                break;
        }
        const chart = Object.assign({}, this.configs.chartConfigurations['elec-trend-log']);
        chart.xAxisName = xAxis;
        chart.yAxisName = yAxis;
        chart.exportFileName = exportFileName;
        if (response[0].data) {
            response[0].data.forEach((element, i) => {
                if (data[i]) {
                    if (_enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].ELECTRICAL == serviceType || _enums_ServiceType__WEBPACK_IMPORTED_MODULE_10__["ServiceType"].MAIN_HT_ELECTRICAL == serviceType) {
                        const item = data[i];
                        const newValue = item.value / 1000;
                        data[i] = Object.assign({}, item, { value: item.value ? newValue : null, displayValue: item.value ? Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["moneyFormat"])((newValue || 0).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_16__["DECIMAL_MAP"].trendLogs)) : null, toolText: "Day: $label <br/> Consumption: $displayValue kWh" });
                    }
                    switch (interval) {
                        case _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Daily:
                            data[i].label = this.datePipe.transform(element.label, 'MMM-dd');
                            data[i].tooltext = `${xAxis}: ${this.datePipe.transform(element.label, 'MMMM-dd')}<br/>Consumption: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(element.value, this.decimalNumPrecision))} kWh`;
                            chart.maxColWidth = 64;
                            break;
                        case _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Weekly:
                            data[i].label = this.datePipe.transform(element.label, 'MMM-dd');
                            data[i].tooltext = `${xAxis}: ${this.datePipe.transform(element.label, 'MMMM-dd')}<br/>Consumption: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(element.value, this.decimalNumPrecision))} kWh`;
                            chart.maxColWidth = 20;
                            break;
                        case _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Monthly:
                            data[i].label = this.datePipe.transform(element.label, 'MMM-yyyy');
                            data[i].tooltext = `${xAxis}: ${this.datePipe.transform(element.label, 'MMMM-yyyy')}<br/>Consumption: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(element.value, this.decimalNumPrecision))} kWh`;
                            chart.maxColWidth = 42;
                            break;
                        case _enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].Yearly:
                            data[i].label = element.label;
                            data[i].tooltext = `${xAxis}: ${element.label}<br/>Consumption: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(element.value, this.decimalNumPrecision))} kWh`;
                            chart.maxColWidth = 72;
                            break;
                        default:
                            data[i].label = this.datePipe.transform(element.label, 'yyyy/MMM/dd');
                            data[i].tooltext = `${xAxis}: ${this.datePipe.transform(element.label, 'yyyy/MMM/dd')}<br/>Consumption: ${this.thousandSeparator.transform(Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["fixDecimalNumPrecision"])(element.value, this.decimalNumPrecision))} kWh`;
                            chart.maxColWidth = 64;
                            break;
                    }
                    data[i].value = element.value;
                }
            });
        }
        return { chart, data };
    }
    getSitehtBreakdownData(fromDate, toDate) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const data = [];
            const loops = yield this.dataService.get(this.configs.endPoints['ht-loops'], { siteId: this.configs.siteConfigurations.siteId })
                .toPromise();
            for (const loop of loops) {
                const temp = yield this.getLoopBreakdownData(loop.htLoopID, loop.htLoopName, fromDate, toDate);
                data.push(...temp);
            }
            return data;
        });
    }
    /*
    Get color code
  */
    getColorCode(chartGroupType, itemId) {
        let item;
        let color;
        switch (chartGroupType) {
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER:
                return '';
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].BUILDING_CATEGORY:
                item = lodash_find__WEBPACK_IMPORTED_MODULE_14___default()(this.initialService.navigationStore.buildingCategories, { buildingCategoryID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].METER_TYPES:
                item = lodash_find__WEBPACK_IMPORTED_MODULE_14___default()(this.initialService.navigationStore.meterTypes, { meterTypeID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].HT_LOOPS:
                item = lodash_find__WEBPACK_IMPORTED_MODULE_14___default()(this.initialService.navigationStore.htLoops, { htLoopID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_1__["default"].SUB_STATIONS:
                item = lodash_find__WEBPACK_IMPORTED_MODULE_14___default()(this.initialService.navigationStore.subStations, { subStationID: itemId });
                return this.getDefaultColorCode(item);
        }
    }
    getDefaultColorCode(item) {
        let color;
        if (item === undefined || item.attributes.length === 0) {
            return this.configs.config.defaultColorCode;
        }
        else {
            color = lodash_find__WEBPACK_IMPORTED_MODULE_14___default()(item.attributes, { textId: this.configs.config.attributes.COLOR_CODE });
            return color === null || color === undefined ? this.configs.config.defaultColorCode : color.value;
        }
    }
    getLoopBreakdownData(loopId = null, loopName = null, fromDate, toDate) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            // @ts-ignore
            const substations = yield this.dataService.get(this.configs.endPoints['loop-substations'], {
                loopId
            }).toPromise();
            const allMetersWithSubstation = [];
            for (const substation of substations) {
                const meters = yield this.dataService.get(this.configs.endPoints['substation-meters'], {
                    substationId: substation.subStationID
                }).toPromise();
                allMetersWithSubstation.push({ substation, meters });
            }
            const dataSet = [];
            for (const mainRow of allMetersWithSubstation) {
                for (const meter of mainRow.meters) {
                    dataSet.push({
                        loopName,
                        substationName: mainRow.substation.subStationName,
                        meterName: meter.meterName,
                        opcTag: meter.opcTag,
                    });
                }
            }
            return dataSet;
        });
    }
    // private generateWeekConsumption() {
    //   let daysLastSeven = this.dateService.getLastDays(this.today, 7, 'days');
    //   let data = [];
    //   for (let i = 0; i < 7; i++) {
    //     data.push(
    //       {
    //         label: this.datePipe.transform(daysLastSeven[i], 'MMM-dd'),
    //         value: null,
    //         tooltext: ''
    //       }
    //     );
    //   }
    //   return data;
    // }
    // private generateMonthConsumption() {
    //   let lastThirtyDays = this.dateService.getLastDays(this.today, 30, 'days');
    //   let data = [];
    //   for (let num = 0; num < 30; num++) {
    //     data.push ({
    //       label: this.datePipe.transform(lastThirtyDays[num], 'MMM-dd'),
    //       value: null,
    //       tooltext: ''
    //     });
    //   }
    //   return data;
    // }
    // private generateYearConsumption() {
    //   let data = [];
    //   let months = this.dateService.getLastDays(this.today, 12, 'month');
    //   for (let i = 0; i < 12; i++) {
    //     data.push({
    //       label: this.datePipe.transform(months[i], 'MMM-yyyy'),
    //       value:  null,
    //       tooltext: ''
    //     });
    //   }
    //   return data;
    // }
    // private generateFiveYearConsumption() {
    //   let data = [];
    //   for (let i = 4; i >= 0; i--) {
    //     data.push({
    //       label: this.datePipe.transform(this.getDemoDate().setFullYear(this.getDemoDate().getFullYear() - i), 'yyyy'),
    //       value: null,
    //       tooltext: ''
    //     });
    //   }
    //   return data;
    // }
    getDemoDate() {
        if (this.configs.config.demo) {
            return new Date(this.configs.config.demoDate);
        }
        else {
            return new Date();
        }
    }
};
HtDashboardService.ctorParameters = () => [
    { type: _services_http_service__WEBPACK_IMPORTED_MODULE_4__["HttpService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: _services_date_service_service__WEBPACK_IMPORTED_MODULE_5__["DateServiceService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_15__["ThousandSeparatorPipe"] }
];
HtDashboardService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
    })
], HtDashboardService);



/***/ }),

/***/ "./app/services/dashboards/lt-dashboard.service.ts":
/*!*********************************************************!*\
  !*** ./app/services/dashboards/lt-dashboard.service.ts ***!
  \*********************************************************/
/*! exports provided: LtDashboardService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LtDashboardService", function() { return LtDashboardService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _http_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../http.service */ "./app/services/http.service.ts");
/* harmony import */ var _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/enums/intervals */ "./enums/intervals.ts");
/* harmony import */ var src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/enums/DataMode */ "./enums/DataMode.ts");
/* harmony import */ var src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/enums/group-by */ "./enums/group-by.ts");
/* harmony import */ var src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/enums/ChartDashboardType */ "./enums/ChartDashboardType.ts");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/enums/DustributionChartType */ "./enums/DustributionChartType.ts");
/* harmony import */ var src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/enums/ChartGroupType */ "./enums/ChartGroupType.ts");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! lodash/find */ "../node_modules/lodash/find.js");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _date_service_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var _gfa_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./gfa.service */ "./app/services/dashboards/gfa.service.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");


















let LtDashboardService = class LtDashboardService {
    constructor(dataService, config, datePipe, initialService, dateService, thousandSeparator, gfaService) {
        this.dataService = dataService;
        this.config = config;
        this.datePipe = datePipe;
        this.initialService = initialService;
        this.dateService = dateService;
        this.thousandSeparator = thousandSeparator;
        this.gfaService = gfaService;
        this.decimalNumPrecision = this.config.siteConfigurations.decimalNumPrecision;
        this.months = [
            "January", "February", "March",
            "April", "May", "June",
            "July", "August", "September",
            "October", "November", "December"
        ];
        /*
          Generate week consumption
          
        */
        this.generateConsumptionData = (totalDay = 7, keyDate = 'days', dateFormat = 'MM-dd', to = this.getDemoDate()) => {
            let data = [];
            to = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["dateGapGenerator"])(new Date(to), 1);
            if (keyDate == 'years') {
                for (let i = totalDay; i >= 0; i--) {
                    data.push({
                        label: this.datePipe.transform(to.setFullYear(to.getFullYear() - i), 'yyyy'),
                        value: null,
                        tooltext: ''
                    });
                }
            }
            else {
                let lastdayList = this.dateService.getLastDays(to, totalDay, keyDate);
                for (let i = 0; i < totalDay; i++) {
                    data.push({
                        label: this.datePipe.transform(lastdayList[i], dateFormat),
                        value: null,
                        tooltext: ''
                    });
                }
            }
            return data;
        };
        if (config.config.demo) {
            this.today = new Date(config.config.demoDate);
        }
        else {
            this.today = new Date();
        }
    }
    getProfileChartBuilding(serviceType, buildingId, fromDate, toDate) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let weekConsumptions = yield this.dataService.get(this.config.endPoints["profile-chart"], {
                startDate: this.datePipe.transform(fromDate, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(toDate, 'yyyy/MM/dd'),
                serviceTypeId: serviceType,
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].ThirtyMin,
                buildingId: buildingId,
                groupId: 4
            }).toPromise();
            let holidayConsumptions = yield this.dataService.get(this.config.endPoints["profile-chart"], {
                startDate: this.datePipe.transform(fromDate, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(toDate, 'yyyy/MM/dd'),
                serviceTypeId: serviceType,
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].ThirtyMin,
                buildingId: buildingId,
                groupId: 5
            }).toPromise();
            weekConsumptions.push(holidayConsumptions[0]);
            return this.prepareProfileChart(serviceType, [weekConsumptions]);
        });
    }
    /*
      8-day profile chart building group
    */
    getProfileChartBuildingGroup(serviceType, groupId, fromDate, toDate) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let buildingsData = [];
            let buildings = yield this.dataService.get(this.config.endPoints["site-building-group-all-buildings"], {
                siteId: this.config.siteConfigurations.siteId,
                groupId: groupId
            }).toPromise();
            for (let building of buildings) {
                let weekConsumptions = yield this.dataService.get(this.config.endPoints["profile-chart"], {
                    startDate: this.datePipe.transform(fromDate, 'yyyy/MM/dd'),
                    endDate: this.datePipe.transform(toDate, 'yyyy/MM/dd'),
                    serviceTypeId: serviceType,
                    interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].ThirtyMin,
                    buildingId: building.buildingID,
                    groupId: 4
                }).toPromise();
                let holidayConsumptions = yield this.dataService.get(this.config.endPoints["profile-chart"], {
                    startDate: this.datePipe.transform(fromDate, 'yyyy/MM/dd'),
                    endDate: this.datePipe.transform(toDate, 'yyyy/MM/dd'),
                    serviceTypeId: serviceType,
                    interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].ThirtyMin,
                    buildingId: building.buildingID,
                    groupId: 5
                }).toPromise();
                weekConsumptions.push(holidayConsumptions[0]);
                buildingsData.push(weekConsumptions);
            }
            return this.prepareProfileChart(serviceType, buildingsData);
        });
    }
    /*
      8-day profile chart prepare
    */
    prepareProfileChart(serviceType, weekConsumptions) {
        const dataset = [
            {
                seriesName: 'Sunday',
                color: '#4caf50',
                data: []
            },
            {
                seriesName: 'Monday',
                color: '#f44336',
                data: []
            },
            {
                seriesName: 'Tuesday',
                color: '#e91e63',
                data: []
            },
            {
                seriesName: 'Wednesday',
                color: '#9c27b0',
                data: []
            },
            {
                seriesName: 'Thursday',
                color: '#3f51b5',
                data: []
            },
            {
                seriesName: 'Friday',
                color: '#2196f3',
                data: []
            },
            {
                seriesName: 'Saturday',
                color: '#009688',
                data: []
            },
            {
                seriesName: 'Holiday',
                color: '#B15928',
                data: []
            }
        ];
        dataset.forEach(element => {
            for (let i = 0; i < 48; i++) {
                element.data.push({
                    value: null,
                    toolText: ''
                });
            }
        });
        weekConsumptions.forEach(building => {
            building.forEach(day => {
                if (day) {
                    dataset.find(series => series.seriesName == day.name).data.forEach((x, i) => {
                        x.value += day.data[i].value;
                        x.toolText = `Time: $label{br}Consumption: ${this.thousandSeparator.transform(Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(x.value, this.config.siteConfigurations.decimalNumPrecision))} ${serviceType === _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL ? 'kWh' : 'm³'}`;
                    });
                }
            });
        });
        let chart = Object.assign({}, this.config.chartConfigurations["profileChart"]);
        chart.yAxisName = this.config.chartConfigurations.chartCustomStrings['profile-chart'][serviceType].yAxisName;
        return {
            chart,
            categories: this.config.chartConfigurations.profileChartCategories,
            dataset
        };
    }
    /*
      Get empty profile chart
    */
    getEmptyProfileChart(serviceType) {
        return this.prepareProfileChart(serviceType, []);
    }
    /*
      Overall consumption site
    */
    getOverallConsumptionSite(serviceType, from, to) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = yield this.dataService.get(this.config.endPoints['site-consumption-data-mode'], {
                siteId: this.config.siteConfigurations.siteId,
                startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                serviceTypeId: serviceType,
                dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].OverallSum,
                groupId: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].None,
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].SecondaryThirtyMin
            }).toPromise();
            if (data !== undefined && data !== null && data.length !== 0) {
                return data[0].data[0].value;
            }
            else {
                return null;
            }
        });
    }
    /*
      Overall consumption building
    */
    getOverallConsumptionBuilding(serviceType, from, to, buildingId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = yield this.dataService.get(this.config.endPoints['building-type-consumption'], {
                siteId: this.config.siteConfigurations.siteId,
                startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                serviceTypeId: serviceType,
                buildingId: buildingId,
                dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].OverallSum,
                groupId: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].None,
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].SecondaryThirtyMin
            }).toPromise();
            return this.prepareOverallConsumption([data]);
        });
    }
    /*
       Overall consumption building group
     */
    getOverallConsumptionBuildingGroup(serviceType, from, to, groupId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = [];
            let buildings = this.initialService.navigationStore.getBuildingsByBuildingGroup(groupId);
            for (let building of buildings) {
                let buildingData = yield this.dataService.get(this.config.endPoints['building-type-consumption'], {
                    siteId: this.config.siteConfigurations.siteId,
                    startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                    endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                    serviceTypeId: serviceType,
                    buildingId: building.buildingID,
                    dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].OverallSum,
                    groupId: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].None,
                    interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].SecondaryThirtyMin
                }).toPromise();
                data.push(buildingData);
            }
            return this.prepareOverallConsumption(data);
        });
    }
    getCategoryTrends(building, interval, from, to) {
        let data = [];
        return this.dataService.get(this.config.endPoints['building-type-consumption-group'], {
            startDate: from,
            endDate: to,
            groupId: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].MeterType,
            serviceTypeId: _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL,
            buildingId: building,
            interval: interval,
            siteId: this.config.siteConfigurations.siteId,
            dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].CategorySum,
        });
    }
    /*
      Prepare overall consumption for Group/Building
    */
    prepareOverallConsumption(responses) {
        let total = null;
        for (let building of responses) {
            if (building !== undefined && building !== null && building.length !== 0) {
                if (building[0].data[0].value !== null && building[0].data[0].value !== undefined) {
                    if (total == null) {
                        total = building[0].data[0].value;
                    }
                    else {
                        total += building[0].data[0].value;
                    }
                }
            }
        }
        return total;
    }
    /*
      GFA building
    */
    getGFABuilding(serviceType, buildingId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let gfa = yield this.gfaService.getBuildingGfa(buildingId);
            return (gfa == null) ? null : gfa.total;
        });
    }
    /*
      GFA building group
    */
    getGFABuildingGroup(serviceType, groupId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let gfa = yield this.gfaService.getBuildingGroupGfa(groupId);
            return (gfa == null) ? null : gfa.total;
        });
    }
    /*
      GFA prepare
    */
    prepareGFA(responses) {
        let total = null;
        for (let building of responses) {
            if (building !== null && building !== undefined) {
                if (building.floorArea != null && building.floorArea != undefined) {
                    if (total == null) {
                        total = building.floorArea;
                    }
                    else {
                        total += building.floorArea;
                    }
                }
            }
        }
        return total;
    }
    /*
      Get site todays consumption
    */
    getSiteTodaysConsumption(serviceType, from, to, chartDashboardType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = yield this.dataService.get(this.config.endPoints["trend-log"], {
                startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].ThirtyMin,
                serviceTypeId: serviceType,
                siteId: this.config.siteConfigurations.siteId
            }).toPromise();
            return this.prepareTodaysConsumption([data], chartDashboardType);
        });
    }
    /*
      Get building todays consumption
    */
    getBuildingTodaysConsumption(serviceType, from, to, buildingId, chartDashboardType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = yield this.dataService.get(this.config.endPoints['trend-log-data-building'], {
                startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].ThirtyMin,
                serviceTypeId: serviceType,
                buildingId: buildingId
            }).toPromise();
            return this.prepareTodaysConsumption([data], chartDashboardType);
        });
    }
    /*
      Get building group todays consumption
    */
    getBuildingGroupTodaysConsumption(serviceType, from, to, groupId, chartDashboardType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = [];
            let buildings = this.initialService.navigationStore.getBuildingsByBuildingGroup(groupId);
            for (let building of buildings) {
                let buildingData = yield this.dataService.get(this.config.endPoints['trend-log-data-building'], {
                    startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                    endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                    interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].ThirtyMin,
                    serviceTypeId: serviceType,
                    buildingId: building.buildingID
                }).toPromise();
                data.push(buildingData);
            }
            return this.prepareTodaysConsumption(data, chartDashboardType);
        });
    }
    /*
      Prepare todays consumption empty chart
    */
    getTodaysConsumptionEmptyChart(chartDashboardType) {
        return this.prepareTodaysConsumption([null], chartDashboardType);
    }
    /*
      Prepare todays consumption
    */
    prepareTodaysConsumption(responses, chartType) {
        let data = this.generateTrendDaylyData()[0].data;
        let chart = Object.assign({}, this.config.chartConfigurations["elec-trend-log"]);
        chart.xAxisName = this.config.chartConfigurations.chartCustomStrings.todaysConsumption[chartType].xAxisName;
        chart.yAxisName = this.config.chartConfigurations.chartCustomStrings.todaysConsumption[chartType].yAxisName;
        chart.exportFileName = this.config.chartConfigurations.chartCustomStrings.todaysConsumption[chartType].exportFileName;
        chart.total = 0;
        for (let building of responses) {
            if (Array.isArray(building)) {
                building[0].data.forEach((element, i) => {
                    if (element.value != null) {
                        data[i].value += element.value;
                        chart.total += data[i].value;
                    }
                });
            }
        }
        data.forEach(element => {
            element.value = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(element.value, this.config.siteConfigurations.decimalNumPrecision);
            element.toolText = `Time: $label{br}Consumption: ${this.thousandSeparator.transform(Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(element.value, this.config.siteConfigurations.decimalNumPrecision))} ${(chartType === src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_9__["default"].SITE_ELECTRICAL || chartType === src_enums_ChartDashboardType__WEBPACK_IMPORTED_MODULE_9__["default"].BUILDING_ELECTRICAL) ? 'kWh' : 'm³'}`;
        });
        return { chart, data };
    }
    /*
      Generate todays trend data
    */
    generateTrendDaylyData() {
        var time0 = new Date().setHours(0, 30, 0, 0);
        let labelAndValue = [];
        for (let i = 0; i < 48; i++) {
            labelAndValue.push({ "label": this.datePipe.transform(time0, 'HH:mm') === '00:00' ? '24:00' : this.datePipe.transform(time0, 'HH:mm'), "value": null });
            time0 = new Date(time0).setTime(new Date(time0).getTime() + 30 * 60 * 1000);
        }
        let data = [
            {
                "name": "Nanyang Technological University",
                "data": labelAndValue
            }
        ];
        return data;
    }
    /*
      Get site equipment distribution
    */
    getSiteEquipmentDistribution(serviceType, from, to, chartDashboardType, chartGroupType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = yield this.dataService.get(this.config.endPoints["site-consumption-data-mode"], {
                startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                groupId: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].BuildingCategory,
                serviceType: serviceType,
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].SecondaryThirtyMin,
                siteId: this.config.siteConfigurations.siteId,
                dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].OverallSum
            }).toPromise();
            return this.prepareEquipmentDistribution([data], chartDashboardType, src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_11__["DistributionChartType"].SMALL, chartGroupType, serviceType);
        });
    }
    /*
      Get building equipment distribution
    */
    getBuildingEquipmentDistribution(serviceType, from, to, buildingId, chartDashboardType, distributionChartType, chartGroupType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = yield this.dataService.get(this.config.endPoints["eq-distribution-building"], {
                startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                groupId: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].MeterType,
                serviceTypeId: serviceType,
                buildingId: buildingId,
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].SecondaryThirtyMin,
                siteId: this.config.siteConfigurations.siteId,
                dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].OverallSum
            }).toPromise();
            return this.prepareEquipmentDistribution([data], chartDashboardType, distributionChartType, chartGroupType, serviceType);
        });
    }
    /*
      Get building group equipment distribution
    */
    getBuildingGroupEquipmentDistribution(serviceType, from, to, groupId, chartDashboardType, distributionChartType, chartGroupType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = [];
            let buildings = this.initialService.navigationStore.getBuildingsByBuildingGroup(groupId);
            for (let building of buildings) {
                let dataSet = yield this.dataService.get(this.config.endPoints["eq-distribution-building"], {
                    startDate: this.datePipe.transform(from, 'yyyy/MM/dd'),
                    endDate: this.datePipe.transform(to, 'yyyy/MM/dd'),
                    groupId: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].MeterType,
                    serviceTypeId: serviceType,
                    buildingId: building.buildingID,
                    interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].SecondaryThirtyMin,
                    siteId: this.config.siteConfigurations.siteId,
                    dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].OverallSum
                }).toPromise();
                data.push(dataSet);
            }
            return this.prepareEquipmentDistribution(data, chartDashboardType, distributionChartType, chartGroupType, serviceType);
        });
    }
    /*
      Prepare equipment distribution
    */
    prepareEquipmentDistribution(responses, chartType, distributionChartType, chartGroupType, serviceType) {
        let processedData = [];
        for (let building of responses) {
            for (let dataItem of building) {
                let isIn = false;
                for (let item of processedData) {
                    if (dataItem.name === item.label) {
                        isIn = true;
                    }
                }
                if (!isIn) {
                    let color = this.getColorCode(chartGroupType, dataItem.itemId);
                    if (color == null) {
                        processedData.push({
                            label: dataItem.name,
                            value: null
                        });
                    }
                    else {
                        processedData.push({
                            label: dataItem.name,
                            value: null,
                            color: color
                        });
                    }
                }
            }
        }
        for (let building of responses) {
            for (let dataItem of building) {
                const key = processedData.findIndex(element => element.label == dataItem.name);
                if (dataItem.data[0].value != null) {
                    if (processedData[key].value == null) {
                        processedData[key].value = dataItem.data[0].value;
                    }
                    else {
                        processedData[key].value += dataItem.data[0].value;
                    }
                }
            }
        }
        let totalValue = 0;
        let unit = 'kWh';
        processedData.forEach(element => {
            if (element.value != null) {
                totalValue += element.value;
            }
        });
        if (serviceType == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER || serviceType == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].MAIN_WATER) {
            unit = 'm³';
        }
        processedData.forEach((element, i) => {
            let percentage = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(((element.value / totalValue) * 100), this.decimalNumPrecision) + ' %';
            let newValue = element.value;
            let { scalledNumber, suffix, unit } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["abbreviateNumber"])(element.value, serviceType);
            if (unit == 'm³') {
                element.value = scalledNumber;
            }
            else {
                suffix = '';
                element.value = element.value / 1000;
            }
            let value = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["fixDecimalNumPrecision"])(element.value, src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_17__["DECIMAL_MAP"].equipDistributionLg);
            processedData[i] = {
                displayValue: Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["chartTitle"])(element.label, this.thousandSeparator.transform(value), unit, percentage, (distributionChartType == src_enums_DustributionChartType__WEBPACK_IMPORTED_MODULE_11__["DistributionChartType"].SMALL), suffix),
                label: element.label,
                value: newValue,
                toolText: `Category: $label<br/>Consumption: ${this.thousandSeparator.transform(value)}${suffix} ${unit}<br/>Percentage: ${percentage}`
            };
            if (element.color !== undefined) {
                processedData[i].color = element.color;
            }
        });
        const chart = Object.assign({}, this.config.chartConfigurations['eq-distribution']);
        let equipDistribution = {
            chart,
            data: processedData
        };
        return equipDistribution;
    }
    /*
      Get site consumption summery chart
    */
    getSiteConsumptionChart(serviceType, from, to, interval) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = yield this.dataService.get(this.config.endPoints["trend-log"], {
                startDate: from,
                endDate: to,
                interval: interval == src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Daily ? src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Weekly : interval,
                serviceTypeId: serviceType,
                siteId: this.config.siteConfigurations.siteId
            }).toPromise();
            return this.prepareConsumptionSummeryChart([data], serviceType, interval, to);
        });
    }
    /*
      Get building consumption summery chart
    */
    getBuildingConsumptionChart(serviceType, from, to, buildingId, interval) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = yield this.dataService.get(this.config.endPoints['trend-log-data-building'], {
                startDate: from,
                endDate: to,
                interval: interval == src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Daily ? src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Weekly : interval,
                serviceTypeId: serviceType,
                buildingId: buildingId
            }).toPromise();
            return this.prepareConsumptionSummeryChart([data], serviceType, interval, to);
        });
    }
    /*
      Get building group consumption summery chart
    */
    getBuildingGroupConsumptionChart(serviceType, from, to, groupId, interval) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let data = [];
            let buildings = this.initialService.navigationStore.getBuildingsByBuildingGroup(groupId);
            for (let building of buildings) {
                let buildingData = yield this.dataService.get(this.config.endPoints['trend-log-data-building'], {
                    startDate: from,
                    endDate: to,
                    interval: interval == src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Daily ? src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Weekly : interval,
                    serviceTypeId: serviceType,
                    buildingId: building.buildingID
                }).toPromise();
                data.push(buildingData);
            }
            return this.prepareConsumptionSummeryChart(data, serviceType, interval, to);
        });
    }
    /**
     * get empty chart for weekly, monthly, yearly and 5 years trend log charts
     * @param serviceType
     * @param interval
     */
    getEmptyConsumptionChart(serviceType, interval) {
        return this.prepareConsumptionSummeryChart([], serviceType, interval);
    }
    /*
      Prepare consumption chart
    */
    prepareConsumptionSummeryChart(responses, serviceType, interval, to = new Date()) {
        if (serviceType == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].MAIN_WATER) {
            serviceType = _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].WATER;
        }
        let data = [];
        switch (interval) {
            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Daily:
                data = this.generateConsumptionData(7, 'days', 'MMM-dd', to);
                // this.generateWeekConsumption();
                break;
            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Weekly:
                data = this.generateConsumptionData(31, 'days', 'MMM-dd', to);
                // data = this.generateMonthConsumption();
                break;
            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Monthly:
                data = this.generateConsumptionData(12, 'month', 'MMM-yyyy', to);
                // data = this.generateYearConsumption();
                break;
            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Yearly:
                data = this.generateConsumptionData(4, 'years', 'yyyy', to);
                // data = this.generateFiveYearConsumption();
                break;
        }
        let chart = Object.assign({}, this.config.chartConfigurations["elec-trend-log"]);
        chart.plotToolText = this.config.chartConfigurations.chartCustomStrings.consumptionSummery[serviceType][interval].plotToolText;
        chart.xAxisName = this.config.chartConfigurations.chartCustomStrings.consumptionSummery[serviceType][interval].xAxisName;
        chart.yAxisName = this.config.chartConfigurations.chartCustomStrings.consumptionSummery[serviceType][interval].yAxisName;
        chart.exportFileName = this.config.chartConfigurations.chartCustomStrings.consumptionSummery[serviceType][interval].exportFileName;
        let unit;
        if (serviceType == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL) {
            unit = 'kWh';
        }
        else {
            unit = 'm³';
        }
        responses.forEach(building => {
            if (building) {
                console.log(data, building[0].data);
                data.forEach((dataItem = {}, i) => {
                    const element = building[0].data[i];
                    if (element) {
                        if (element.value) {
                            data[i].value += element.value;
                        }
                        // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'MMMM-dd')}<br>Consumption: ${moneyFormat((data[i].value/1000 || 0).toFixed(DECIMAL_MAP.trendLogs))} ${unit}`;
                        if (_enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL == serviceType || _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].MAIN_HT_ELECTRICAL == serviceType) {
                            const item = data[i];
                            const newValue = item.value / 1000;
                            data[i] = Object.assign({}, item, { value: item.value ? newValue : null, displayValue: item.value ? Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["moneyFormat"])((newValue || 0).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_17__["DECIMAL_MAP"].trendLogs)) : null, toolText: "Day: $label <br/> Consumption: $displayValue kWh" });
                        }
                        switch (interval) {
                            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Daily:
                                data[i].label = this.datePipe.transform(element.label, 'MMM-dd');
                                // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'MMMM-dd')}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                                chart.maxColWidth = 64;
                                break;
                            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Weekly:
                                data[i].label = this.datePipe.transform(element.label, 'MMM-dd');
                                // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'MMMM-dd')}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                                chart.maxColWidth = 20;
                                break;
                            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Monthly:
                                data[i].label = this.datePipe.transform(element.label, 'MMM-yyyy');
                                // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'MMMM-yyyy')}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                                chart.maxColWidth = 42;
                                break;
                            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Yearly:
                                data[i].label = element.label;
                                // data[i].tooltext = `${chart.xAxisName}: ${element.label}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                                chart.maxColWidth = 72;
                                break;
                            default:
                                data[i].label = this.datePipe.transform(element.label, 'yyyy/MMM/dd');
                                // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'yyyy/MMM/dd')}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                                chart.maxColWidth = 64;
                                break;
                        }
                    }
                });
                // building[0].data.forEach((element: any = {}, i) => {
                //   if(data[i]){
                //     if (element.value) {
                //       data[i].value += element.value;
                //     }
                //     // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'MMMM-dd')}<br>Consumption: ${moneyFormat((data[i].value/1000 || 0).toFixed(DECIMAL_MAP.trendLogs))} ${unit}`;
                //     if(ServiceType.ELECTRICAL == serviceType || ServiceType.MAIN_HT_ELECTRICAL == serviceType){
                //       const item = data[i];
                //       const newValue = item.value / 1000;
                //       data[i] = {
                //         ...item,
                //         value: item.value ? newValue : null,
                //         displayValue: item.value ? moneyFormat((newValue || 0).toFixed(DECIMAL_MAP.trendLogs)) : null,
                //         toolText: "Day: $label <br/> Consumption: $displayValue kWh",
                //       }
                //     }
                //     console.log(data[i]);
                //     switch (interval) {
                //       case Interval.Daily:
                //         data[i].label = this.datePipe.transform(element.label, 'MMM-dd');
                //         // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'MMMM-dd')}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                //         chart.maxColWidth = 64;
                //         break;
                //       case Interval.Weekly:
                //         data[i].label = this.datePipe.transform(element.label, 'MMM-dd');
                //         // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'MMMM-dd')}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                //         chart.maxColWidth = 20;
                //         break;
                //       case Interval.Monthly:
                //         data[i].label = this.datePipe.transform(element.label, 'MMM-yyyy');
                //         // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'MMMM-yyyy')}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                //         chart.maxColWidth = 42;
                //         break;
                //       case Interval.Yearly:
                //         data[i].label = element.label;
                //         // data[i].tooltext = `${chart.xAxisName}: ${element.label}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                //         chart.maxColWidth = 72;
                //         break;
                //       default:
                //         data[i].label = this.datePipe.transform(element.label, 'yyyy/MMM/dd');
                //         // data[i].tooltext = `${chart.xAxisName}: ${this.datePipe.transform(element.label, 'yyyy/MMM/dd')}<br>Consumption: ${this.thousandSeparator.transform(fixDecimalNumPrecision(data[i].value, this.config.siteConfigurations.decimalNumPrecision))} ${unit}`;
                //         chart.maxColWidth = 64;
                //         break;
                //     }
                //   }
                // });
            }
        });
        return { chart, data };
    }
    getConvertedDateString(date, interval) {
        switch (interval) {
            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Daily:
                return this.datePipe.transform(date, 'MMM-dd');
            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Weekly:
                return this.datePipe.transform(new Date(date), 'MMM-dd');
            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Monthly:
                return this.datePipe.transform(date, 'yyyy-MMM');
            case src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].Yearly:
                return this.datePipe.transform(date, 'yyyy');
        }
    }
    // private generateWeekConsumption() {
    //   let daysLastSeven = this.dateService.getLastDays(this.today, 7, 'days');
    //   let data = [];
    //   for (let i = 0; i < 7; i++) {
    //     data.push(
    //       {
    //         label: this.datePipe.transform(daysLastSeven[i], 'MMM-dd'),
    //         value: null,
    //         tooltext: ''
    //       }
    //     );
    //   }
    //   return data;
    // }
    /*
      Generate month consumption
    */
    // private generateMonthConsumption() {
    //   let lastThirtyDays = this.dateService.getLastDays(this.today, 30, 'days');
    //   let data = [];
    //   for (let num = 0; num < 30; num++) {
    //     data.push ({
    //       label: this.datePipe.transform(lastThirtyDays[num], 'MMM-dd'),
    //       value: null,
    //       tooltext: ''
    //     });
    //   }
    //   return data;
    // }
    /*
      Generate year consumption
    */
    // private generateYearConsumption() {
    //   let data = [];
    //   let months = this.dateService.getLastDays(this.today, 12, 'month');
    //   for (let i = 0; i < 12; i++) {
    //     data.push({
    //       label: this.datePipe.transform(months[i], 'MMM-yyyy'),
    //       value:  null,
    //       tooltext: ''
    //     });
    //   }
    //   return data;
    // }
    /*
      Generate 5 year consumption
    */
    // private generateFiveYearConsumption() {
    //   let data = [];
    //   for (let i = 4; i >= 0; i--) {
    //     data.push({
    //       label: this.datePipe.transform(this.getDemoDate().setFullYear(this.getDemoDate().getFullYear() - i), 'yyyy'),
    //       value: null,
    //       tooltext: ''
    //     });
    //   }
    //   return data;
    // }
    /*
      Get Demo Date
    */
    getDemoDate() {
        if (this.config.config.demo) {
            return new Date(this.config.config.demoDate);
        }
        else {
            return new Date();
        }
    }
    /*
      Get color code
    */
    getColorCode(chartGroupType, itemId) {
        let item;
        let color;
        switch (chartGroupType) {
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_12__["default"].METER:
                return '';
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_12__["default"].BUILDING_CATEGORY:
                item = lodash_find__WEBPACK_IMPORTED_MODULE_13___default()(this.initialService.navigationStore.buildingCategories, { buildingCategoryID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_12__["default"].METER_TYPES:
                item = lodash_find__WEBPACK_IMPORTED_MODULE_13___default()(this.initialService.navigationStore.meterTypes, { meterTypeID: itemId });
                return this.getDefaultColorCode(item);
            case src_enums_ChartGroupType__WEBPACK_IMPORTED_MODULE_12__["default"].HT_LOOPS:
                return '';
        }
    }
    getDefaultColorCode(item) {
        let color;
        if (item === undefined || item.attributes.length === 0) {
            return this.config.config.defaultColorCode;
        }
        else {
            color = lodash_find__WEBPACK_IMPORTED_MODULE_13___default()(item.attributes, { textId: this.config.config.attributes.COLOR_CODE });
            return color === null || color === undefined ? this.config.config.defaultColorCode : color.value;
        }
    }
    /*
      Get site equipment breakdown
    */
    getSiteEquipmentBreakdown(serviceType, dateRange) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const rows = [];
                const data = yield this.dataService.get(this.config.endPoints['site-eq-breakdown'], {
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd hh:mm a'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd hh:mm a'),
                    serviceTypeId: serviceType,
                    interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].SecondaryThirtyMin,
                    groupBy: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].Building,
                    dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].OverallSum,
                }).toPromise();
                data.forEach(element => {
                    let { scalledNumber, suffix, unit } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["abbreviateNumber"])(element.Value, serviceType);
                    let consumption = scalledNumber + suffix;
                    if (serviceType == _enums_ServiceType__WEBPACK_IMPORTED_MODULE_4__["ServiceType"].ELECTRICAL) {
                        consumption = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_10__["moneyFormat"])((element.Value / 1000).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_17__["DECIMAL_MAP"].electricalBreakDown));
                    }
                    rows.push({
                        category: element.BuildingCategoryName,
                        building: element.BuildingName,
                        noOfMeters: element.MeterCount,
                        consumption: consumption
                    });
                });
                return rows;
            }
            catch (err) {
                console.log(err);
            }
        });
    }
    getBuildingGroupEqBreakDown(groupId, serviceType, dateRange) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                const data = yield this.dataService.get(this.config.endPoints["building-group-eq-breakdown"], {
                    groupId,
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd hh:mm a'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd hh:mm a'),
                    serviceTypeId: serviceType,
                    interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_6__["Interval"].SecondaryThirtyMin,
                    groupBy: src_enums_group_by__WEBPACK_IMPORTED_MODULE_8__["GroupBy"].Meter,
                    dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_7__["DataMode"].OverallSum
                }).toPromise();
                const returnData = [];
                data.forEach(element => {
                    returnData.push({
                        group: { name: element.BuildingGroupName, id: groupId },
                        block: { name: element.BuildingName, id: element.BuildingID },
                        meter: { name: element.MeterName, id: element.MeterID, value: element.Value },
                        level: { name: element.LevelName, id: element.LevelID },
                        eqType: { name: element.MeterTypeName, id: element.MeterTypeID },
                        eqCode: { name: element.MeterName, id: element.MeterID },
                        value: { name: element.Value, id: null }
                    });
                });
                return returnData;
            }
            catch (error) {
                console.log(error);
            }
        });
    }
};
LtDashboardService.ctorParameters = () => [
    { type: _http_service__WEBPACK_IMPORTED_MODULE_3__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_1__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_1__["InitialService"] },
    { type: _date_service_service__WEBPACK_IMPORTED_MODULE_14__["DateServiceService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_15__["ThousandSeparatorPipe"] },
    { type: _gfa_service__WEBPACK_IMPORTED_MODULE_16__["GfaService"] }
];
LtDashboardService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["Injectable"])({
        providedIn: 'root'
    })
], LtDashboardService);



/***/ }),

/***/ "./app/services/dashboards/report.service.ts":
/*!***************************************************!*\
  !*** ./app/services/dashboards/report.service.ts ***!
  \***************************************************/
/*! exports provided: ReportService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportService", function() { return ReportService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../http.service */ "./app/services/http.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var src_util_StringHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/util/StringHelper */ "./util/StringHelper.ts");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");







let ReportService = class ReportService {
    constructor(httpService, configs, datePipe, initialService, notifierService) {
        this.httpService = httpService;
        this.configs = configs;
        this.datePipe = datePipe;
        this.initialService = initialService;
        this.notifierService = notifierService;
        this.notifier = this.notifierService;
    }
    generateReport(categoryId, categoryName, serviceType, reportType, dateRange, buttonText) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let res = yield this.httpService.get(this.configs.endPoints['generate-report'], {
                    categoryId,
                    categoryName,
                    serviceType,
                    reportType,
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd')
                }).toPromise();
                if (res.StatusCode == 200 && res.Message == 'Success') {
                    if (buttonText == 'Regenerate') {
                        this.notifier.notify('success', 'Report Successfully Regenerated');
                    }
                    else {
                        this.notifier.notify('success', 'Report Successfully Generated');
                    }
                    return 'Regenerate';
                }
                else if (res.StatusCode == 200 && res.Message == 'Failed') {
                    if (buttonText == 'Regenerate') {
                        this.notifier.notify('error', 'Failed to Regenerate Report');
                    }
                    else {
                        this.notifier.notify('error', 'Failed to Generate Report');
                    }
                    return 'Generate';
                }
                else {
                    this.notifier.notify('error', 'Something Went Wrong');
                    return 'Generate';
                }
            }
            catch (e) {
                return 'Generate';
            }
        });
    }
    isReportAvailable(categoryId, categoryName, serviceType, reportType, dateRange) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let res = yield this.httpService.get(this.configs.endPoints['is-report-available'], {
                    categoryId,
                    categoryName,
                    serviceType,
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd'),
                    reportType
                }).toPromise();
                if (res.StatusCode == 200 && res.Message == 'Success') {
                    return 'Regenerate';
                }
                else if (res.StatusCode == 200 && res.Message == 'Failed') {
                    return 'Generate';
                }
                else {
                    return 'Generate';
                }
            }
            catch (e) {
                return 'Generate';
            }
        });
    }
    downloadAsExcel(categoryId, categoryName, serviceType, reportType, dateRange) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let url = Object(src_util_StringHelper__WEBPACK_IMPORTED_MODULE_4__["buildPlaceholder"])(`${this.initialService.getHost()}/${this.configs.endPoints['download-as-excel']}`, {
                    categoryId,
                    categoryName,
                    serviceType,
                    from: this.datePipe.transform(dateRange.start, 'yyyy/MM/dd'),
                    to: this.datePipe.transform(dateRange.end, 'yyyy/MM/dd'),
                    reportType
                });
                let newTab;
                this.isReportAvailable(categoryId, categoryName, serviceType, reportType, dateRange).then(res => {
                    if (res == 'Regenerate') {
                        newTab = window.open(url);
                        this.notifier.notify('success', 'Report Successfully Downloaded');
                    }
                    else {
                        this.notifier.notify('error', 'Failed to Download Report');
                    }
                });
            }
            catch (e) {
                this.notifier.notify('error', 'Something Went Wrong');
            }
        });
    }
    getSchedules(serviceType, locationType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let scheduleData = [];
                let res = yield this.httpService.get(this.configs.endPoints['get-schedules'], {
                    serviceType,
                    locationType
                }).toPromise();
                if (res[0] && res[0].scheduleId) {
                    res.forEach(element => {
                        scheduleData.push({
                            id: element.scheduleId,
                            scheduleName: element.name,
                            reportType: element.reportType,
                            site: element.scheduleAttributes.siteId ? {
                                id: element.scheduleAttributes.siteId,
                                name: this.initialService.navigationStore.getSiteNameBySiteId(Number(element.scheduleAttributes.siteId))[0].siteName
                            } : { id: null, name: '' },
                            buildingGroup: element.scheduleAttributes.buildingGroupId ? {
                                id: element.scheduleAttributes.buildingGroupId,
                                name: this.initialService.navigationStore.getBuildingGroupById(Number(element.scheduleAttributes.buildingGroupId))[0] ?
                                    this.initialService.navigationStore.getBuildingGroupById(Number(element.scheduleAttributes.buildingGroupId))[0].description : 'N/A'
                            } : { id: null, name: '' },
                            building: element.scheduleAttributes.buildingId ? {
                                id: element.scheduleAttributes.buildingId,
                                name: this.initialService.navigationStore.getBuilding(Number(element.scheduleAttributes.buildingId))[0].buildingName
                            } : { id: null, name: '' },
                            startDate: element.startDate.substr(0, 10),
                            status: element.status == 1 ? 'ACTIVE' : 'INACTIVE',
                        });
                    });
                }
                return scheduleData;
            }
            catch (e) {
                return [];
            }
        });
    }
    insertSchedule(schedule) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let res = yield this.httpService.post(this.configs.endPoints['insert-schedule'], schedule, {}).toPromise();
                if (res.StatusCode == 200 && res.Message == 'Success') {
                    this.notifier.notify('success', 'Schedule Successfully Added');
                }
                else if (res.StatusCode == 200 && res.Message == 'Failed') {
                    this.notifier.notify('error', 'Failed to Add the Schedule');
                }
                else if (res.StatusCode == 467) {
                    this.notifier.notify('warning', 'Schedule is Already Exists');
                }
                else {
                    this.notifier.notify('error', 'Something Went Wrong');
                }
            }
            catch (e) { }
        });
    }
    editSchedule(scheduleId, schedule) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let res = yield this.httpService.put(this.configs.endPoints['edit-schedule'], { scheduleId }, schedule).toPromise();
                if (res.StatusCode == 200 && res.Message == 'Success') {
                    this.notifier.notify('success', 'Schedule Successfully Edited');
                }
                else if (res.StatusCode == 200 && res.Message == 'Failed') {
                    this.notifier.notify('error', 'Failed to Edit the Schedule');
                }
                else if (res.StatusCode == 467) {
                    this.notifier.notify('warning', 'Schedule is Already Exists');
                }
                else {
                    this.notifier.notify('error', 'Something Went Wrong');
                }
            }
            catch (e) { }
        });
    }
    deleteSchedule(scheduleId) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            try {
                let res = yield this.httpService.delete(this.configs.endPoints['delete-schedule'], { scheduleId }).toPromise();
                if (res.StatusCode == 200 && res.Message == 'Success') {
                    this.notifier.notify('success', 'Schedule Successfully Deleted');
                }
                else if (res.StatusCode == 200 && res.Message == 'Failed') {
                    this.notifier.notify('error', 'Failed to Delete the Schedule');
                }
                else {
                    this.notifier.notify('error', 'Something Went Wrong');
                }
            }
            catch (e) { }
        });
    }
};
ReportService.ctorParameters = () => [
    { type: _http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_5__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_5__["InitialService"] },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_6__["NotifierService"] }
];
ReportService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], ReportService);



/***/ }),

/***/ "./app/services/date-service.service.ts":
/*!**********************************************!*\
  !*** ./app/services/date-service.service.ts ***!
  \**********************************************/
/*! exports provided: DateServiceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateServiceService", function() { return DateServiceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../widgets/date-range-picker/public-api */ "./app/widgets/date-range-picker/public-api.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ "../node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);





let DateServiceService = class DateServiceService {
    constructor(datePipe) {
        this.datePipe = datePipe;
        this.getRoundedHalfHour = (minutes, d = new Date()) => {
            let ms = 1000 * 60 * minutes;
            let roundedDate;
            roundedDate = new Date(Math.round(d.getTime() / ms) * ms);
            if (roundedDate >= d) {
                roundedDate = new Date(roundedDate.setMinutes(roundedDate.getMinutes() - 30));
            }
            return roundedDate;
        };
        this.getRoundedHalfHourRange = (minutes, d = new Date()) => {
            let ms = 1000 * 60 * minutes;
            let roundedDate;
            roundedDate = new Date(Math.round(d.getTime() / ms) * ms);
            if (roundedDate > d) {
                roundedDate = new Date(roundedDate.setMinutes(roundedDate.getMinutes() - 30));
            }
            return roundedDate;
        };
    }
    setDate(date, month, year) {
        const dateObject = new Date();
        dateObject.setDate(date);
        dateObject.setMonth(month);
        dateObject.setFullYear(year);
        return dateObject;
    }
    setDateRange(month, date, year) {
        const dateRange = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        dateRange.start = new Date();
        dateRange.end = new Date();
        dateRange.start.setDate(date);
        dateRange.start.setMonth(month);
        dateRange.start.setFullYear(year);
        return dateRange;
    }
    // getMonthArrayFromDateRange(dateRange:DateRange) {
    //   var dateStart = moment(dateRange.start);
    //   var dateEnd = moment(dateRange.end);
    //   var timeValues = [];
    //   while (dateEnd > dateStart) {
    //      timeValues.push(dateStart.format('YYYY-MMM'));
    //      dateStart.add(1,'month');
    //   }
    //   return timeValues;
    // }
    getDateRangeDateList(dateRange, mode) {
        var dateStart = moment__WEBPACK_IMPORTED_MODULE_4___default()(dateRange.start);
        var dateEnd = moment__WEBPACK_IMPORTED_MODULE_4___default()(dateRange.end);
        var timeValues = [];
        while (dateEnd > dateStart) {
            timeValues.push(dateStart.format('yyyy-MM-DD hh:mm:ss'));
            dateStart.add(1, mode);
        }
        return timeValues;
    }
    getToday(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        // date.start.setMonth(today.getMonth());
        date.start.setDate(today.getDate());
        // date.start.setFullYear(today.getFullYear());
        // date.end.setMonth(date.end.getMonth());
        date.end.setDate(date.end.getDate() + 1);
        // date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getTodayUpToNow(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setHours(0);
        date.start.setMinutes(0);
        date.start.setSeconds(0);
        // date.start.setFullYear(today.getFullYear());
        // date.end.setMonth(date.end.getMonth());
        // date.end.setDate(date.end.getDate()+1);
        // date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getThisWeek(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        let weekFirst = today.getDate() - today.getDay() + (today.getDay() === 0 ? -6 : 1);
        let weekLast = weekFirst + 7;
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(date.start.getMonth());
        date.start.setDate(weekFirst);
        date.end.setMonth(date.end.getMonth());
        date.end.setDate(weekLast);
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getLastSevenDays(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        let start = today.getDate() - 7;
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(date.start.getMonth());
        date.start.setDate(start);
        date.end.setMonth(date.end.getMonth());
        date.end.setDate(today.getDate());
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getLastDays(today, numOfDays, mode) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        if (mode.includes("days")) {
            date.start.setDate(date.start.getDate() - numOfDays);
        }
        else if (mode.includes("month")) {
            date.start.setMonth(date.start.getMonth() - numOfDays);
        }
        else if (mode.includes("year")) {
            date.start.setFullYear(date.start.getFullYear() - numOfDays);
        }
        let rangeList = this.getDateRangeDateList(date, mode);
        return rangeList;
    }
    getLastDaysRange(today, numOfDays, mode) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        if (mode.includes("days")) {
            date.start.setDate(date.start.getDate() - numOfDays);
        }
        else if (mode.includes("month")) {
            date.start.setMonth(date.start.getMonth() - numOfDays);
        }
        else if (mode.includes("year")) {
            date.start.setFullYear(date.start.getFullYear() - numOfDays);
        }
        return date;
    }
    getLastDay(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        let start = today.getDate() - 1;
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(date.start.getMonth());
        date.start.setDate(start);
        date.end.setMonth(date.end.getMonth());
        date.end.setDate(today.getDate());
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getTwoMonth(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setDate(1);
        date.end.setDate(1);
        date.start.setMonth(date.start.getMonth() - 2);
        date.end.setMonth(date.end.getMonth());
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getThisMonth(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today.getFullYear(), today.getMonth() + 1, 1);
        date.start = new Date(today);
        date.start.setMonth(date.start.getMonth());
        date.start.setDate(1);
        date.start.setFullYear(date.start.getFullYear());
        date.end.setMonth(date.end.getMonth());
        date.end.setDate(1);
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    thisMonthUpToNow(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(date.start.getMonth());
        date.start.setDate(1);
        return date;
    }
    getThisYear(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(0);
        date.start.setDate(1);
        date.start.setFullYear(date.start.getFullYear());
        date.end.setMonth(date.end.getMonth());
        date.end.setDate(date.end.getDate());
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getThisFullYear(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(0);
        date.start.setDate(1);
        date.start.setFullYear(date.start.getFullYear());
        date.end.setMonth(11);
        date.end.setDate(32);
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getLastyears(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(0);
        date.start.setDate(1);
        date.start.setFullYear(date.start.getFullYear() - 1);
        date.end.setMonth(0);
        date.end.setDate(1);
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getLastFiveYear(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(0);
        date.start.setDate(1);
        date.start.setFullYear(date.start.getFullYear() - 5);
        date.end.setMonth(0);
        date.end.setDate(1);
        date.end.setFullYear(date.end.getFullYear());
        return date;
    }
    getLastMonth(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setMonth(today.getMonth() - 1);
        date.start.setDate(1);
        date.end.setMonth(today.getMonth());
        date.end.setDate(1);
        date.end.setFullYear(today.getFullYear());
        return date;
    }
    getLastSixMonth(today) {
        let date = new _widgets_date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"]();
        date.end = new Date(today);
        date.start = new Date(today);
        date.start.setDate(1);
        date.start.setMonth(date.start.getMonth() - 6);
        date.end.setMonth(today.getMonth());
        date.end.setDate(1);
        date.end.setFullYear(today.getFullYear());
        return date;
    }
    /**
     * time => 'HH:mm'
     * @param time
     */
    getHalfHourDifference(time) {
        let hour = parseInt(time.slice(0, 2));
        let minutes = parseInt(time.slice(3, 5));
        let start;
        let end;
        if (0 <= minutes && minutes <= 29) {
            start = '00';
            end = '30';
            if (23 <= hour) {
                return {
                    startTime: `23:${start}`,
                    endTime: `23:${end}`
                };
            }
            else {
                return {
                    startTime: `${hour}:${start}`,
                    endTime: `${hour}:${end}`
                };
            }
        }
        else {
            start = '30';
            end = '00';
            if (23 <= hour) {
                return {
                    startTime: `23:${start}`,
                    endTime: `00:${end}`
                };
            }
            else {
                return {
                    startTime: `${hour}:${start}`,
                    endTime: `${hour + 1}:${end}`
                };
            }
        }
    }
};
DateServiceService.ctorParameters = () => [
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] }
];
DateServiceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], DateServiceService);



/***/ }),

/***/ "./app/services/equipment-breakdown.service.ts":
/*!*****************************************************!*\
  !*** ./app/services/equipment-breakdown.service.ts ***!
  \*****************************************************/
/*! exports provided: EquipmentBreakdownService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EquipmentBreakdownService", function() { return EquipmentBreakdownService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _http_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./http.service */ "./app/services/http.service.ts");
/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/map */ "../node_modules/lodash/map.js");
/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_map__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var lodash_assign__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/assign */ "../node_modules/lodash/assign.js");
/* harmony import */ var lodash_assign__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_assign__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/find */ "../node_modules/lodash/find.js");
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var src_enums_intervals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/enums/intervals */ "./enums/intervals.ts");
/* harmony import */ var src_enums_DataMode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/enums/DataMode */ "./enums/DataMode.ts");
/* harmony import */ var src_enums_group_by__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/enums/group-by */ "./enums/group-by.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./initial.service */ "./app/services/initial.service.ts");












let EquipmentBreakdownService = class EquipmentBreakdownService {
    constructor(dataService, configs, datePipe) {
        this.dataService = dataService;
        this.configs = configs;
        this.datePipe = datePipe;
        this.breakDownDataOnRecieve = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    requestMeterData(buildings) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["forkJoin"])([...buildings]);
    }
    requestBuildingData(buildingId, buildingName, groupId, groupName, serviceType, fromDate, toDate) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const processedData = [];
            const buildingMeters = yield this.dataService.get(this.configs.endPoints['building-service-type-all-meters'], { buildingId, serviceTypeId: serviceType }).toPromise();
            const consumption = yield this.dataService.get(this.configs.endPoints['building-meter-consumption'], {
                buildingId,
                serviceTypeId: serviceType,
                startDate: this.datePipe.transform(fromDate, 'yyyy/MM/dd'),
                endDate: this.datePipe.transform(toDate, 'yyyy/MM/dd'),
                interval: src_enums_intervals__WEBPACK_IMPORTED_MODULE_7__["Interval"].SecondaryThirtyMin,
                dataMode: src_enums_DataMode__WEBPACK_IMPORTED_MODULE_8__["DataMode"].OverallSum,
                groupId: src_enums_group_by__WEBPACK_IMPORTED_MODULE_9__["GroupBy"].Meter
            }).toPromise();
            const arrResult = lodash_map__WEBPACK_IMPORTED_MODULE_4___default()(buildingMeters, obj => {
                return lodash_assign__WEBPACK_IMPORTED_MODULE_5___default()(obj, lodash_find__WEBPACK_IMPORTED_MODULE_6___default()(consumption, {
                    meterId: obj.meterID
                }));
            });
            arrResult.forEach(item => {
                processedData.push({
                    group: { name: groupName, id: groupId },
                    block: { name: buildingName, id: buildingId },
                    meter: { name: item.meterName, id: item.meterID, value: item.value },
                    level: { name: item.level, id: item.levelID },
                    eqType: { name: item.meterType, id: item.meterTypeID },
                    eqCode: { name: item.meterName, id: item.meterID }
                });
            });
            return processedData;
        });
    }
    requestBuildingGroupData(groupId, groupName, serviceType, fromDate, toDate) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const processedData = [];
            const buildings = yield this.dataService.get(this.configs.endPoints['site-building-group-all-buildings'], {
                siteId: 1,
                groupId
            }).toPromise();
            for (const building of buildings) {
                const buildingData = yield this.requestBuildingData(building.buildingID, building.buildingName, groupId, groupName, serviceType, fromDate, toDate);
                processedData.push(...buildingData);
            }
            return processedData;
        });
    }
};
EquipmentBreakdownService.ctorParameters = () => [
    { type: _http_service__WEBPACK_IMPORTED_MODULE_3__["HttpService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_11__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_10__["DatePipe"] }
];
EquipmentBreakdownService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], EquipmentBreakdownService);



/***/ }),

/***/ "./app/services/header.service.ts":
/*!****************************************!*\
  !*** ./app/services/header.service.ts ***!
  \****************************************/
/*! exports provided: HeaderService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderService", function() { return HeaderService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _http_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./http.service */ "./app/services/http.service.ts");
/* harmony import */ var src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./initial.service */ "./app/services/initial.service.ts");






let HeaderService = class HeaderService {
    constructor(dataService, configService) {
        this.dataService = dataService;
        this.configService = configService;
        this.showPanel = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](false);
        this.panelView = this.showPanel.asObservable();
        this.item = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]('N/A');
        this.buildingMenuItems = null;
        this.electricalDashboardType = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_4__["DashboardType"].LOW_TENSION);
        this.boardLevel = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](0);
        this.serviceType = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](0);
        this.isSideBarActive = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](false);
        this.chartWidth = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](window.innerWidth - 110);
        this.navigationChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    changePanelVisibility(show) {
        this.showPanel.next(show);
    }
    setItem(item) {
        this.item.next(item);
    }
    setBoardLevel(level) {
        this.boardLevel.next(level);
    }
    toggleSideBar() {
        this.isSideBarActive.next(!this.isSideBarActive.value);
        if (this.isSideBarActive.value) {
            this.chartWidth.next(window.innerWidth - 320);
        }
        else {
            this.chartWidth.next(window.innerWidth - 100);
        }
    }
    getChartWidth() {
        return this.chartWidth.asObservable();
    }
    getBuildingMenu() {
        return this.buildingMenuItems;
    }
    setBuildingMenu(menuList) {
        this.buildingMenuItems = menuList;
    }
    fireNavigationChanged() {
        this.navigationChanged.emit();
    }
};
HeaderService.ctorParameters = () => [
    { type: _http_service__WEBPACK_IMPORTED_MODULE_3__["HttpService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_5__["InitialService"] }
];
HeaderService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], HeaderService);



/***/ }),

/***/ "./app/services/http.service.ts":
/*!**************************************!*\
  !*** ./app/services/http.service.ts ***!
  \**************************************/
/*! exports provided: HttpService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpService", function() { return HttpService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _util_StringHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util/StringHelper */ "./util/StringHelper.ts");






let HttpService = class HttpService {
    constructor(http, configs, initialService) {
        this.http = http;
        this.configs = configs;
        this.initialService = initialService;
        this.siteId = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](0);
        this.buildingId = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](0);
        this.serviceTypeId = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](0);
    }
    get(url, ids) {
        return this.http.get(Object(_util_StringHelper__WEBPACK_IMPORTED_MODULE_5__["buildPlaceholder"])(this.initialService.getHost() + "/" + url, Object.assign({ siteId: this.siteId.value, buildingId: this.buildingId.value, serviceTypeId: this.serviceTypeId.value }, ids)));
    }
    post(url, data, ids) {
        return this.http.post(Object(_util_StringHelper__WEBPACK_IMPORTED_MODULE_5__["buildPlaceholder"])(this.initialService.getHost() + "/" + url, Object.assign({ siteId: this.siteId.value, buildingId: this.buildingId.value, serviceTypeId: this.serviceTypeId.value }, ids)), data);
    }
    getRequest(url, ids) {
        return this.http.get((this.initialService.getHost() + "/" + url, Object.assign({ siteId: this.siteId.value, buildingId: this.buildingId.value, serviceTypeId: this.serviceTypeId.value }, ids)));
    }
    put(url, ids, body) {
        return this.http.put(Object(_util_StringHelper__WEBPACK_IMPORTED_MODULE_5__["buildPlaceholder"])(this.initialService.getHost() + '/' + url, Object.assign({}, ids)), body);
    }
    delete(url, ids) {
        return this.http.delete(Object(_util_StringHelper__WEBPACK_IMPORTED_MODULE_5__["buildPlaceholder"])(this.initialService.getHost() + '/' + url, Object.assign({}, ids)));
    }
    setSiteId(siteId) {
        this.siteId.next(siteId);
    }
    setbuildingId(buildingId) {
        this.buildingId.next(buildingId);
    }
    setserviceTypeId(serviceTypeId) {
        this.serviceTypeId.next(serviceTypeId);
    }
};
HttpService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] }
];
HttpService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], HttpService);



/***/ }),

/***/ "./app/services/initial.service.ts":
/*!*****************************************!*\
  !*** ./app/services/initial.service.ts ***!
  \*****************************************/
/*! exports provided: InitialService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InitialService", function() { return InitialService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _store_equipment_breakdown_store_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../store/equipment-breakdown-store.service */ "./app/store/equipment-breakdown-store.service.ts");
/* harmony import */ var _store_navigation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../store/navigation.service */ "./app/store/navigation.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/assets/configs/site-configs.json */ "./assets/configs/site-configs.json");
var src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5___namespace = /*#__PURE__*/__webpack_require__.t(/*! src/assets/configs/site-configs.json */ "./assets/configs/site-configs.json", 1);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");







let InitialService = class InitialService {
    constructor(http, navigationStore, equipmentBreakdownStoreService) {
        this.http = http;
        this.navigationStore = navigationStore;
        this.equipmentBreakdownStoreService = equipmentBreakdownStoreService;
        this.config = null;
        this.env = null;
        this.endPoints = [];
        this.siteConfigurations = null;
        this.chartConfigurations = [];
        this.store = {
            navigation: null
        };
        this.store.navigation = this.navigationStore;
    }
    load() {
        return new Promise((resolve, reject) => {
            this.http.get('../assets/configs/appConfigs.json').subscribe((resEnv) => {
                this.env = resEnv;
                switch (this.env.mode) {
                    case "production": {
                        this.getConfigs('../assets/configs/appConfigsProd.json').subscribe((resConfig) => {
                            this.setConfig(resConfig);
                            resolve(true);
                        });
                        break;
                    }
                    case "development": {
                        this.getConfigs('../assets/configs/appConfigsDev.json').subscribe((resConfig) => {
                            this.setConfig(resConfig);
                            resolve(true);
                        });
                        break;
                    }
                    default: {
                        resolve(true);
                        break;
                    }
                }
            }, error => {
                console.log('Error while reading configurations:', error);
                reject(true);
            });
        });
    }
    setConfig(resConfig) {
        this.config = resConfig[0];
        this.endPoints = resConfig[1];
        this.siteConfigurations = resConfig[2];
        this.chartConfigurations = resConfig[3];
        this.startBootstrap();
    }
    getConfigs(url) {
        const configs = this.http.get(url);
        const endPoints = this.http.get('../assets/configs/end-points.json');
        const siteConfigs = this.http.get('../assets/configs/site-configs.json');
        const chartConfigs = this.http.get('../assets/configs/chart-configs.json');
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["forkJoin"])([configs, endPoints, siteConfigs, chartConfigs]);
    }
    loadGreenmarkConfigs() {
        try {
            this.http.get('../assets/configs/greenmarkConfigs.json')
                .subscribe(config => {
                this.greenmarkData = config;
            });
        }
        catch (e) {
        }
    }
    getGreenmarkData() {
        return this.greenmarkData;
    }
    startBootstrap() {
        this.getAllSites();
        this.loadGreenmarkConfigs();
        this.getAllBuildings();
        this.getAllBuildingCategories();
        this.getSiteName();
        this.getAllBuildingGroups();
        this.getAllMeterTypes();
        this.getAllHtLoops();
        this.getAllSubstations();
        this.getAllChillers();
        this.getAllLevels();
    }
    getHost() {
        return this.config.api_host;
    }
    isUnderMaintenece() {
        return this.config.maintenences.enabled;
    }
    getMaintainDueDate() {
        return this.config.maintenences.date;
    }
    getDemoConfig() {
        return {
            isDemo: this.config ? this.config.demo : true,
            demoDate: this.config ? this.config.demoDate : new Date(),
        };
    }
    getGreemarkConfigs() {
        return;
    }
    getVersion() {
        return this.config.version;
    }
    getAllSites() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints.sites}`, {})).subscribe((res) => {
            this.navigationStore.sites = res;
        });
    }
    getAllMeterTypes() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints["meter-types"]}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.meterTypes = res;
        });
    }
    getAllLevels() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints["site-all-levels"]}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.levels = res;
        });
    }
    getAllChillers() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints['site-all-chillers']}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.plants = res;
        });
    }
    getAllSubstations() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints["site-substations"]}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.subStations = res;
        });
    }
    getAllHtLoops() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints["ht-loops"]}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.htLoops = res;
        });
    }
    getAllBuildings() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints["site-all-buildings"]}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.buildings = res;
        });
    }
    getAllBuildingGroups() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints["site-all-building-groups"]}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.buildingGroups = res;
        });
    }
    getAllBuildingCategories() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints["site-categories"]}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.buildingCategories = res;
        });
    }
    getSiteName() {
        this.http.get(this.evalTemplateLiterals(`${this.config.api_host}/${this.endPoints.site}`, {
            siteId: src_assets_configs_site_configs_json__WEBPACK_IMPORTED_MODULE_5__.siteId
        })).subscribe((res) => {
            this.navigationStore.siteNameAndId = res;
        });
    }
    evalTemplateLiterals(string, params) {
        return Function(...Object.keys(params), 'return `' + string + '`')(...Object.values(params));
    }
};
InitialService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"] },
    { type: _store_navigation_service__WEBPACK_IMPORTED_MODULE_2__["NavigationService"] },
    { type: _store_equipment_breakdown_store_service__WEBPACK_IMPORTED_MODULE_1__["EquipmentBreakdownStoreService"] }
];
InitialService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])({
        providedIn: 'root'
    })
], InitialService);



/***/ }),

/***/ "./app/services/meter.service.ts":
/*!***************************************!*\
  !*** ./app/services/meter.service.ts ***!
  \***************************************/
/*! exports provided: MeterService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeterService", function() { return MeterService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _enums_intervals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../enums/intervals */ "./enums/intervals.ts");
/* harmony import */ var _enums_DataMode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../enums/DataMode */ "./enums/DataMode.ts");
/* harmony import */ var _enums_group_by__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../enums/group-by */ "./enums/group-by.ts");
/* harmony import */ var _date_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");









let MeterService = class MeterService {
    constructor(http, configs, dateService, initialService, datePipe) {
        this.http = http;
        this.configs = configs;
        this.dateService = dateService;
        this.initialService = initialService;
        this.datePipe = datePipe;
    }
    getBuildingMeterTree(buildingId, serviceType, isDirectMode = true) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.setDemoDate();
            const dataSource = [];
            const building = yield this.http.get(this.configs.endPoints.buildings, {
                buildingId
            }).toPromise();
            const buildingConsumtion = yield this.http.get(this.configs.endPoints['building-type-consumption'], {
                buildingId,
                serviceTypeId: serviceType,
                startDate: this.datePipe.transform(this.dateService.getTodayUpToNow(this.today).start, 'yyyy/MM/dd hh:mm a'),
                endDate: this.datePipe.transform(this.dateService.getTodayUpToNow(this.today).end, 'yyyy/MM/dd hh:mm a'),
                interval: _enums_intervals__WEBPACK_IMPORTED_MODULE_2__["Interval"].ThirtyMin,
                dataMode: _enums_DataMode__WEBPACK_IMPORTED_MODULE_3__["DataMode"].OverallSum
            }).toPromise();
            const meterConsumptions = yield this.http.get(this.configs.endPoints['building-meter-consumption'], {
                buildingId,
                serviceTypeId: serviceType,
                startDate: this.datePipe.transform(this.dateService.getTodayUpToNow(this.today).start, 'yyyy/MM/dd hh:mm a'),
                endDate: this.datePipe.transform(this.dateService.getTodayUpToNow(this.today).end, 'yyyy/MM/dd hh:mm a'),
                interval: _enums_intervals__WEBPACK_IMPORTED_MODULE_2__["Interval"].ThirtyMin,
                dataMode: _enums_DataMode__WEBPACK_IMPORTED_MODULE_3__["DataMode"].OverallSum,
                groupId: _enums_group_by__WEBPACK_IMPORTED_MODULE_4__["GroupBy"].Meter
            }).toPromise();
            const meterLevels = yield this.getMeterLevel(meterConsumptions);
            if (isDirectMode) {
                return {
                    name: building.buildingName,
                    meter: buildingConsumtion[0].data[0].value,
                    quality: 1,
                    description: '',
                    parent: null,
                    children: [...meterLevels]
                };
            }
            else {
                dataSource.push({
                    name: building.buildingName,
                    description: '',
                    meter: buildingConsumtion[0].data[0].value,
                    quality: 1,
                    children: [...meterLevels]
                });
            }
            return dataSource;
        });
    }
    getGroupMeterTree(buildingGroupId, serviceType) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const buildingGroup = yield this.http.get(this.configs.endPoints['site-building-group'], { siteId: 1, groupId: buildingGroupId }).toPromise();
            const buildings = yield this.http.get(this.configs.endPoints['site-building-group-all-buildings'], { siteId: 1, groupId: buildingGroupId }).toPromise();
            let totalGroupConsumption = null;
            const buildingGroupData = [];
            for (const building of buildings) {
                const buildingMeters = yield this.getBuildingMeterTree(building.buildingID, serviceType, false);
                buildingGroupData.push(...buildingMeters);
            }
            buildingGroupData.forEach(item => {
                if (totalGroupConsumption !== null) {
                    totalGroupConsumption += item.meter;
                }
                else {
                    totalGroupConsumption = item.meter;
                }
            });
            return {
                name: buildingGroup.description,
                description: '',
                quality: 1,
                parent: null,
                meter: totalGroupConsumption,
                children: buildingGroupData
            };
        });
    }
    getMeterLevel(dataSource) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            let obj = {};
            let min = Math.min(...dataSource.map(x => x.meterRelationship.split('.').length));
            let max = Math.max(...dataSource.map(x => x.meterRelationship.split('.').length));
            for (min; min <= max; min++) {
                obj[min] = [];
            }
            dataSource.forEach(element => {
                obj[element.meterRelationship.split('.').length].push({
                    name: element.meterName,
                    quality: element.quality,
                    description: element.meterRelationship,
                    meter: element.value,
                    children: []
                });
            });
            min = Math.min(...dataSource.map(x => x.meterRelationship.split('.').length));
            for (max; max >= min; max--) {
                obj[max].forEach(x => {
                    addChild(x, max - 1);
                });
            }
            function addChild(x, max) {
                if (obj[max]) {
                    let matched = false;
                    for (const y of obj[max]) {
                        if (y.description.split('.', max).join('.') == x.description.split('.', max).join('.')) {
                            y['children'].push(x);
                            matched = true;
                            break;
                        }
                    }
                    if (!matched) {
                        addChild(x, max - 1);
                    }
                }
                else {
                    if (x.description.split('.').length != min && !obj[min].some(z => z.name == x.name)) {
                        obj[min].push(x);
                    }
                }
            }
            return obj[min];
        });
    }
    sortMeters() {
    }
    setDemoDate() {
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
    }
};
MeterService.ctorParameters = () => [
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: _date_service_service__WEBPACK_IMPORTED_MODULE_5__["DateServiceService"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"] }
];
MeterService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"])({
        providedIn: 'root'
    })
], MeterService);



/***/ }),

/***/ "./app/services/responsive.service.ts":
/*!********************************************!*\
  !*** ./app/services/responsive.service.ts ***!
  \********************************************/
/*! exports provided: ResponsiveService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResponsiveService", function() { return ResponsiveService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let ResponsiveService = class ResponsiveService {
    constructor() { }
    isMobile() {
        return (screen.width <= 640) ||
            (window.matchMedia &&
                window.matchMedia('only screen and (max-width: 640px)').matches);
    }
};
ResponsiveService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], ResponsiveService);



/***/ }),

/***/ "./app/services/sample/dummy-data.service.ts":
/*!***************************************************!*\
  !*** ./app/services/sample/dummy-data.service.ts ***!
  \***************************************************/
/*! exports provided: DummyDataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DummyDataService", function() { return DummyDataService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm2015/http.js");



let DummyDataService = class DummyDataService {
    constructor(http) {
        this.http = http;
    }
    getJson(fileName) {
        return this.http.get("/assets/data/" + fileName + ".json");
    }
};
DummyDataService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
];
DummyDataService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], DummyDataService);



/***/ }),

/***/ "./app/services/tariff/tariff.service.ts":
/*!***********************************************!*\
  !*** ./app/services/tariff/tariff.service.ts ***!
  \***********************************************/
/*! exports provided: TariffService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TariffService", function() { return TariffService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _initial_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../initial.service */ "./app/services/initial.service.ts");




let TariffService = class TariffService {
    constructor(http, initialService) {
        this.http = http;
        this.initialService = initialService;
    }
    updateTariff(tariff) {
        return this.http.post(this.initialService.config.api_host + '/' + this.initialService.endPoints['update-tariff'], tariff).toPromise();
    }
};
TariffService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"] },
    { type: _initial_service__WEBPACK_IMPORTED_MODULE_3__["InitialService"] }
];
TariffService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
    })
], TariffService);



/***/ }),

/***/ "./app/store/equipment-breakdown-store.service.ts":
/*!********************************************************!*\
  !*** ./app/store/equipment-breakdown-store.service.ts ***!
  \********************************************************/
/*! exports provided: EquipmentBreakdownStoreService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EquipmentBreakdownStoreService", function() { return EquipmentBreakdownStoreService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");



let EquipmentBreakdownStoreService = class EquipmentBreakdownStoreService {
    constructor() {
        this._breakdownData = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]([]);
        this.breakdownData$ = this._breakdownData.asObservable();
        this._isLoading = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](true);
        this.isLoading$ = this._isLoading.asObservable();
        this._dateRange = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](null);
        this.dateRange$ = this._dateRange.asObservable();
        this._level = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](null);
        this.level$ = this._level.asObservable();
        this._equipmentType = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](null);
        this.equipmentType$ = this._equipmentType.asObservable();
        this._equipmentCode = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](null);
        this.equipmentCode$ = this._equipmentCode.asObservable();
        this._block = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](null);
        this.block$ = this._block.asObservable();
        this._dashboardLevel = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](null);
        this.dashboardLevel$ = this._block.asObservable();
        this._dashboardType = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"](null);
        this.dashboardType$ = this._block.asObservable();
    }
    get breakdownData() {
        return this._breakdownData.getValue();
    }
    set breakdownData(val) {
        this._breakdownData.next(val);
    }
    get isLoading() {
        return this._isLoading.getValue();
    }
    set isLoading(val) {
        this._isLoading.next(val);
    }
    get dateRange() {
        return this._dateRange.getValue();
    }
    set dateRange(val) {
        this._dateRange.next(val);
    }
    get level() {
        return this._level.getValue();
    }
    set level(val) {
        this._level.next(val);
    }
    get equipmentType() {
        return this._equipmentType.getValue();
    }
    set equipmentType(val) {
        this._equipmentType.next(val);
    }
    get equipmentCode() {
        return this._equipmentCode.getValue();
    }
    set equipmentCode(val) {
        this._equipmentCode.next(val);
    }
    get block() {
        return this._block.getValue();
    }
    set block(val) {
        this._block.next(val);
    }
    get dashboardLevel() {
        return this._dashboardLevel.getValue();
    }
    set dashboardLevel(val) {
        this._dashboardLevel.next(val);
    }
    get dashboardType() {
        return this._dashboardType.getValue();
    }
    set dashboardType(val) {
        this._dashboardType.next(val);
    }
};
EquipmentBreakdownStoreService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], EquipmentBreakdownStoreService);



/***/ }),

/***/ "./app/store/navigation.service.ts":
/*!*****************************************!*\
  !*** ./app/store/navigation.service.ts ***!
  \*****************************************/
/*! exports provided: NavigationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationService", function() { return NavigationService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/filter */ "../node_modules/lodash/filter.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_filter__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/sortBy */ "../node_modules/lodash/sortBy.js");
/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_sortBy__WEBPACK_IMPORTED_MODULE_4__);

// import { BuildingCategories, Buildings } from './../../assets/mock/mock';




let NavigationService = class NavigationService {
    constructor() {
        this._buildings = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._buildingCategories = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._htLoops = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._buildingNavigation = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._siteNameAndId = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]({});
        this._sites = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._buildingGroups = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._meterTypes = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._subStations = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._plants = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._notifications = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._notificationsCount = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._levels = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this._locations = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this.buildingGroups$ = this._buildingGroups.asObservable();
        this.buildings$ = this._buildings.asObservable();
        this.buildingCategories$ = this._buildingCategories.asObservable();
        this.htLoops$ = this._htLoops.asObservable();
        this.buildingNavigation$ = this._buildingNavigation.asObservable();
        this.siteNameAndId$ = this._siteNameAndId.asObservable();
        this.sites$ = this._sites.asObservable();
        this.meterTypes$ = this._meterTypes.asObservable();
        this.subStations$ = this._subStations.asObservable();
        this.plants$ = this._plants.asObservable();
        this.notifications$ = this._notifications.asObservable();
        this.notificationsCount$ = this._notificationsCount.asObservable();
        this.levels$ = this._levels.asObservable();
        this.locations$ = this._locations.asObservable();
    }
    // constructor(private headerService:HeaderService) { }
    get sites() {
        return this._sites.getValue();
    }
    get locations() {
        return this._locations.getValue();
    }
    get buildings() {
        return this._buildings.getValue();
    }
    get notificationsCount() {
        return this._notificationsCount.getValue();
    }
    get buildingCategories() {
        return this._buildingCategories.getValue();
    }
    get htLoops() {
        return this._htLoops.getValue();
    }
    get buildingNavigation() {
        return this._buildingNavigation;
    }
    get siteNameAndId() {
        return this.siteNameAndId;
    }
    get buildingGroups() {
        return this._buildingGroups.getValue();
    }
    set buildings(val) {
        this._buildings.next(val);
    }
    get meterTypes() {
        return this._meterTypes.getValue();
    }
    set meterTypes(val) {
        this._meterTypes.next(val);
    }
    get subStations() {
        return this._subStations.getValue();
    }
    get plants() {
        return this._plants.getValue();
    }
    set sites(val) {
        this._sites.next(val);
    }
    set locations(val) {
        this._locations.next(val);
    }
    get notifications() {
        return this._notifications.getValue();
    }
    get levels() {
        return this._levels.getValue();
    }
    set subStations(val) {
        this._subStations.next(val);
    }
    set levels(val) {
        this._levels.next(val);
    }
    set notificationsCount(val) {
        this._notificationsCount.next(val);
    }
    set notifications(val) {
        this._notifications.next(val);
    }
    set buildingCategories(val) {
        this._buildingCategories.next(val);
    }
    set htLoops(val) {
        this._htLoops.next(val);
    }
    set buildingNavigation(val) {
        this._buildingNavigation.next(val);
    }
    set siteNameAndId(val) {
        this._siteNameAndId.next(val);
    }
    set buildingGroups(val) {
        this._buildingGroups.next(val);
    }
    set plants(val) {
        this._plants.next(val);
    }
    getBuildingsByCategory(categoryId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.buildings, { 'buildingCategoryID': categoryId });
    }
    getAllNotifications() {
        return this.notifications;
    }
    removeNotification(notificationId) {
        let id = this.notifications.findIndex((item) => item.AlertTimeStamp == notificationId);
        this.notifications.splice(id, 1);
        this.notifications = [...this.notifications];
        let countId = this.notifications.findIndex((item) => item == notificationId);
        this.notificationsCount.splice(countId, 1);
        this.notificationsCount = [...this.notificationsCount];
    }
    removeNotificationCountItem(notificationId) {
        let countId = this.notificationsCount.findIndex((item) => item == notificationId.toString());
        if (countId != -1) {
            this.notificationsCount.splice(countId, 1);
            this.notificationsCount = [...this.notificationsCount];
        }
    }
    removeAllNotifiations() {
        this.notifications = [];
        this.notificationsCount = [];
    }
    isViewedNotification(notificationId) {
        let countId = this.notificationsCount.findIndex((item) => item == notificationId.toString());
        if (countId != -1) {
            return false;
        }
        else {
            return true;
        }
    }
    removeOldestNotification() {
        this.notifications.splice(99, 1);
        this.notifications = [...this.notifications];
    }
    addNotification(notification) {
        this.notifications.push(notification);
        this.notificationsCount.push(notification.AlertTimeStamp);
        this.notifications = [...this.notifications];
        this.notificationsCount = [...this.notificationsCount];
    }
    buildingGroupsByServiceType(serviceTypeId) {
        return this._buildingGroups.getValue().filter(buildingGroup => buildingGroup.serviceTypes.some(serviceType => serviceType.serviceTypeID == serviceTypeId));
    }
    buildingsByServiceType(serviceTypeId) {
        return this._buildings.getValue().filter(building => building.serviceTypes.some(serviceType => serviceType.serviceTypeID == serviceTypeId));
    }
    getBuildingCategoryById(categoryId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.buildingCategories, { 'buildingCategoryID': categoryId });
    }
    getBuildingGroupById(groupId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.buildingGroups, { 'buildingGroupID': groupId });
    }
    getBuildingsByBuildingGroup(groupId) {
        return lodash_sortBy__WEBPACK_IMPORTED_MODULE_4___default()(lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.buildings, { buildingGroupID: groupId }), (o) => o.buildingName);
    }
    getSiteNameBySiteId(siteId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.sites, { siteID: siteId });
    }
    getLevelsByBuildingId(buildingId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.levels, { 'buildingID': buildingId });
    }
    getLevelById(levelId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.levels, { 'levelID': levelId });
    }
    getLocationByLevelId(levelId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.locations, { 'levelID': levelId });
    }
    getLocationById(locationId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.locations, { locationID: locationId });
    }
    getBuilding(buildingId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.buildings, { 'buildingID': buildingId });
    }
    getMeterTypeByServiceTypeId(serviceType) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.meterTypes, { 'serviceTypeID': serviceType });
    }
    getEquipmentTypeById(equipmentTypeId, plantId) {
        const equipmentTypes = this.getPlantById(plantId)[0].equipmentTypes;
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(equipmentTypes, { equipmentTypeID: equipmentTypeId });
    }
    getMeterTypeById(meterTypeId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.meterTypes, { 'meterTypeID': meterTypeId });
    }
    getLoopById(loopId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.htLoops, { 'htLoopID': loopId });
    }
    getSubstationById(subStationId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.subStations, { 'subStationID': subStationId });
    }
    getSubstationsByLoopId(loopId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.subStations, { 'htLoopID': loopId });
    }
    getPlantById(plantId) {
        return lodash_filter__WEBPACK_IMPORTED_MODULE_3___default()(this.plants, { 'chillerPlantID': plantId });
    }
};
NavigationService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
    })
], NavigationService);



/***/ }),

/***/ "./app/widgets/alert-configuration-box/alert-configuration-box.component.scss":
/*!************************************************************************************!*\
  !*** ./app/widgets/alert-configuration-box/alert-configuration-box.component.scss ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".data-row {\n  border-bottom: 1px solid #70707038;\n}\n\n.data-cell {\n  border-left: 1px solid #70707038;\n  font-weight: normal;\n}\n\ntd {\n  padding: 5px 0px 5px 10px;\n  font-weight: bold;\n}\n\n.field-container {\n  margin-left: 20px;\n}\n\n.form-full-width {\n  width: 100%;\n}\n\n.error {\n  border-color: red;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9hbGVydC1jb25maWd1cmF0aW9uLWJveC9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxhbGVydC1jb25maWd1cmF0aW9uLWJveFxcYWxlcnQtY29uZmlndXJhdGlvbi1ib3guY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvYWxlcnQtY29uZmlndXJhdGlvbi1ib3gvYWxlcnQtY29uZmlndXJhdGlvbi1ib3guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQ0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0NBQUE7RUFDQSxtQkFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksaUJBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7QUNDSjs7QURFQTtFQUNJLGlCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2FsZXJ0LWNvbmZpZ3VyYXRpb24tYm94L2FsZXJ0LWNvbmZpZ3VyYXRpb24tYm94LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhdGEtcm93IHtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNzA3MDcwMzg7XHJcbn1cclxuXHJcbi5kYXRhLWNlbGwge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjNzA3MDcwMzg7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG50ZCB7XHJcbiAgICBwYWRkaW5nOiA1cHggMHB4IDVweCAxMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5maWVsZC1jb250YWluZXIge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbi5mb3JtLWZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5lcnJvciB7XHJcbiAgICBib3JkZXItY29sb3I6IHJlZDtcclxufSIsIi5kYXRhLXJvdyB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNzA3MDcwMzg7XG59XG5cbi5kYXRhLWNlbGwge1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICM3MDcwNzAzODtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxudGQge1xuICBwYWRkaW5nOiA1cHggMHB4IDVweCAxMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmZpZWxkLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4uZm9ybS1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5lcnJvciB7XG4gIGJvcmRlci1jb2xvcjogcmVkO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/alert-configuration-box/alert-configuration-box.component.ts":
/*!**********************************************************************************!*\
  !*** ./app/widgets/alert-configuration-box/alert-configuration-box.component.ts ***!
  \**********************************************************************************/
/*! exports provided: AlertConfigurationBoxComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertConfigurationBoxComponent", function() { return AlertConfigurationBoxComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");




let AlertConfigurationBoxComponent = class AlertConfigurationBoxComponent {
    constructor(fb, activeModal) {
        this.fb = fb;
        this.activeModal = activeModal;
    }
    ngOnInit() {
        let formData = this.alertInfo.data.row;
        this.benchMarkForm = this.fb.group({
            sundayBV: [formData.sundayBenchMark, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[0-9]+(.[0-9]{0,100})?$')]],
            mondayBV: [formData.mondayBenchMark, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[0-9]+(.[0-9]{0,100})?$')]],
            tuesdayBV: [formData.tuesdayBenchMark, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[0-9]+(.[0-9]{0,100})?$')]],
            wednesdayBV: [formData.wednesdayBenchMark, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[0-9]+(.[0-9]{0,100})?$')]],
            thursdayBV: [formData.thursdayBenchMark, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[0-9]+(.[0-9]{0,100})?$')]],
            fridayBV: [formData.fridayBenchMark, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[0-9]+(.[0-9]{0,100})?$')]],
            saturdayBV: [formData.saturdayBenchMark, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[0-9]+(.[0-9]{0,100})?$')]]
        });
    }
    get sundayBV() {
        return this.benchMarkForm.get('sundayBV');
    }
    get mondayBV() {
        return this.benchMarkForm.get('mondayBV');
    }
    get tuesdayBV() {
        return this.benchMarkForm.get('tuesdayBV');
    }
    get wednesdayBV() {
        return this.benchMarkForm.get('wednesdayBV');
    }
    get thursdayBV() {
        return this.benchMarkForm.get('thursdayBV');
    }
    get fridayBV() {
        return this.benchMarkForm.get('fridayBV');
    }
    get saturdayBV() {
        return this.benchMarkForm.get('saturdayBV');
    }
    submitForm() {
        this.activeModal.close([{
                MeterId: this.alertInfo.data.row.meterID,
                Benchmarks: [
                    {
                        Day: 1,
                        Value: this.benchMarkForm.value.sundayBV
                    },
                    {
                        Day: 2,
                        Value: this.benchMarkForm.value.mondayBV
                    },
                    {
                        Day: 3,
                        Value: this.benchMarkForm.value.tuesdayBV
                    },
                    {
                        Day: 4,
                        Value: this.benchMarkForm.value.wednesdayBV
                    },
                    {
                        Day: 5,
                        Value: this.benchMarkForm.value.thursdayBV
                    },
                    {
                        Day: 6,
                        Value: this.benchMarkForm.value.fridayBV
                    },
                    {
                        Day: 7,
                        Value: this.benchMarkForm.value.saturdayBV
                    },
                ]
            }]);
    }
};
AlertConfigurationBoxComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__["NgbActiveModal"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertConfigurationBoxComponent.prototype, "alertInfo", void 0);
AlertConfigurationBoxComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-alert-configuration-box',
        template: __webpack_require__(/*! raw-loader!./alert-configuration-box.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/alert-configuration-box/alert-configuration-box.component.html"),
        styles: [__webpack_require__(/*! ./alert-configuration-box.component.scss */ "./app/widgets/alert-configuration-box/alert-configuration-box.component.scss")]
    })
], AlertConfigurationBoxComponent);



/***/ }),

/***/ "./app/widgets/alert-configuration-table/alert-configuration-table.component.scss":
/*!****************************************************************************************!*\
  !*** ./app/widgets/alert-configuration-table/alert-configuration-table.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row-limit {\n  font-size: 14px;\n}\n\n.loading-area {\n  width: 100%;\n  height: 600px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9hbGVydC1jb25maWd1cmF0aW9uLXRhYmxlL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGFsZXJ0LWNvbmZpZ3VyYXRpb24tdGFibGVcXGFsZXJ0LWNvbmZpZ3VyYXRpb24tdGFibGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvYWxlcnQtY29uZmlndXJhdGlvbi10YWJsZS9hbGVydC1jb25maWd1cmF0aW9uLXRhYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvYWxlcnQtY29uZmlndXJhdGlvbi10YWJsZS9hbGVydC1jb25maWd1cmF0aW9uLXRhYmxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdy1saW1pdCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDYwMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmxvYWRpbmctaWNvbiB7XHJcbiAgICB3aWR0aDogNzVweDtcclxuICAgIGhlaWdodDogYXV0bztcclxufSIsIi5yb3ctbGltaXQge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5sb2FkaW5nLWFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5sb2FkaW5nLWljb24ge1xuICB3aWR0aDogNzVweDtcbiAgaGVpZ2h0OiBhdXRvO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/alert-configuration-table/alert-configuration-table.component.ts":
/*!**************************************************************************************!*\
  !*** ./app/widgets/alert-configuration-table/alert-configuration-table.component.ts ***!
  \**************************************************************************************/
/*! exports provided: AlertConfigurationTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertConfigurationTableComponent", function() { return AlertConfigurationTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");





let AlertConfigurationTableComponent = class AlertConfigurationTableComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.isLoading = false;
        this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.changeActive = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__["ColumnMode"];
        this.rowLimits = [
            { id: 1, name: 10 },
            { id: 2, name: 15 },
            { id: 3, name: 25 },
            { id: 4, name: 50 },
            { id: 5, name: 100 }
        ];
        this.buildings = [];
        this.buildingGroups = [];
        this.levels = [];
        this.substations = [];
        this.loops = [];
        this.plants = [];
        this.tableWidth = new rxjs__WEBPACK_IMPORTED_MODULE_4__["BehaviorSubject"]('100%');
        this.limit = 15;
    }
    ngOnChanges() { }
    ngOnInit() {
        this.headerService.getChartWidth().subscribe(res => {
            this.tableWidth.next(res / 10);
        });
    }
    selectButtonClick(row, key) {
        row.changeMode.forEach(element => {
            element.selected = false;
        });
        row.changeMode.find(x => x.key == key).selected = true;
        this.selectionChange.emit({ row, key });
    }
    changeNoOfRows(event) {
        const rowLimit = this.rowLimits.find(x => x.id == event.value);
        this.limit = rowLimit.name;
    }
    onToggle(event, meterID, row) {
        row.toggle = !row.toggle;
        this.changeActive.emit({ event, meterID });
    }
};
AlertConfigurationTableComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_3__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertConfigurationTableComponent.prototype, "isLoading", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertConfigurationTableComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], AlertConfigurationTableComponent.prototype, "selectionChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], AlertConfigurationTableComponent.prototype, "changeActive", void 0);
AlertConfigurationTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-alert-configuration-table',
        template: __webpack_require__(/*! raw-loader!./alert-configuration-table.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/alert-configuration-table/alert-configuration-table.component.html"),
        styles: [__webpack_require__(/*! ./alert-configuration-table.component.scss */ "./app/widgets/alert-configuration-table/alert-configuration-table.component.scss")]
    })
], AlertConfigurationTableComponent);



/***/ }),

/***/ "./app/widgets/alert-info/alert-info.component.scss":
/*!**********************************************************!*\
  !*** ./app/widgets/alert-info/alert-info.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".data-row {\n  border-bottom: 1px solid #70707038;\n}\n\n.data-cell {\n  border-left: 1px solid #70707038;\n  font-weight: normal;\n}\n\ntd {\n  padding: 5px 20px 5px 10px;\n  font-weight: bold;\n}\n\n.chart-holder {\n  background-color: #222222;\n  color: #ffffff;\n  margin-left: 10px;\n}\n\n.chart-holder-flex {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9hbGVydC1pbmZvL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGFsZXJ0LWluZm9cXGFsZXJ0LWluZm8uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvYWxlcnQtaW5mby9hbGVydC1pbmZvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0NBQUE7QUNDSjs7QURFQTtFQUNJLGdDQUFBO0VBQ0EsbUJBQUE7QUNDSjs7QURFQTtFQUNJLDBCQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFLSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvd2lkZ2V0cy9hbGVydC1pbmZvL2FsZXJ0LWluZm8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YS1yb3cge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM3MDcwNzAzODtcclxufVxyXG5cclxuLmRhdGEtY2VsbCB7XHJcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICM3MDcwNzAzODtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbnRkIHtcclxuICAgIHBhZGRpbmc6IDVweCAyMHB4IDVweCAxMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5jaGFydC1ob2xkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjIyMjtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuXHJcbi5jaGFydC1ob2xkZXItZmxleHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgZGlzcGxheTogLW1vei1ib3g7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuIiwiLmRhdGEtcm93IHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM3MDcwNzAzODtcbn1cblxuLmRhdGEtY2VsbCB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzcwNzA3MDM4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG50ZCB7XG4gIHBhZGRpbmc6IDVweCAyMHB4IDVweCAxMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmNoYXJ0LWhvbGRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMjIyMjI7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuLmNoYXJ0LWhvbGRlci1mbGV4IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tb3otYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn0iXX0= */"

/***/ }),

/***/ "./app/widgets/alert-info/alert-info.component.ts":
/*!********************************************************!*\
  !*** ./app/widgets/alert-info/alert-info.component.ts ***!
  \********************************************************/
/*! exports provided: AlertInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertInfoComponent", function() { return AlertInfoComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../confirmation-box/confirmation-box.component */ "./app/widgets/confirmation-box/confirmation-box.component.ts");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../date-range-picker/public-api */ "./app/widgets/date-range-picker/public-api.ts");








let AlertInfoComponent = class AlertInfoComponent {
    constructor(modalService, activeModel, http, config, datePipe) {
        this.modalService = modalService;
        this.activeModel = activeModel;
        this.http = http;
        this.config = config;
        this.datePipe = datePipe;
        this.chartData = null;
    }
    ngOnInit() {
        this.chartDateRange = new _date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_7__["DateRange"]();
        this.chartDateRange.start = new Date(this.alertInfo.data.selected[0].time);
        this.chartDateRange.end = new Date(this.alertInfo.data.selected[0].time);
        this.chartDateRange.start.setHours(this.chartDateRange.start.getHours() - 1);
        this.chartDateRange.end.setHours(this.chartDateRange.end.getHours() + 1);
        this.lodaChartData();
        switch (this.alertInfo.type) {
            case 'lt':
            case 'ht':
            case 'chiller':
                this.unit = 'kWh';
                break;
            case 'water':
                this.unit = 'm³';
                break;
        }
    }
    confirmAknowledge() {
        const modalRef = this.modalService.open(_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_3__["ConfirmationBoxComponent"], { size: 'sm', centered: true });
        modalRef.componentInstance.massage = 'Do you want to Acknowledge this Alert?';
        modalRef.result.then((result) => {
            this.activeModel.close({ data: this.alertInfo.data.selected[0] });
        }, (reason) => {
        });
    }
    lodaChartData() {
        this.http.get(this.config.endPoints['alert-chart-config'], {
            siteId: this.config.siteConfigurations.siteId,
            meterId: this.alertInfo.data.selected[0].equipmentId,
            from: this.datePipe.transform(this.chartDateRange.start, 'yyyy/MM/dd hh:mm a'),
            to: this.datePipe.transform(this.chartDateRange.end, 'yyyy/MM/dd hh:mm a')
        }).subscribe(res => {
            let chart = this.config.chartConfigurations['alert-popup-chart'];
            chart.plottooltext = `Time: $label<br/>Consumption: $value ${this.unit}`;
            this.chartData = {
                chart,
                data: res[0].data,
                trendlines: [
                    {
                        line: [
                            {
                                startvalue: this.alertInfo.data.selected[0].benchmarkValue,
                                color: '#1aaf5d',
                                displayvalue: 'BV',
                                valueOnRight: '1',
                                thickness: '2'
                            }
                        ]
                    }
                ]
            };
        });
    }
};
AlertInfoComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModal"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"] },
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_4__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertInfoComponent.prototype, "alertInfo", void 0);
AlertInfoComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-alert-info',
        template: __webpack_require__(/*! raw-loader!./alert-info.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/alert-info/alert-info.component.html"),
        styles: [__webpack_require__(/*! ./alert-info.component.scss */ "./app/widgets/alert-info/alert-info.component.scss")]
    })
], AlertInfoComponent);



/***/ }),

/***/ "./app/widgets/alert-summary-filter/alert-summary-filter.component.scss":
/*!******************************************************************************!*\
  !*** ./app/widgets/alert-summary-filter/alert-summary-filter.component.scss ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvYWxlcnQtc3VtbWFyeS1maWx0ZXIvYWxlcnQtc3VtbWFyeS1maWx0ZXIuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/widgets/alert-summary-filter/alert-summary-filter.component.ts":
/*!****************************************************************************!*\
  !*** ./app/widgets/alert-summary-filter/alert-summary-filter.component.ts ***!
  \****************************************************************************/
/*! exports provided: AlertSummaryFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertSummaryFilterComponent", function() { return AlertSummaryFilterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/filter */ "../node_modules/lodash/filter.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_filter__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/store/navigation.service */ "./app/store/navigation.service.ts");
/* harmony import */ var _util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../util/filtrationDropdownHelper */ "./util/filtrationDropdownHelper.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");







let AlertSummaryFilterComponent = class AlertSummaryFilterComponent {
    constructor(navigationService, initialService) {
        this.navigationService = navigationService;
        this.initialService = initialService;
        this.tabType = 'summary';
        this.disabled = false;
        this.filterData = true;
        this.showActive = true;
        this.onFilter = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.filterFieldsChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.selectedBuildingGroup = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.selectedBuilding = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.selectedLoop = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.selectedPlant = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.buildings = [];
        this.buildingGroups = [];
        this.levels = [];
        this.substations = [];
        this.loops = [];
        this.plants = [];
        this.activates = [
            {
                name: 'Activated',
                id: 'true'
            },
            {
                name: 'Deactivated',
                id: 'false'
            }
        ];
        this.status = [{
                name: 'Pending',
                id: 'Pending'
            }, {
                name: 'Acknowledged',
                id: 'Acknowledged'
            }];
        this.buildingGroupId = 0;
        this.buildingId = 0;
        this.levelId = 0;
        this.substationId = 0;
        this.loopId = 0;
        this.plantId = 0;
        this.statusId = 0;
        this.activateId = 0;
    }
    ngOnInit() {
        if (this.type == 'lt') {
            this.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_6__["ServiceType"].ELECTRICAL;
        }
        else {
            this.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_6__["ServiceType"].WATER;
        }
        this.navigationService.buildingGroups$.subscribe(() => {
            this.buildingGroups = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getBuildingGroupList"])(this.initialService.navigationStore.buildingGroupsByServiceType(this.serviceType));
        });
        this.navigationService.buildings$.subscribe(res => {
            this.buildings = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getBuildingList"])(this.initialService.navigationStore.buildingsByServiceType(this.serviceType));
        });
        this.navigationService.htLoops$.subscribe(res => {
            this.loops = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getLoopList"])(res);
        });
        this.navigationService.plants$.subscribe(res => {
            this.plants = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getPlantList"])(res);
        });
        this.navigationService.subStations$.subscribe(res => {
            this.substations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getSubstationList"])(res);
        });
        this.navigationService.levels$.subscribe(res => {
            this.levels = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getLevelList"])(res);
        });
    }
    ngOnChanges(changes) {
        try {
            this.filterDataSet();
        }
        catch (_a) { }
    }
    /**
     * Determines whether building group change on
     * @param e
     */
    onBuildingGroupChange(e) {
        this.buildingGroupId = e.value;
        this.buildingId = 0;
        this.levelId = 0;
        if (this.buildingGroupId != 0) {
            let buildingList = this.navigationService.getBuildingsByBuildingGroup(Number(this.buildingGroupId));
            buildingList = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
            this.buildings = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getBuildingList"])(buildingList);
        }
        else {
            let buildingList = this.navigationService.buildings;
            buildingList = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
            this.buildings = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getBuildingList"])(buildingList);
        }
        this.selectedBuildingGroup.emit(e.value);
        this.filterDataSet();
        this.emitFilterData();
    }
    /**
     * Determines whether building change on
     * @param e
     */
    onBuildingChange(e) {
        this.buildingId = e.value;
        this.levelId = 0;
        if (this.buildingId != 0) {
            this.levels = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getLevelList"])(this.navigationService.getLevelsByBuildingId(parseInt(this.buildingId)));
        }
        else {
            this.levels = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getLevelList"])(this.navigationService.levels);
        }
        this.selectedBuilding.emit(e.value);
        this.filterDataSet();
        this.emitFilterData();
    }
    /**
     * Determines whether level change on
     * @param e
     */
    onLevelChange(e) {
        this.levelId = e.value;
        this.filterDataSet();
        this.emitFilterData();
    }
    /**
     * Determines whether substation change on
     * @param e
     */
    onSubstationChange(e) {
        this.substationId = e.value;
        this.filterDataSet();
        this.emitFilterData();
    }
    /**
     * Determines whether loop change on
     * @param e
     */
    onLoopChange(e) {
        this.loopId = e.value;
        this.substationId = 0;
        if (this.loopId != 0) {
            this.substations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getSubstationList"])(this.navigationService.getSubstationsByLoopId(parseInt(this.loopId)));
        }
        else {
            this.substations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_4__["getSubstationList"])(this.navigationService.subStations);
        }
        this.selectedLoop.emit(e.value);
        this.filterDataSet();
        this.emitFilterData();
    }
    /**
     * Determines whether plant change on
     * @param e
     */
    onPlantChange(e) {
        this.plantId = e.value;
        this.selectedPlant.emit(e.value);
        this.filterDataSet();
        this.emitFilterData();
    }
    /**
    * Determines whether status change on
    * @param e
    */
    onStatusChange(e) {
        this.statusId = e.value;
        this.filterDataSet();
    }
    onActivateChange(e) {
        this.activateId = e.value;
        this.filterDataSet();
    }
    /**
     * Filters data set
     */
    filterDataSet() {
        let filteredData = [...this.dataSource];
        if (this.filterData) {
            if (this.buildingGroupId != 0) {
                filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_2___default()(filteredData, { 'buildingGroup': { 'id': parseInt(this.buildingGroupId + '') } });
            }
            if (this.buildingId != 0) {
                filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_2___default()(filteredData, { 'building': { 'id': parseInt(this.buildingId + '') } });
            }
            if (this.loopId != 0) {
                filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_2___default()(filteredData, { 'loop': { 'id': parseInt(this.loopId + '') } });
            }
            if (this.plantId != 0) {
                filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_2___default()(filteredData, { 'plant': { 'id': parseInt(this.plantId + '') } });
            }
        }
        if (this.levelId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_2___default()(filteredData, { 'level': { 'id': parseInt(this.levelId + '') } });
        }
        if (this.substationId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_2___default()(filteredData, { 'substation': { 'id': parseInt(this.substationId + '') } });
        }
        if (this.statusId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_2___default()(filteredData, { 'status': { 'name': this.statusId } });
        }
        if (this.activateId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_2___default()(filteredData, { 'toggle': this.activateId == 'true' ? true : false });
        }
        this.onFilter.emit(filteredData);
    }
    emitFilterData() {
        this.filterFieldsChange.emit({
            buildingGroupId: this.buildingGroupId,
            buildingId: this.buildingId,
            levelId: this.levelId,
            substationId: this.substationId,
            loopId: this.loopId,
            plantId: this.plantId
        });
    }
};
AlertSummaryFilterComponent.ctorParameters = () => [
    { type: src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_3__["NavigationService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_5__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertSummaryFilterComponent.prototype, "type", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertSummaryFilterComponent.prototype, "tabType", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertSummaryFilterComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertSummaryFilterComponent.prototype, "filterFields", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertSummaryFilterComponent.prototype, "disabled", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertSummaryFilterComponent.prototype, "filterData", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], AlertSummaryFilterComponent.prototype, "showActive", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], AlertSummaryFilterComponent.prototype, "onFilter", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], AlertSummaryFilterComponent.prototype, "filterFieldsChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], AlertSummaryFilterComponent.prototype, "selectedBuildingGroup", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], AlertSummaryFilterComponent.prototype, "selectedBuilding", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], AlertSummaryFilterComponent.prototype, "selectedLoop", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], AlertSummaryFilterComponent.prototype, "selectedPlant", void 0);
AlertSummaryFilterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-alert-summary-filter',
        template: __webpack_require__(/*! raw-loader!./alert-summary-filter.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/alert-summary-filter/alert-summary-filter.component.html"),
        styles: [__webpack_require__(/*! ./alert-summary-filter.component.scss */ "./app/widgets/alert-summary-filter/alert-summary-filter.component.scss")]
    })
], AlertSummaryFilterComponent);



/***/ }),

/***/ "./app/widgets/alerts/alerts.component.scss":
/*!**************************************************!*\
  !*** ./app/widgets/alerts/alerts.component.scss ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvYWxlcnRzL2FsZXJ0cy5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./app/widgets/alerts/alerts.component.ts":
/*!************************************************!*\
  !*** ./app/widgets/alerts/alerts.component.ts ***!
  \************************************************/
/*! exports provided: AlertsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertsComponent", function() { return AlertsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let AlertsComponent = class AlertsComponent {
    constructor() { }
    ngOnInit() {
    }
};
AlertsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-alerts',
        template: __webpack_require__(/*! raw-loader!./alerts.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/alerts/alerts.component.html"),
        styles: [__webpack_require__(/*! ./alerts.component.scss */ "./app/widgets/alerts/alerts.component.scss")]
    })
], AlertsComponent);



/***/ }),

/***/ "./app/widgets/badge-icon/badge-icon.component.scss":
/*!**********************************************************!*\
  !*** ./app/widgets/badge-icon/badge-icon.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".badge-icon {\n  position: relative;\n}\n.badge-icon .badge-notify {\n  position: absolute;\n  top: -15px;\n  border: 2px solid #293946;\n}\n.badge-icon:hover .badge-notify {\n  background-color: #cc0000;\n}\n.badge-icon:hover .icon-style {\n  color: #cccccc;\n}\n.badge-icon:active .badge-notify {\n  background-color: darkred;\n}\n.badge-icon:active .icon-style {\n  color: #6b6b6b;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9iYWRnZS1pY29uL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGJhZGdlLWljb25cXGJhZGdlLWljb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvYmFkZ2UtaWNvbi9iYWRnZS1pY29uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUNDSjtBRENJO0VBQ0ksa0JBQUE7RUFDQSxVQUFBO0VBQ0EseUJBQUE7QUNDUjtBRElJO0VBQ0kseUJBQUE7QUNEUjtBRElJO0VBQ0ksY0FBQTtBQ0ZSO0FEUUk7RUFDSSx5QkFBQTtBQ0xSO0FEUUk7RUFDSSxjQUFBO0FDTlIiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2JhZGdlLWljb24vYmFkZ2UtaWNvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iYWRnZS1pY29uIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAuYmFkZ2Utbm90aWZ5e1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IC0xNXB4O1xyXG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICMyOTM5NDY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5iYWRnZS1pY29uOmhvdmVyIHtcclxuICAgIC5iYWRnZS1ub3RpZnl7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwNCwgMCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLmljb24tc3R5bGUge1xyXG4gICAgICAgIGNvbG9yOiAjY2NjY2NjO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLmJhZGdlLWljb246YWN0aXZlIHtcclxuICAgIC5iYWRnZS1ub3RpZnl7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEzOSwgMCwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLmljb24tc3R5bGUge1xyXG4gICAgICAgIGNvbG9yOiAjNmI2YjZiO1xyXG4gICAgfVxyXG59XHJcbiIsIi5iYWRnZS1pY29uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmJhZGdlLWljb24gLmJhZGdlLW5vdGlmeSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMTVweDtcbiAgYm9yZGVyOiAycHggc29saWQgIzI5Mzk0Njtcbn1cblxuLmJhZGdlLWljb246aG92ZXIgLmJhZGdlLW5vdGlmeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjYzAwMDA7XG59XG4uYmFkZ2UtaWNvbjpob3ZlciAuaWNvbi1zdHlsZSB7XG4gIGNvbG9yOiAjY2NjY2NjO1xufVxuXG4uYmFkZ2UtaWNvbjphY3RpdmUgLmJhZGdlLW5vdGlmeSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGRhcmtyZWQ7XG59XG4uYmFkZ2UtaWNvbjphY3RpdmUgLmljb24tc3R5bGUge1xuICBjb2xvcjogIzZiNmI2Yjtcbn0iXX0= */"

/***/ }),

/***/ "./app/widgets/badge-icon/badge-icon.component.ts":
/*!********************************************************!*\
  !*** ./app/widgets/badge-icon/badge-icon.component.ts ***!
  \********************************************************/
/*! exports provided: BadgeIconComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BadgeIconComponent", function() { return BadgeIconComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let BadgeIconComponent = class BadgeIconComponent {
    constructor() {
        this.onClick = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
    }
    iconOnClick(event) {
        this.onClick.emit(event);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], BadgeIconComponent.prototype, "icon", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], BadgeIconComponent.prototype, "badgeText", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], BadgeIconComponent.prototype, "onClick", void 0);
BadgeIconComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-badge-icon',
        template: __webpack_require__(/*! raw-loader!./badge-icon.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/badge-icon/badge-icon.component.html"),
        styles: [__webpack_require__(/*! ./badge-icon.component.scss */ "./app/widgets/badge-icon/badge-icon.component.scss")]
    })
], BadgeIconComponent);



/***/ }),

/***/ "./app/widgets/breadcrumb/breadcrumb.component.scss":
/*!**********************************************************!*\
  !*** ./app/widgets/breadcrumb/breadcrumb.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.background {\n  background-color: transparent;\n  margin-bottom: 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9icmVhZGNydW1iL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGJyZWFkY3J1bWJcXGJyZWFkY3J1bWIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvYnJlYWRjcnVtYi9icmVhZGNydW1iLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC93aWRnZXRzL2JyZWFkY3J1bWIvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNJLDZCRmFVO0VFWlYsZ0JBQUE7QURHSiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvYnJlYWRjcnVtYi9icmVhZGNydW1iLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWF0ZXJpYWwgY29sb3JzXHJcbiRiZy1jb2xvcjogIzFlMWYyMTtcclxuJGhlYWRlci1jb2xvcjogIzI5Mzk0NjtcclxuJGJnLWNhcmQ6ICMyNDJjMzM7XHJcbiRiZy1wcmltYXJ5OiAjMDA3YmZmO1xyXG4kYmctc2Vjb25kYXJ5OiAjMjkzOTQ2O1xyXG4kYmctb3B0LW9uZTogIzJmNDI1MTtcclxuJGJnLW9wdC10d286ICMzYzYxN2Q7XHJcbiRiZy1vcHQtZm91cjogIzM2NTU2ZjtcclxuJGJnLXRhYmxlLWhlYWRlcjogIzFjMjMyODtcclxuJGJnLXRhYmxlLWJvZHk6ICMzNDNmNDk7XHJcblxyXG4vLyBib3JkZXIgY29sb3JzXHJcbiRjb2xvci1ib3JkZXItcHJpbWFyeTogIzM1NDk1ODtcclxuXHJcbi8vIGNvbW1vbiBjb2xvcnNcclxuJHRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcclxuXHJcbi8vIHR5cG8gY29sb3JzXHJcbiRmb250LWNvbG9yOiAjZmZmZmZmO1xyXG4kY29sb3ItZm9udC1zZWNvbmRhcnk6ICNmZmY7XHJcbiRjb2xvci1mb250LXRlcm5hcnk6ICNiOWJhYmI7XHJcbiRmb250LWRhbmdlcjogI2U3NDgzYztcclxuJGZvbnQtbmV1dHJhbDogIzExYjcyYztcclxuJGZvbnQtd2FybmluZzogI2U3OGMzYztcclxuXHJcbi8vIHR5cG8gc2l6ZXNcclxuJHNpemUtZm9udC1wcmltYXJ5OiAuOHJlbTtcclxuJHNpemUtZm9udC1zZWNvbmRhcnk6IDFyZW07XHJcbiRzaXplLWZvbnQtbGFyZ2U6IDNyZW07XHJcbiRzaXplLWZvbnQtaGVhZGVyLWJ0bjogMC45cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXI6IDEuN3JlbTtcclxuJHNpemUtZm9udC1wb2ludGVyLXVuaXQ6IDEuNXJlbTtcclxuJHNpemUtZm9udC1taWQ6IDIuMXJlbTtcclxuJHNpemUtZm9udC1sb3c6IDAuOHJlbTtcclxuXHJcbi8vIGNvbXBvbmVudCBzaXplc1xyXG4kaGVhZGVyLWhlaWdodDogNzBweDtcclxuJGhlaWdodC1jaGFydC1oZWFkZXI6IDQ3Ljc4cHg7XHJcbiRzaWRlLWJhci13aWR0aDogMjUwcHg7XHJcblxyXG4uZGF0ZS1waWNrZXItaW5wdXR7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iLCIuZGF0ZS1waWNrZXItaW5wdXQge1xuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmJhY2tncm91bmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn0iLCJAaW1wb3J0ICcuLi8uLi8uLi9zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG4uYmFja2dyb3VuZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdHJhbnNwYXJlbnQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./app/widgets/breadcrumb/breadcrumb.component.ts":
/*!********************************************************!*\
  !*** ./app/widgets/breadcrumb/breadcrumb.component.ts ***!
  \********************************************************/
/*! exports provided: BreadcrumbComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BreadcrumbComponent", function() { return BreadcrumbComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let BreadcrumbComponent = class BreadcrumbComponent {
    constructor() { }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], BreadcrumbComponent.prototype, "dataSource", void 0);
BreadcrumbComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-breadcrumb',
        template: __webpack_require__(/*! raw-loader!./breadcrumb.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/breadcrumb/breadcrumb.component.html"),
        styles: [__webpack_require__(/*! ./breadcrumb.component.scss */ "./app/widgets/breadcrumb/breadcrumb.component.scss")]
    })
], BreadcrumbComponent);



/***/ }),

/***/ "./app/widgets/chart-loader/chart-loader.component.scss":
/*!**************************************************************!*\
  !*** ./app/widgets/chart-loader/chart-loader.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".chart-loader {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 3;\n}\n.chart-loader .loading-area {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n}\n.chart-loader .loading-area img {\n  width: 80px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9jaGFydC1sb2FkZXIvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcY2hhcnQtbG9hZGVyXFxjaGFydC1sb2FkZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvY2hhcnQtbG9hZGVyL2NoYXJ0LWxvYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLG9DQUFBO0VBQ0EsVUFBQTtBQ0NKO0FEQUU7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLE9BQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQ0VKO0FEREk7RUFDRSxXQUFBO0FDR04iLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2NoYXJ0LWxvYWRlci9jaGFydC1sb2FkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhcnQtbG9hZGVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGZsZXg6IDE7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC40KTtcclxuICAgIHotaW5kZXg6IDM7XHJcbiAgLmxvYWRpbmctYXJlYXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBpbWd7XHJcbiAgICAgIHdpZHRoOiA4MHB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLm5vbmUtbG9hZGVye1xyXG5cclxufSIsIi5jaGFydC1sb2FkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleDogMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgei1pbmRleDogMztcbn1cbi5jaGFydC1sb2FkZXIgLmxvYWRpbmctYXJlYSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4OiAxO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuLmNoYXJ0LWxvYWRlciAubG9hZGluZy1hcmVhIGltZyB7XG4gIHdpZHRoOiA4MHB4O1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/chart-loader/chart-loader.component.ts":
/*!************************************************************!*\
  !*** ./app/widgets/chart-loader/chart-loader.component.ts ***!
  \************************************************************/
/*! exports provided: ChartLoaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartLoaderComponent", function() { return ChartLoaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let ChartLoaderComponent = class ChartLoaderComponent {
    constructor() {
        this.isDone = true;
    }
    ngOnChanges(changes) {
        // this.isDone = changes.isDone;
        // console.log(this.isDone);
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ChartLoaderComponent.prototype, "isDone", void 0);
ChartLoaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-chart-loader',
        template: __webpack_require__(/*! raw-loader!./chart-loader.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/chart-loader/chart-loader.component.html"),
        host: { 'class': 'd-flex w-100 flex-1 h-100' },
        styles: [__webpack_require__(/*! ./chart-loader.component.scss */ "./app/widgets/chart-loader/chart-loader.component.scss")]
    })
], ChartLoaderComponent);



/***/ }),

/***/ "./app/widgets/combo-box/combo-box.component.scss":
/*!********************************************************!*\
  !*** ./app/widgets/combo-box/combo-box.component.scss ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".comb-select {\n  background-color: #ffffff;\n  color: #1b1b1b;\n  padding: 4px;\n  height: 28px;\n  font-size: 12px;\n  min-width: 150px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9jb21iby1ib3gvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcY29tYm8tYm94XFxjb21iby1ib3guY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvY29tYm8tYm94L2NvbWJvLWJveC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2NvbWJvLWJveC9jb21iby1ib3guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29tYi1zZWxlY3R7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICBjb2xvcjogIzFiMWIxYjtcclxuICBwYWRkaW5nOiA0cHg7XHJcbiAgaGVpZ2h0OiAyOHB4O1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG59XHJcbiIsIi5jb21iLXNlbGVjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGNvbG9yOiAjMWIxYjFiO1xuICBwYWRkaW5nOiA0cHg7XG4gIGhlaWdodDogMjhweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtaW4td2lkdGg6IDE1MHB4O1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/combo-box/combo-box.component.ts":
/*!******************************************************!*\
  !*** ./app/widgets/combo-box/combo-box.component.ts ***!
  \******************************************************/
/*! exports provided: ComboBoxComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComboBoxComponent", function() { return ComboBoxComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let ComboBoxComponent = class ComboBoxComponent {
    constructor() {
        this.dark = 'true';
        this.fullWidth = 'true';
        this.selected = 0;
        this.enableAll = true;
        this.disable = false;
        this.selectedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.dataSource;
    }
    ngOnInit() { }
    onChangedSelect(e) {
        this.selected = e.target.value;
        this.selectedChange.emit({ value: e.target.value });
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ComboBoxComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ComboBoxComponent.prototype, "dark", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ComboBoxComponent.prototype, "fullWidth", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ComboBoxComponent.prototype, "selected", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ComboBoxComponent.prototype, "enableAll", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ComboBoxComponent.prototype, "disable", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ComboBoxComponent.prototype, "selectedChange", void 0);
ComboBoxComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-combo-box',
        template: __webpack_require__(/*! raw-loader!./combo-box.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/combo-box/combo-box.component.html"),
        styles: [__webpack_require__(/*! ./combo-box.component.scss */ "./app/widgets/combo-box/combo-box.component.scss")]
    })
], ComboBoxComponent);



/***/ }),

/***/ "./app/widgets/configuration-table/configuration-table.component.scss":
/*!****************************************************************************!*\
  !*** ./app/widgets/configuration-table/configuration-table.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".loading-area {\n  width: 100%;\n  height: 600px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n\n.btn-group {\n  max-width: 150px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9jb25maWd1cmF0aW9uLXRhYmxlL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGNvbmZpZ3VyYXRpb24tdGFibGVcXGNvbmZpZ3VyYXRpb24tdGFibGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvY29uZmlndXJhdGlvbi10YWJsZS9jb25maWd1cmF0aW9uLXRhYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2NvbmZpZ3VyYXRpb24tdGFibGUvY29uZmlndXJhdGlvbi10YWJsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2FkaW5nLWFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDYwMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmxvYWRpbmctaWNvbiB7XHJcbiAgICB3aWR0aDogNzVweDtcclxuICAgIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuLmJ0bi1ncm91cCB7XHJcbiAgICBtYXgtd2lkdGg6IDE1MHB4O1xyXG59IiwiLmxvYWRpbmctYXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDYwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmxvYWRpbmctaWNvbiB7XG4gIHdpZHRoOiA3NXB4O1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi5idG4tZ3JvdXAge1xuICBtYXgtd2lkdGg6IDE1MHB4O1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/configuration-table/configuration-table.component.ts":
/*!**************************************************************************!*\
  !*** ./app/widgets/configuration-table/configuration-table.component.ts ***!
  \**************************************************************************/
/*! exports provided: ConfigurationTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurationTableComponent", function() { return ConfigurationTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/store/navigation.service */ "./app/store/navigation.service.ts");
/* harmony import */ var _util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../util/filtrationDropdownHelper */ "./util/filtrationDropdownHelper.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");










let ConfigurationTableComponent = class ConfigurationTableComponent {
    constructor(navigationService, fb, headerService) {
        this.navigationService = navigationService;
        this.fb = fb;
        this.headerService = headerService;
        this.searchTerm = '';
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__["ColumnMode"];
        this.SortType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__["SortType"];
        this.SelectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__["SelectionType"];
        this.plusIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faPlus"];
        this.isEditEnabled = false;
        this.onSave = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onDelete = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onUpdate = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onEditOrInsert = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.buildings = [];
        this.buildingGroups = [];
        this.levels = [];
        this.substations = [];
        this.loops = [];
        this.plants = [];
        this.equipmentTypes = [];
        this.locations = [];
        this.meterTypes = [];
        this.tableWidth = new rxjs__WEBPACK_IMPORTED_MODULE_7__["BehaviorSubject"]('100%');
    }
    ngOnInit() {
        if (this.type == 'lt') {
            this.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL;
        }
        else {
            this.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER;
        }
        this.headerService.getChartWidth().subscribe(res => {
            if (this.type == 'lt' || this.type == 'water') {
                this.tableWidth.next(res / 10);
            }
            else {
                this.tableWidth.next(res / 6);
            }
        });
        if (this.type == 'chiller') {
            this.buttonText = 'Equipment';
        }
        else {
            this.buttonText = 'Meter';
        }
        this.tableOffset = 0;
        this.navigationService.buildingGroups$.subscribe(() => {
            const buildingGroupsList = this.navigationService.buildingGroupsByServiceType(this.serviceType);
            this.buildingGroups = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getBuildingGroupList"])(buildingGroupsList);
            this.buildingGroupId = this.getZerothPlaceId(this.buildingGroups);
            this.navigationService.buildings$.subscribe(() => {
                let buildingList = this.navigationService.getBuildingsByBuildingGroup(this.buildingGroupId);
                buildingList = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
                this.buildings = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getBuildingList"])(buildingList);
                this.buildingId = this.getZerothPlaceId(this.buildings);
                this.navigationService.levels$.subscribe(() => {
                    this.levels = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getLevelList"])(this.navigationService.getLevelsByBuildingId(this.buildingId));
                    this.levelId = this.getZerothPlaceId(this.levels);
                    this.navigationService.locations$.subscribe(() => {
                        this.locations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getLocationList"])(this.navigationService.getLocationByLevelId(this.levelId));
                        this.locationId = this.getZerothPlaceId(this.locations);
                        this.setInitialForm();
                    });
                });
            });
        });
        this.navigationService.htLoops$.subscribe(res => {
            this.loops = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getLoopList"])(res);
            this.loopId = this.getZerothPlaceId(this.loops);
            this.navigationService.subStations$.subscribe(() => {
                this.substations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getSubstationList"])(this.navigationService.getSubstationsByLoopId(this.loopId));
                this.substationId = this.getZerothPlaceId(this.substations);
                this.setInitialForm();
            });
        });
        this.navigationService.plants$.subscribe(res => {
            this.plants = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getPlantList"])(res);
            this.plantId = this.getZerothPlaceId(this.plants);
            this.equipmentTypes = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getEquipmentTypeList"])(this.navigationService.getPlantById(this.plantId)[0] ? this.navigationService.getPlantById(this.plantId)[0].equipmentTypes : []);
            this.equipmentTypeId = this.getZerothPlaceId(this.equipmentTypes);
            this.setInitialForm();
        });
        this.navigationService.meterTypes$.subscribe(res => {
            this.meterTypes = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getMeterTypeList"])(res);
            this.meterTypeId = this.getZerothPlaceId(this.meterTypes);
            this.setInitialForm();
        });
    }
    ngOnChanges() {
        this.isEditEnabled = false;
    }
    getZerothPlaceId(list) {
        if (list.length !== 0) {
            return list[0].id;
        }
    }
    changeBuildingGroup(id) {
        this.buildingGroupId = Number(id);
        let buildingList = this.navigationService.getBuildingsByBuildingGroup(this.buildingGroupId);
        buildingList = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
        this.buildings = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getBuildingList"])(buildingList);
        this.levels = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getLevelList"])(this.navigationService.getLevelsByBuildingId(Number(this.buildingId)));
        this.levelId = this.getZerothPlaceId(this.levels);
        this.locations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getLocationList"])(this.navigationService.getLocationByLevelId(this.levelId));
        this.locationId = this.getZerothPlaceId(this.locations);
        this.configurationForm.patchValue({
            buildingGroup: this.buildingGroupId,
            building: this.buildingId,
            level: this.levelId,
            location: this.locationId
        });
    }
    changeBuilding(id) {
        this.buildingId = Number(id);
        this.levels = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getLevelList"])(this.navigationService.getLevelsByBuildingId(this.buildingId));
        this.levelId = this.getZerothPlaceId(this.levels);
        this.locations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getLocationList"])(this.navigationService.getLocationByLevelId(this.levelId));
        this.locationId = this.getZerothPlaceId(this.locations);
        this.configurationForm.patchValue({
            building: this.buildingId,
            level: this.levelId,
            location: this.locationId
        });
    }
    changeLevel(id) {
        this.levelId = Number(id);
        this.locations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getLocationList"])(this.navigationService.getLocationByLevelId(this.levelId));
        this.locationId = this.getZerothPlaceId(this.locations);
        this.configurationForm.patchValue({
            level: this.levelId,
            location: this.locationId
        });
    }
    changeLocation(id) {
        this.locationId = Number(id);
        this.configurationForm.patchValue({
            location: this.locationId
        });
    }
    changeLoop(id) {
        this.loopId = Number(id);
        this.substations = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getSubstationList"])(this.navigationService.getSubstationsByLoopId(this.loopId));
        this.substationId = this.getZerothPlaceId(this.substations);
        this.configurationForm.patchValue({
            loop: this.loopId,
            substation: this.substationId,
        });
    }
    changePlant(id) {
        this.plantId = Number(id);
        this.equipmentTypes = Object(_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_5__["getEquipmentTypeList"])(this.navigationService.getPlantById(this.plantId)[0] ? this.navigationService.getPlantById(this.plantId)[0].equipmentTypes : []);
        this.equipmentTypeId = this.getZerothPlaceId(this.equipmentTypes);
        this.configurationForm.patchValue({
            plant: this.plantId,
            equipmentType: this.equipmentTypeId,
        });
    }
    changeMeterType(id) {
        this.meterTypeId = Number(id);
        this.configurationForm.patchValue({
            meterType: this.meterTypeId
        });
    }
    changeEquipmentType(id) {
        this.equipmentTypeId = Number(id);
        this.configurationForm.patchValue({
            equipmentType: this.equipmentTypeId
        });
    }
    editRowAction(row) {
        this.isEditEnabled = true;
        this.editableRow = Object.assign({}, row);
        row.action = 'update';
        this.insertionMethod = 'edit';
        this.buildingGroupId = row.buildingGroup ? row.buildingGroup.id : null;
        this.changeBuildingGroup(this.buildingGroupId);
        this.buildingId = row.building ? row.building.id : null;
        this.changeBuilding(this.buildingId);
        this.levelId = row.level ? row.level.id : null;
        this.changeLevel(this.levelId);
        this.locationId = row.location ? row.location.id : null;
        this.meterTypeId = row.meterType ? row.meterType.id : null;
        this.loopId = row.loop ? row.loop.id : null;
        this.changeLoop(this.loopId);
        this.substationId = row.substation ? row.substation.id : null;
        this.plantId = row.plant ? row.plant.id : null;
        this.changePlant(this.plantId);
        this.equipmentTypeId = row.equipmentType ? row.equipmentType.id : null;
        this.meterName = row.meter ? row.meter.name : '';
        this.opcTag = row.opcTag ? row.opcTag.name : '';
        this.relationship = row.relationship ? row.relationship.name : '';
        this.setInitialForm();
    }
    deleteRow(event) {
        this.onDelete.emit(event);
    }
    onSaveButtonClicked(event) {
        if (this.insertionMethod == 'edit') {
            this.updateRow(event);
        }
        else {
            this.saveRow(event);
        }
    }
    saveRow(event) {
        this.onSave.emit(this.configurationForm.value);
        this.rows = [...this.rows];
        this.isEditEnabled = false;
    }
    updateRow(event) {
        this.configurationForm.patchValue({
            id: event.meter.id,
            equipment: event.equipment ? event.equipment.id : null
        });
        this.onUpdate.emit(this.configurationForm.value);
        event.action = 'NONE';
        this.rows = [...this.rows];
        this.isEditEnabled = false;
    }
    onPageChange(event) {
        this.tableOffset = event.offset;
    }
    addNewRow(row) {
        this.tableOffset = 0;
        this.insertionMethod = 'insert';
        this.changeBuildingGroup(this.getZerothPlaceId(this.buildingGroups));
        this.changeLoop(this.getZerothPlaceId(this.loops));
        this.changePlant(this.getZerothPlaceId(this.plants));
        this.meterName = '';
        this.opcTag = '';
        this.relationship = '';
        this.setInitialForm();
        this.rows.unshift({
            buildingGroup: { name: '', id: this.buildingGroupId },
            building: { name: '', id: this.buildingId },
            level: { name: '', id: this.levelId },
            location: { name: '', id: this.locationId },
            loop: { name: '', id: this.loopId },
            plant: { name: '', id: this.plantId },
            substation: { name: '', id: this.substationId },
            equipment: { name: '', id: '' },
            meterType: { name: '', id: this.meterTypeId },
            meter: { name: '', id: `${(+new Date).toString(36)}/insert` },
            opcTag: { name: '', id: '' },
            relationship: { name: '', id: '' },
            equipmentType: { name: '', id: this.equipmentTypeId },
            action: 'insert'
        });
        this.rows = [...this.rows];
        this.isEditEnabled = true;
    }
    cancelEditInsertAction(row) {
        this.isEditEnabled = false;
        if (this.insertionMethod == 'insert') {
            this.rows.shift();
            this.rows = [...this.rows];
        }
        else {
            Object.assign(row, this.editableRow);
        }
    }
    setInitialForm() {
        this.configurationForm = this.fb.group({
            id: `${(+new Date).toString(36)}/insert`,
            buildingGroup: this.buildingGroupId,
            building: this.buildingId,
            level: this.levelId,
            location: this.locationId,
            relationShip: this.relationship,
            loop: this.loopId,
            substation: this.substationId,
            plant: this.plantId,
            equipmentType: this.equipmentTypeId,
            equipment: '',
            meterType: this.meterTypeId,
            meterName: [this.meterName, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            opcTag: [this.opcTag, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]
        });
        this.configurationForm.get('relationShip').setValidators(this.type == 'lt' || this.type == 'water' ? [_angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required] : []);
    }
};
ConfigurationTableComponent.ctorParameters = () => [
    { type: src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_4__["NavigationService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"] },
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_8__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ConfigurationTableComponent.prototype, "rows", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ConfigurationTableComponent.prototype, "type", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ConfigurationTableComponent.prototype, "isLoading", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ConfigurationTableComponent.prototype, "onSave", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ConfigurationTableComponent.prototype, "onDelete", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ConfigurationTableComponent.prototype, "onUpdate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ConfigurationTableComponent.prototype, "onEditOrInsert", void 0);
ConfigurationTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-configuration-table',
        template: __webpack_require__(/*! raw-loader!./configuration-table.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/configuration-table/configuration-table.component.html"),
        styles: [__webpack_require__(/*! ./configuration-table.component.scss */ "./app/widgets/configuration-table/configuration-table.component.scss")]
    })
], ConfigurationTableComponent);



/***/ }),

/***/ "./app/widgets/confirmation-box/confirmation-box.component.scss":
/*!**********************************************************************!*\
  !*** ./app/widgets/confirmation-box/confirmation-box.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".confirm-box {\n  background-color: #293946;\n  padding: 15px 10px 15px 10px;\n  color: #ffffff;\n}\n\n.confirm-box-header {\n  font-weight: 600;\n}\n\n.confirm-box-description {\n  color: #D1D1D1;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9jb25maXJtYXRpb24tYm94L0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGNvbmZpcm1hdGlvbi1ib3hcXGNvbmZpcm1hdGlvbi1ib3guY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvY29uZmlybWF0aW9uLWJveC9jb25maXJtYXRpb24tYm94LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7RUFDQSw0QkFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2NvbmZpcm1hdGlvbi1ib3gvY29uZmlybWF0aW9uLWJveC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb25maXJtLWJveCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjkzOTQ2O1xyXG4gICAgcGFkZGluZzogMTVweCAxMHB4IDE1cHggMTBweDtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG59XHJcblxyXG4uY29uZmlybS1ib3gtaGVhZGVyIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5jb25maXJtLWJveC1kZXNjcmlwdGlvbiB7XHJcbiAgICBjb2xvcjogI0QxRDFEMTtcclxufSIsIi5jb25maXJtLWJveCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTM5NDY7XG4gIHBhZGRpbmc6IDE1cHggMTBweCAxNXB4IDEwcHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4uY29uZmlybS1ib3gtaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmNvbmZpcm0tYm94LWRlc2NyaXB0aW9uIHtcbiAgY29sb3I6ICNEMUQxRDE7XG59Il19 */"

/***/ }),

/***/ "./app/widgets/confirmation-box/confirmation-box.component.ts":
/*!********************************************************************!*\
  !*** ./app/widgets/confirmation-box/confirmation-box.component.ts ***!
  \********************************************************************/
/*! exports provided: ConfirmationBoxComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfirmationBoxComponent", function() { return ConfirmationBoxComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



let ConfirmationBoxComponent = class ConfirmationBoxComponent {
    constructor(activeModal) {
        this.activeModal = activeModal;
    }
    ngOnInit() {
    }
    onClick(action) {
    }
    close(click) {
        this.activeModal.close(click);
    }
    dismiss(click) {
        this.activeModal.dismiss(click);
    }
};
ConfirmationBoxComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ConfirmationBoxComponent.prototype, "massage", void 0);
ConfirmationBoxComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-confirmation-box',
        template: __webpack_require__(/*! raw-loader!./confirmation-box.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/confirmation-box/confirmation-box.component.html"),
        styles: [__webpack_require__(/*! ./confirmation-box.component.scss */ "./app/widgets/confirmation-box/confirmation-box.component.scss")]
    })
], ConfirmationBoxComponent);



/***/ }),

/***/ "./app/widgets/consumption-summery-chart/consumption-summery-chart.component.scss":
/*!****************************************************************************************!*\
  !*** ./app/widgets/consumption-summery-chart/consumption-summery-chart.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvY29uc3VtcHRpb24tc3VtbWVyeS1jaGFydC9jb25zdW1wdGlvbi1zdW1tZXJ5LWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/consumption-summery-chart/consumption-summery-chart.component.ts":
/*!**************************************************************************************!*\
  !*** ./app/widgets/consumption-summery-chart/consumption-summery-chart.component.ts ***!
  \**************************************************************************************/
/*! exports provided: ConsumptionSummeryChartComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConsumptionSummeryChartComponent", function() { return ConsumptionSummeryChartComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let ConsumptionSummeryChartComponent = class ConsumptionSummeryChartComponent {
    constructor() {
        this.type = "msline";
        this.dataSource = {};
    }
    ngOnInit() {
        this.dataSource = {
            chart: {
                baseFont: "Poppins",
                baseFontColor: "#ffffff",
                baseFontSize: 14,
                bgAlpha: 100,
                bgColor: "#293946",
                canvasBgAlpha: 0,
                canvasBgColor: "#ffffff",
                caption: "",
                formatNumberScale: 1,
                loadMessage: "",
                maxColWidth: 64,
                placeholder: "",
                plotToolText: "Day: $label{br}Consumption: $value kWh",
                subCaption: "",
                theme: "carbon",
                xAxisName: "Day",
                xAxisNameFontBold: false,
                xAxisNameFontColor: "#ffffff",
                xAxisNameFontSize: 14,
                yAxisName: "Consumption (kWh)",
                yAxisNameFontBold: false,
                yAxisNameFontColor: "#ffffff",
                yAxisNameFontSize: 14,
                palettecolors: "#b30000, #7c1158, #4421af, #1a53ff, #0d88e6, #00b7c7, #5ad45a, #8be04e, #ebdc78",
                valuefontSize: 16
            },
            caption: {
                text: 'Daily Visitors Count of a Website'
            },
            yAxis: [
                {
                    plot: {
                        value: 'Consumption',
                        type: 'area'
                    },
                    title: 'Daily Visitors (in thousand)'
                }
            ],
            categories: [{ category: [] }],
            dataSet: []
        };
    }
    reset() {
        this.setData([], [], '');
    }
    setData(labels, data, colors) {
        this.dataSource['categories'][0].category = labels;
        this.dataSource['dataSet'] = data;
        this.dataSource['chart'].palettecolors = colors;
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ConsumptionSummeryChartComponent.prototype, "type", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ConsumptionSummeryChartComponent.prototype, "dataSource", void 0);
ConsumptionSummeryChartComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-consumption-summery-chart',
        template: __webpack_require__(/*! raw-loader!./consumption-summery-chart.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/consumption-summery-chart/consumption-summery-chart.component.html"),
        styles: [__webpack_require__(/*! ./consumption-summery-chart.component.scss */ "./app/widgets/consumption-summery-chart/consumption-summery-chart.component.scss")]
    })
], ConsumptionSummeryChartComponent);



/***/ }),

/***/ "./app/widgets/data-pointer-non-image/data-pointer-none-image.component.scss":
/*!***********************************************************************************!*\
  !*** ./app/widgets/data-pointer-non-image/data-pointer-none-image.component.scss ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.custom-box-pointer {\n  height: 200px;\n  width: 200px;\n  margin: auto;\n}\n\n.pointer-container {\n  overflow: hidden;\n  padding: 10px !important;\n  min-height: 165px;\n}\n\n.pointer-container .image {\n  width: 50px;\n  height: 50px;\n  -o-object-fit: contain;\n     object-fit: contain;\n}\n\n.pointer-container .img-container {\n  text-align: center;\n}\n\n.pointer-container .img-container .pointer-text {\n  left: 0;\n  right: 0;\n  margin: auto;\n  text-align: center;\n  top: 28%;\n  font-size: 1.7rem;\n}\n\n.pointer-container .img-container .pointer-unit {\n  left: 0;\n  right: 0;\n  margin: auto;\n  text-align: center;\n  top: 50%;\n  text-align: center;\n  font-size: 1.5rem;\n}\n\n.pointer-container .img-container .pointer-img {\n  left: 0;\n  right: 0;\n  margin: auto;\n}\n\n@media only screen and (max-width: 600px) {\n  .mob-res {\n    width: 100%;\n  }\n}\n\n.customs-circle {\n  height: 200px;\n  max-width: 200px;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-top: 0px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9kYXRhLXBvaW50ZXItbm9uLWltYWdlL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGRhdGEtcG9pbnRlci1ub24taW1hZ2VcXGRhdGEtcG9pbnRlci1ub25lLWltYWdlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC93aWRnZXRzL2RhdGEtcG9pbnRlci1ub24taW1hZ2UvZGF0YS1wb2ludGVyLW5vbmUtaW1hZ2UuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvZGF0YS1wb2ludGVyLW5vbi1pbWFnZS9EOlxcU0VSVkVSXFx1bXNfb2xkL3N0ZGluIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDQTtFQUNFLDZCQUFBO0FDeENGOztBQ0NBO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FERUY7O0FDQUE7RUFDSSxnQkFBQTtFQUdBLHdCQUFBO0VBRUEsaUJBQUE7QURBSjs7QUNHSTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7S0FBQSxtQkFBQTtBREROOztBQ0dJO0VBQ0ksa0JBQUE7QUREUjs7QUNFUTtFQUNJLE9BQUE7RUFDQSxRQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLGlCRkNRO0FDRHBCOztBQ0dRO0VBQ0ksT0FBQTtFQUNBLFFBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkZSYTtBQ096Qjs7QUNJUTtFQUNJLE9BQUE7RUFDQSxRQUFBO0VBQ0EsWUFBQTtBREZaOztBQ09BO0VBQ0U7SUFDRSxXQUFBO0VESkY7QUFDRjs7QUNZQTtFQVdFLGFBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0FEcEJGIiwiZmlsZSI6InNyYy9hcHAvd2lkZ2V0cy9kYXRhLXBvaW50ZXItbm9uLWltYWdlL2RhdGEtcG9pbnRlci1ub25lLWltYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWF0ZXJpYWwgY29sb3JzXHJcbiRiZy1jb2xvcjogIzFlMWYyMTtcclxuJGhlYWRlci1jb2xvcjogIzI5Mzk0NjtcclxuJGJnLWNhcmQ6ICMyNDJjMzM7XHJcbiRiZy1wcmltYXJ5OiAjMDA3YmZmO1xyXG4kYmctc2Vjb25kYXJ5OiAjMjkzOTQ2O1xyXG4kYmctb3B0LW9uZTogIzJmNDI1MTtcclxuJGJnLW9wdC10d286ICMzYzYxN2Q7XHJcbiRiZy1vcHQtZm91cjogIzM2NTU2ZjtcclxuJGJnLXRhYmxlLWhlYWRlcjogIzFjMjMyODtcclxuJGJnLXRhYmxlLWJvZHk6ICMzNDNmNDk7XHJcblxyXG4vLyBib3JkZXIgY29sb3JzXHJcbiRjb2xvci1ib3JkZXItcHJpbWFyeTogIzM1NDk1ODtcclxuXHJcbi8vIGNvbW1vbiBjb2xvcnNcclxuJHRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcclxuXHJcbi8vIHR5cG8gY29sb3JzXHJcbiRmb250LWNvbG9yOiAjZmZmZmZmO1xyXG4kY29sb3ItZm9udC1zZWNvbmRhcnk6ICNmZmY7XHJcbiRjb2xvci1mb250LXRlcm5hcnk6ICNiOWJhYmI7XHJcbiRmb250LWRhbmdlcjogI2U3NDgzYztcclxuJGZvbnQtbmV1dHJhbDogIzExYjcyYztcclxuJGZvbnQtd2FybmluZzogI2U3OGMzYztcclxuXHJcbi8vIHR5cG8gc2l6ZXNcclxuJHNpemUtZm9udC1wcmltYXJ5OiAuOHJlbTtcclxuJHNpemUtZm9udC1zZWNvbmRhcnk6IDFyZW07XHJcbiRzaXplLWZvbnQtbGFyZ2U6IDNyZW07XHJcbiRzaXplLWZvbnQtaGVhZGVyLWJ0bjogMC45cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXI6IDEuN3JlbTtcclxuJHNpemUtZm9udC1wb2ludGVyLXVuaXQ6IDEuNXJlbTtcclxuJHNpemUtZm9udC1taWQ6IDIuMXJlbTtcclxuJHNpemUtZm9udC1sb3c6IDAuOHJlbTtcclxuXHJcbi8vIGNvbXBvbmVudCBzaXplc1xyXG4kaGVhZGVyLWhlaWdodDogNzBweDtcclxuJGhlaWdodC1jaGFydC1oZWFkZXI6IDQ3Ljc4cHg7XHJcbiRzaWRlLWJhci13aWR0aDogMjUwcHg7XHJcblxyXG4uZGF0ZS1waWNrZXItaW5wdXR7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iLCIuZGF0ZS1waWNrZXItaW5wdXQge1xuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmN1c3RvbS1ib3gtcG9pbnRlciB7XG4gIGhlaWdodDogMjAwcHg7XG4gIHdpZHRoOiAyMDBweDtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4ucG9pbnRlci1jb250YWluZXIge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XG4gIG1pbi1oZWlnaHQ6IDE2NXB4O1xufVxuLnBvaW50ZXItY29udGFpbmVyIC5pbWFnZSB7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDUwcHg7XG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XG59XG4ucG9pbnRlci1jb250YWluZXIgLmltZy1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4ucG9pbnRlci1jb250YWluZXIgLmltZy1jb250YWluZXIgLnBvaW50ZXItdGV4dCB7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBtYXJnaW46IGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdG9wOiAyOCU7XG4gIGZvbnQtc2l6ZTogMS43cmVtO1xufVxuLnBvaW50ZXItY29udGFpbmVyIC5pbWctY29udGFpbmVyIC5wb2ludGVyLXVuaXQge1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgbWFyZ2luOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRvcDogNTAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xufVxuLnBvaW50ZXItY29udGFpbmVyIC5pbWctY29udGFpbmVyIC5wb2ludGVyLWltZyB7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBtYXJnaW46IGF1dG87XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLm1vYi1yZXMge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4uY3VzdG9tcy1jaXJjbGUge1xuICBoZWlnaHQ6IDIwMHB4O1xuICBtYXgtd2lkdGg6IDIwMHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luLXRvcDogMHB4O1xufSIsIlxyXG5AaW1wb3J0ICdzcmMvc2Nzcy9fdmFyaWFibGVzLnNjc3MnO1xyXG5cclxuLmN1c3RvbS1ib3gtcG9pbnRlcntcclxuICBoZWlnaHQ6IDIwMHB4O1xyXG4gIHdpZHRoOiAyMDBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuLnBvaW50ZXItY29udGFpbmVye1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIC8vIGJvcmRlcjogMnB4IHNvbGlkICNkNWQ1ZDU7XHJcbiAgICAvLyBib3JkZXI6IDFweCBzb2xpZCAjNzI3MjcyO1xyXG4gICAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50O1xyXG4gICAgLy8gYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIG1pbi1oZWlnaHQ6IDE2NXB4O1xyXG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgLy8gYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIC5pbWFnZXtcclxuICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICAgIH1cclxuICAgIC5pbWctY29udGFpbmVye1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAucG9pbnRlci10ZXh0e1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIHRvcDogMjglO1xyXG4gICAgICAgICAgICBmb250LXNpemU6ICRzaXplLWZvbnQtcG9pbnRlcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb2ludGVyLXVuaXR7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAkc2l6ZS1mb250LXBvaW50ZXItdW5pdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb2ludGVyLWltZ3tcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcclxuICAubW9iLXJlcyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuXHJcbi5wb2ludGVyLW1pbi1oZWlnaHQge1xyXG4gIC8vIG1pbi1oZWlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG5cclxuLmN1c3RvbXMtY2lyY2xle1xyXG4gIC8vIG1heC13aWR0aDogMjAwcHg7XHJcbiAgLy8gbWFyZ2luOiBhdXRvO1xyXG4gIC8vIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAvLyBoZWlnaHQ6IDIwMHB4O1xyXG4gIC8vIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIC8vIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgLy8gZGlzcGxheTogZmxleDtcclxuICAvLyBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIC8vIG1hcmdpbi10b3A6IDQ4cHg7XHJcbiAgLy8gbWFyZ2luOiBhdXRvO1xyXG4gIGhlaWdodDogMjAwcHg7XHJcbiAgbWF4LXdpZHRoOiAyMDBweDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./app/widgets/data-pointer-non-image/data-pointer-none-image.component.ts":
/*!*********************************************************************************!*\
  !*** ./app/widgets/data-pointer-non-image/data-pointer-none-image.component.ts ***!
  \*********************************************************************************/
/*! exports provided: DataPointerNoneImageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPointerNoneImageComponent", function() { return DataPointerNoneImageComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");






let DataPointerNoneImageComponent = class DataPointerNoneImageComponent {
    constructor(config) {
        this.config = config;
        this.pointerText = "N/A";
        this.unit = "N/A";
        this.description = "N/A";
        this.color = '#333';
        this.suffix = '';
    }
    convertNumberAndSuffic(number) {
        if (this.pointerText === null || this.pointerText === undefined) {
            this.pointerText = 'N/A';
        }
        const { scalledNumber, suffix, unit } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_4__["abbreviateNumber"])(number);
        if (!scalledNumber)
            return null;
        this.pointerText = scalledNumber;
        const type = this.type ? this.type.toString().toLowerCase() : '';
        if (type.toLowerCase() == 'wh') {
            this.unit = 'Wh';
            this.suffix = suffix;
        }
        else if (type.toLowerCase() == 'kwh') {
            this.unit = 'kWh';
            this.suffix = '';
            this.pointerText = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_4__["moneyFormat"])((number / 1000).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_3__["DECIMAL_MAP"].trendLogs));
        }
        else if (type.toLowerCase() == 'kgco2') {
            this.unit = 'kgCO<sub>2</sub>';
            this.suffix = '';
            this.pointerText = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_4__["moneyFormat"])((number / 1000).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_3__["DECIMAL_MAP"].trendLogs));
        }
        else if (type.toLowerCase() == 'kwhm2') {
            this.suffix = '';
            this.pointerText = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_4__["moneyFormat"])((number / 1000).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_3__["DECIMAL_MAP"].electricalTodayConsumption));
        }
        else {
            this.unit = this.unit;
            this.suffix = suffix;
        }
    }
    ngOnChanges(changes) {
        this.convertNumberAndSuffic(Number(this.pointerText));
        // if(Number(this.pointerText) > 10000000000){
        //   this.pointerText = `${this.round((((Number(this.pointerText)/1000)/1000)/1000).toString(), 2)}`;
        //   if(this.type === 'kwh'){
        //     this.unit = "TWh";
        //   } else {
        //     this.unit = this.unit;
        //     this.pointerText = `${this.round(this.pointerText, 2)}`;
        //     this.suffix = 'G';
        //   }
        // } else if(Number(this.pointerText) > 10000000){
        //   this.pointerText = `${this.round(((Number(this.pointerText)/1000)/1000).toString(), 2)}`;
        //   if(this.type === 'kwh'){
        //     this.unit = "GWh";
        //   } else {
        //     this.unit = this.unit;
        //     this.pointerText = `${this.round(this.pointerText, 2)}`;
        //     this.suffix = 'M';
        //   }
        // } else if(Number(this.pointerText) > 10000){
        //   this.pointerText = `${this.round((Number(this.pointerText)/1000).toString(), 2)}`;
        //   if(this.type === 'kwh'){
        //     this.unit = "MWh";
        //   } else {
        //     this.unit = this.unit;
        //     this.pointerText = `${this.round(this.pointerText, 2)}`;
        //     this.suffix = 'K';
        //   }
        // } else {
        //   if(this.type === 'kwh'){
        //     this.unit = 'kwh';
        //   } else {
        //     this.unit = this.unit;
        //   }
        //   this.pointerText = fixDecimalNumPrecision(this.pointerText, this.config.siteConfigurations.decimalNumPrecision);
        // }
    }
    round(value, precision) {
        var multiplier = Math.pow(10, precision || 0);
        return Math.round(value * multiplier) / multiplier;
    }
    ngOnInit() {
        this.convertNumberAndSuffic(Number(this.pointerText));
        // if(Number(this.pointerText) > 10000){
        //   if(this.type === 'wh'){
        //     this.unit = "MWh";
        //   } else {
        //     this.unit = this.unit;
        //     this.pointerText = `${this.round(this.pointerText, 3)}`;
        //     this.suffix = 'K';
        //   }
        // }
    }
};
DataPointerNoneImageComponent.ctorParameters = () => [
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerNoneImageComponent.prototype, "pointerText", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerNoneImageComponent.prototype, "unit", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerNoneImageComponent.prototype, "description", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerNoneImageComponent.prototype, "type", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerNoneImageComponent.prototype, "color", void 0);
DataPointerNoneImageComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-data-pointer-none-image',
        template: __webpack_require__(/*! raw-loader!./data-pointer-none-image.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/data-pointer-non-image/data-pointer-none-image.component.html"),
        host: { 'class': 'w-100 d-flex align-items-center justify-content-center flex-column' },
        styles: [__webpack_require__(/*! ./data-pointer-none-image.component.scss */ "./app/widgets/data-pointer-non-image/data-pointer-none-image.component.scss")]
    })
], DataPointerNoneImageComponent);



/***/ }),

/***/ "./app/widgets/data-pointer/data-pointer.component.scss":
/*!**************************************************************!*\
  !*** ./app/widgets/data-pointer/data-pointer.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.pointer-container {\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #727272;\n  padding: 10px !important;\n  background-color: #293946;\n  border-color: transparent;\n  min-height: 158px;\n  height: 100%;\n  padding-top: 20px !important;\n}\n\n.pointer-container .value-detail {\n  margin: 20px 0 !important;\n  margin-top: 35px !important;\n}\n\n.pointer-container .image {\n  width: 40px;\n  height: 40px;\n  -o-object-fit: contain;\n     object-fit: contain;\n  position: absolute;\n  right: 10px;\n}\n\n.pointer-container .img-container {\n  align-items: center;\n  justify-content: center;\n  display: flex;\n}\n\n.pointer-container .img-container .pointer-text {\n  left: 0;\n  right: 0;\n  margin: auto;\n  text-align: center;\n  top: 28%;\n  font-size: 1.7rem;\n  padding-right: 10px;\n}\n\n.pointer-container .img-container .pointer-unit {\n  left: 0;\n  right: 0;\n  margin: auto;\n  text-align: center;\n  top: 50%;\n  text-align: center;\n  font-size: 1.5rem;\n}\n\n.pointer-container .img-container .pointer-img {\n  left: 0;\n  right: 0;\n  margin: auto;\n}\n\n.labeling {\n  position: absolute;\n  left: 15px;\n  top: 15px;\n  width: 150%;\n}\n\n@media only screen and (max-width: 600px) {\n  .mob-res {\n    width: 100%;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9kYXRhLXBvaW50ZXIvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcZGF0YS1wb2ludGVyXFxkYXRhLXBvaW50ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvZGF0YS1wb2ludGVyL2RhdGEtcG9pbnRlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvd2lkZ2V0cy9kYXRhLXBvaW50ZXIvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNDQTtFQUNJLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7RUFFQSx5QkFBQTtFQUNBLHdCQUFBO0VBQ0EseUJBQUE7RUFDQSx5QkFBQTtFQUVBLGlCQUFBO0VBQ0EsWUFBQTtFQUNBLDRCQUFBO0FEQUo7O0FDQ0k7RUFDRSx5QkFBQTtFQUNBLDJCQUFBO0FEQ047O0FDQ0k7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0tBQUEsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QURDTjs7QUNDSTtFQUVFLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxhQUFBO0FEQU47O0FDQ1E7RUFDSSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxpQkZSUTtFRVNSLG1CQUFBO0FEQ1o7O0FDR1E7RUFDSSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxrQkFBQTtFQUNBLGlCRm5CYTtBQ2tCekI7O0FDSVE7RUFDSSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFlBQUE7QURGWjs7QUNNQTtFQUVFLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0FESkY7O0FDT0E7RUFDRTtJQUNFLFdBQUE7RURKRjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvd2lkZ2V0cy9kYXRhLXBvaW50ZXIvZGF0YS1wb2ludGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWF0ZXJpYWwgY29sb3JzXHJcbiRiZy1jb2xvcjogIzFlMWYyMTtcclxuJGhlYWRlci1jb2xvcjogIzI5Mzk0NjtcclxuJGJnLWNhcmQ6ICMyNDJjMzM7XHJcbiRiZy1wcmltYXJ5OiAjMDA3YmZmO1xyXG4kYmctc2Vjb25kYXJ5OiAjMjkzOTQ2O1xyXG4kYmctb3B0LW9uZTogIzJmNDI1MTtcclxuJGJnLW9wdC10d286ICMzYzYxN2Q7XHJcbiRiZy1vcHQtZm91cjogIzM2NTU2ZjtcclxuJGJnLXRhYmxlLWhlYWRlcjogIzFjMjMyODtcclxuJGJnLXRhYmxlLWJvZHk6ICMzNDNmNDk7XHJcblxyXG4vLyBib3JkZXIgY29sb3JzXHJcbiRjb2xvci1ib3JkZXItcHJpbWFyeTogIzM1NDk1ODtcclxuXHJcbi8vIGNvbW1vbiBjb2xvcnNcclxuJHRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcclxuXHJcbi8vIHR5cG8gY29sb3JzXHJcbiRmb250LWNvbG9yOiAjZmZmZmZmO1xyXG4kY29sb3ItZm9udC1zZWNvbmRhcnk6ICNmZmY7XHJcbiRjb2xvci1mb250LXRlcm5hcnk6ICNiOWJhYmI7XHJcbiRmb250LWRhbmdlcjogI2U3NDgzYztcclxuJGZvbnQtbmV1dHJhbDogIzExYjcyYztcclxuJGZvbnQtd2FybmluZzogI2U3OGMzYztcclxuXHJcbi8vIHR5cG8gc2l6ZXNcclxuJHNpemUtZm9udC1wcmltYXJ5OiAuOHJlbTtcclxuJHNpemUtZm9udC1zZWNvbmRhcnk6IDFyZW07XHJcbiRzaXplLWZvbnQtbGFyZ2U6IDNyZW07XHJcbiRzaXplLWZvbnQtaGVhZGVyLWJ0bjogMC45cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXI6IDEuN3JlbTtcclxuJHNpemUtZm9udC1wb2ludGVyLXVuaXQ6IDEuNXJlbTtcclxuJHNpemUtZm9udC1taWQ6IDIuMXJlbTtcclxuJHNpemUtZm9udC1sb3c6IDAuOHJlbTtcclxuXHJcbi8vIGNvbXBvbmVudCBzaXplc1xyXG4kaGVhZGVyLWhlaWdodDogNzBweDtcclxuJGhlaWdodC1jaGFydC1oZWFkZXI6IDQ3Ljc4cHg7XHJcbiRzaWRlLWJhci13aWR0aDogMjUwcHg7XHJcblxyXG4uZGF0ZS1waWNrZXItaW5wdXR7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iLCIuZGF0ZS1waWNrZXItaW5wdXQge1xuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLnBvaW50ZXItY29udGFpbmVyIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNzI3MjcyO1xuICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTM5NDY7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG1pbi1oZWlnaHQ6IDE1OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiAyMHB4ICFpbXBvcnRhbnQ7XG59XG4ucG9pbnRlci1jb250YWluZXIgLnZhbHVlLWRldGFpbCB7XG4gIG1hcmdpbjogMjBweCAwICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDM1cHggIWltcG9ydGFudDtcbn1cbi5wb2ludGVyLWNvbnRhaW5lciAuaW1hZ2Uge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAxMHB4O1xufVxuLnBvaW50ZXItY29udGFpbmVyIC5pbWctY29udGFpbmVyIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG4ucG9pbnRlci1jb250YWluZXIgLmltZy1jb250YWluZXIgLnBvaW50ZXItdGV4dCB7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBtYXJnaW46IGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdG9wOiAyOCU7XG4gIGZvbnQtc2l6ZTogMS43cmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xufVxuLnBvaW50ZXItY29udGFpbmVyIC5pbWctY29udGFpbmVyIC5wb2ludGVyLXVuaXQge1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgbWFyZ2luOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRvcDogNTAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xufVxuLnBvaW50ZXItY29udGFpbmVyIC5pbWctY29udGFpbmVyIC5wb2ludGVyLWltZyB7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5sYWJlbGluZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMTVweDtcbiAgdG9wOiAxNXB4O1xuICB3aWR0aDogMTUwJTtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAubW9iLXJlcyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn0iLCJcclxuQGltcG9ydCAnc3JjL3Njc3MvX3ZhcmlhYmxlcy5zY3NzJztcclxuXHJcbi5wb2ludGVyLWNvbnRhaW5lcntcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIC8vIGJvcmRlcjogMnB4IHNvbGlkICNkNWQ1ZDU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNzI3MjcyO1xyXG4gICAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQxIDU3IDcwKTtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAvLyBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtaW4taGVpZ2h0OiAxNThweDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAudmFsdWUtZGV0YWlse1xyXG4gICAgICBtYXJnaW46IDIwcHggMCAhaW1wb3J0YW50O1xyXG4gICAgICBtYXJnaW4tdG9wOiAzNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAuaW1hZ2V7XHJcbiAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgcmlnaHQ6IDEwcHg7XHJcbiAgICB9XHJcbiAgICAuaW1nLWNvbnRhaW5lcntcclxuXHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIC5wb2ludGVyLXRleHR7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgdG9wOiAyOCU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJHNpemUtZm9udC1wb2ludGVyO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb2ludGVyLXVuaXR7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAkc2l6ZS1mb250LXBvaW50ZXItdW5pdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb2ludGVyLWltZ3tcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLmxhYmVsaW5ne1xyXG4gIC8vIG1hcmdpbi10b3A6IC0yMHB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAxNXB4O1xyXG4gIHRvcDogMTVweDtcclxuICB3aWR0aDogMTUwJTtcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4gIC5tb2ItcmVzIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuLnBvaW50ZXItbWluLWhlaWdodCB7XHJcbiAgLy8gbWluLWhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbiJdfQ== */"

/***/ }),

/***/ "./app/widgets/data-pointer/data-pointer.component.ts":
/*!************************************************************!*\
  !*** ./app/widgets/data-pointer/data-pointer.component.ts ***!
  \************************************************************/
/*! exports provided: DataPointerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataPointerComponent", function() { return DataPointerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");





let DataPointerComponent = class DataPointerComponent {
    constructor(config) {
        this.config = config;
        this.pointerText = "N/A";
        this.unit = "N/A";
        this.description = "N/A";
        this.color = '#333';
        this.image = '';
        this.isDone = true;
        this.suffix = '';
    }
    convertNumberAndSuffic(number) {
        if (this.pointerText === null || this.pointerText === undefined) {
            this.pointerText = 'N/A';
        }
        const { scalledNumber, suffix, unit } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["abbreviateNumber"])(number);
        if (!scalledNumber)
            return null;
        this.pointerText = scalledNumber;
        const type = this.type ? this.type.toString().toLowerCase() : '';
        if (type == 'wh') {
            this.unit = 'Wh';
            this.suffix = suffix;
        }
        else if (type == 'kwh') {
            this.unit = 'kWh';
            this.suffix = suffix;
            this.suffix = '';
            this.pointerText = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["moneyFormat"])((number / 1000).toFixed());
        }
        else if (type == 'kgco2') {
            this.unit = 'kgCO<sub>2</sub>';
            this.suffix = '';
            this.pointerText = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["moneyFormat"])((number / 1000).toFixed());
        }
        else if (type.toLowerCase() == 'kwhm2') {
            this.suffix = '';
            this.pointerText = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_3__["moneyFormat"])((number / 1000).toFixed());
        }
        else {
            this.unit = this.unit;
            this.suffix = suffix;
        }
    }
    ngOnChanges(changes) {
        this.convertNumberAndSuffic(Number(this.pointerText));
        // if(Number(this.pointerText) > 10000000000){
        //   this.pointerText = `${this.round((((Number(this.pointerText)/1000)/1000)/1000).toString(), 2)}`;
        //   if(this.type === 'kwh'){
        //     this.unit = "TWh";
        //   } else {
        //     this.unit = this.unit;
        //     this.pointerText = `${this.round(this.pointerText, 2)}`;
        //     this.suffix = 'G';
        //   }
        // } else if(Number(this.pointerText) > 10000000){
        //   this.pointerText = `${this.round(((Number(this.pointerText)/1000)/1000).toString(), 2)}`;
        //   if(this.type === 'kwh'){
        //     this.unit = "GWh";
        //   } else {
        //     this.unit = this.unit;
        //     this.pointerText = `${this.round(this.pointerText, 2)}`;
        //     this.suffix = 'M';
        //   }
        // } else if(Number(this.pointerText) > 10000){
        //   this.pointerText = `${this.round((Number(this.pointerText)/1000).toString(), 2)}`;
        //   if(this.type === 'kwh'){
        //     this.unit = "MWh";
        //   } else {
        //     this.unit = this.unit;
        //     this.pointerText = `${this.round(this.pointerText, 2)}`;
        //     this.suffix = 'K';
        //   }
        // } else {
        //   if(this.type === 'kwh'){
        //     this.unit = 'kwh';
        //   } else {
        //     this.unit = this.unit;
        //   }
        //   this.pointerText = fixDecimalNumPrecision(this.pointerText, this.config.siteConfigurations.decimalNumPrecision);
        // }
    }
    round(value, precision) {
        var multiplier = Math.pow(10, precision || 0);
        return Math.round(value * multiplier) / multiplier;
    }
    ngOnInit() {
        this.convertNumberAndSuffic(Number(this.pointerText));
        // if(Number(this.pointerText) > 10000){
        //   if(this.type === 'wh'){
        //     this.unit = "MWh";
        //   } else {
        //     this.unit = this.unit;
        //     this.pointerText = `${this.round(this.pointerText, 3)}`;
        //     this.suffix = 'K';
        //   }
        // }
    }
};
DataPointerComponent.ctorParameters = () => [
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerComponent.prototype, "pointerText", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerComponent.prototype, "unit", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerComponent.prototype, "description", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerComponent.prototype, "type", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerComponent.prototype, "color", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerComponent.prototype, "image", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataPointerComponent.prototype, "isDone", void 0);
DataPointerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-data-pointer',
        template: __webpack_require__(/*! raw-loader!./data-pointer.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/data-pointer/data-pointer.component.html"),
        host: { 'class': 'w-100 h-100' },
        styles: [__webpack_require__(/*! ./data-pointer.component.scss */ "./app/widgets/data-pointer/data-pointer.component.scss")]
    })
], DataPointerComponent);



/***/ }),

/***/ "./app/widgets/data-table/data-table.component.scss":
/*!**********************************************************!*\
  !*** ./app/widgets/data-table/data-table.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row-limit {\n  font-size: 14px;\n}\n\n.loading-area {\n  width: 100%;\n  height: 600px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9kYXRhLXRhYmxlL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGRhdGEtdGFibGVcXGRhdGEtdGFibGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvZGF0YS10YWJsZS9kYXRhLXRhYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvZGF0YS10YWJsZS9kYXRhLXRhYmxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdy1saW1pdCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDYwMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmxvYWRpbmctaWNvbiB7XHJcbiAgICB3aWR0aDogNzVweDtcclxuICAgIGhlaWdodDogYXV0bztcclxufSIsIi5yb3ctbGltaXQge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5sb2FkaW5nLWFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5sb2FkaW5nLWljb24ge1xuICB3aWR0aDogNzVweDtcbiAgaGVpZ2h0OiBhdXRvO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/data-table/data-table.component.ts":
/*!********************************************************!*\
  !*** ./app/widgets/data-table/data-table.component.ts ***!
  \********************************************************/
/*! exports provided: DataTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataTableComponent", function() { return DataTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isEqual */ "../node_modules/lodash/isEqual.js");
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_uniqWith__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/uniqWith */ "../node_modules/lodash/uniqWith.js");
/* harmony import */ var lodash_uniqWith__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqWith__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");







let DataTableComponent = class DataTableComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.isLoading = false;
        this.rows = [];
        this.columns = [];
        this.clickable = false;
        this.onActionClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onRowClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__["ColumnMode"];
        this.SelectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__["SelectionType"];
        this.selectedRows = [];
        this.tableWidth = new rxjs__WEBPACK_IMPORTED_MODULE_6__["BehaviorSubject"]('100%');
        this.rowLimits = [
            { id: 1, name: 10 },
            { id: 2, name: 15 },
            { id: 3, name: 25 },
            { id: 4, name: 50 },
            { id: 5, name: 100 }
        ];
        this.limit = 15;
    }
    ngOnInit() {
        this.headerService.getChartWidth().subscribe(res => {
            this.tableWidth.next(res / this.columns.length);
        });
    }
    ngOnChanges() {
        this.rows = lodash_uniqWith__WEBPACK_IMPORTED_MODULE_4___default()(this.rows, lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default.a);
    }
    changeNoOfRows(event) {
        const rowLimit = this.rowLimits.find(x => x.id == event.value);
        this.limit = rowLimit.name;
    }
    isActionColumn(key) {
        return key.includes('Action');
    }
    onActionButtonClicked(row, key) {
        this.onActionClicked.emit({ key, data: row });
    }
    onRowClickedEvent(e) {
        this.onRowClicked.emit(e);
        this.selectedRows = [];
    }
};
DataTableComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_5__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChildren"])('dataTable')
], DataTableComponent.prototype, "dataTable", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataTableComponent.prototype, "isLoading", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataTableComponent.prototype, "rows", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataTableComponent.prototype, "columns", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DataTableComponent.prototype, "clickable", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], DataTableComponent.prototype, "onActionClicked", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], DataTableComponent.prototype, "onRowClicked", void 0);
DataTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-data-table',
        template: __webpack_require__(/*! raw-loader!./data-table.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/data-table/data-table.component.html"),
        styles: [__webpack_require__(/*! ./data-table.component.scss */ "./app/widgets/data-table/data-table.component.scss")]
    })
], DataTableComponent);



/***/ }),

/***/ "./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.scss":
/*!**********************************************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.scss ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".custom-day {\n  text-align: center;\n  padding: 0.185rem 0.25rem;\n  display: inline-block;\n  height: 2rem;\n  width: 2rem;\n}\n\n.custom-day.focused {\n  background-color: #e6e6e6;\n}\n\n.custom-day.range,\n.custom-day:hover {\n  background-color: #2f4251;\n  color: white;\n}\n\n.custom-day.faded {\n  background-color: #818182;\n}\n\n.custom-day.weekend {\n  color: #ca0000;\n}\n\n.custom-day.disabled {\n  color: #c8cdd2;\n}\n\nsvg {\n  width: 0.3rem;\n  height: 0.3rem;\n}\n\n.right-model {\n  right: 0px !important;\n}\n\n.date-picker-input {\n  font-size: 12px;\n  cursor: pointer;\n  /* max-width:180px; */\n  background-color: #FFFFFF;\n  text-align: left;\n  background-image: url(\"data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDUxMiA1MTI7IiB4bWw6c3BhY2U9InByZXNlcnZlIiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KPGc+Cgk8Zz4KCQk8cGF0aCBkPSJNNDUyLDQwaC0yNFYwaC00MHY0MEgxMjRWMEg4NHY0MEg2MEMyNi45MTYsNDAsMCw2Ni45MTYsMCwxMDB2MzUyYzAsMzMuMDg0LDI2LjkxNiw2MCw2MCw2MGgzOTIgICAgYzMzLjA4NCwwLDYwLTI2LjkxNiw2MC02MFYxMDBDNTEyLDY2LjkxNiw0ODUuMDg0LDQwLDQ1Miw0MHogTTQ3Miw0NTJjMCwxMS4wMjgtOC45NzIsMjAtMjAsMjBINjBjLTExLjAyOCwwLTIwLTguOTcyLTIwLTIwVjE4OCAgICBoNDMyVjQ1MnogTTQ3MiwxNDhINDB2LTQ4YzAtMTEuMDI4LDguOTcyLTIwLDIwLTIwaDI0djQwaDQwVjgwaDI2NHY0MGg0MFY4MGgyNGMxMS4wMjgsMCwyMCw4Ljk3MiwyMCwyMFYxNDh6IiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSI3NiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9IjE1NiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9IjIzNiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9IjMxNiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9IjM5NiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9Ijc2IiB5PSIzMTAiIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHJlY3QgeD0iMTU2IiB5PSIzMTAiIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHJlY3QgeD0iMjM2IiB5PSIzMTAiIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHJlY3QgeD0iMzE2IiB5PSIzMTAiIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHJlY3QgeD0iNzYiIHk9IjM5MCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSIxNTYiIHk9IjM5MCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSIyMzYiIHk9IjM5MCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSIzMTYiIHk9IjM5MCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSIzOTYiIHk9IjMxMCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPC9zdmc+Cg==\");\n  background-position: 98%;\n  padding-right: 30px;\n  background-repeat: no-repeat;\n}\n\n.date-picker-month {\n  position: relative;\n}\n\n.date-picker-month .date-picker-month-windows {\n  position: absolute;\n  width: 260px;\n  z-index: 999;\n  background-color: #fff;\n  top: 28px;\n  left: 0;\n}\n\n.date-picker-month .date-picker-month-windows .wraper-dates {\n  overflow: hidden;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .year-picker {\n  width: 100%;\n  color: #333;\n  text-align: center;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .year-picker .year-picker-inside {\n  padding: 5px;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .year-picker .year-picker-inside span {\n  font-weight: 700;\n  cursor: pointer;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .year-picker .year-picker-inside .arrow-icon {\n  cursor: pointer;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .year-picker .year-picker-inside .arrow-icon svg {\n  width: 20px;\n  height: 20px;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .date-list .date-item {\n  color: #333;\n  width: 33.33%;\n  padding: 1px;\n  font-size: 12px;\n  text-align: center;\n  cursor: pointer;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .date-list .date-item span {\n  padding: 4px;\n  display: block;\n  border: 1px solid #c9c9c9;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .date-list .date-item span:hover {\n  background-color: #8d8d8d;\n  color: #fff;\n}\n\n.date-picker-month .date-picker-month-windows .date-picker-month-windows-inside .date-list .date-item .selected {\n  background-color: #8d8d8d;\n  color: #fff;\n}\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.ts":
/*!********************************************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.ts ***!
  \********************************************************************************************/
/*! exports provided: MonthDatePickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthDatePickerComponent", function() { return MonthDatePickerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


const LIST_MONTH = [
    { label: 'January', value: 1 }, { label: 'February', value: 2 }, { label: 'March', value: 3 }, { label: 'April', value: 4 }, { label: 'May', value: 5 },
    { label: 'June', value: 6 }, { label: 'July', value: 7 }, { label: 'August', value: 8 }, { label: 'September', value: 9 }, { label: 'October', value: 10 },
    { label: 'November', value: 11 }, { label: 'December', value: 12 }
];
let MonthDatePickerComponent = class MonthDatePickerComponent {
    constructor() {
        this.isYear = false;
        this.disabled = false;
        this.dateRangeChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this._monthList = LIST_MONTH;
        this._yearList = [];
        this._selectedYear = null;
        this._selectedMonth = null;
        this._isYearOpened = false;
        this._leftPos = 0;
        this._boxWidth = 100;
        this._max = 100;
        this._showPop = false;
        this._value = '';
        this.getDateTextFormat = (date) => {
            return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;
        };
        this.generateYear = () => {
            const end = new Date().getFullYear() + 5;
            const start = 1980;
            let newYear = start;
            const newArrYear = [];
            let newArrYearItem = [];
            while (newYear < end) {
                newArrYearItem.push({
                    label: newYear,
                    value: newYear
                });
                newYear += 1;
                if (newYear % 12 == 0 || newYear >= end) {
                    newArrYear.push(newArrYearItem);
                    newArrYearItem = [];
                }
            }
            this._leftPos = ((newArrYear.length - 1) * -100);
            this.setPosLeft(newArrYear);
            // this._leftPos = ((newArrYear.length - 1) * -100);
            this._boxWidth = ((newArrYear.length) * 100);
            this._max = ((newArrYear.length - 1) * -100);
            return newArrYear;
        };
        this.setPosLeft = (newArrYear) => {
            for (let i = 0; i < newArrYear.length; i++) {
                const group = newArrYear[i];
                for (let j = 0; j < group.length; j++) {
                    if (this._selectedYear == group[j].value) {
                        this._leftPos = ((i) * -100);
                        break;
                    }
                }
            }
        };
        this.onPickMonth = (value) => {
            this._selectedMonth = value;
            this.getDate();
            this.openPopup();
        };
        this.onPickYear = (value) => {
            this._selectedYear = value;
            if (this.isYear) {
                this._selectedMonth = 1;
                this.getDate();
                this.openPopup();
            }
            else {
                // this.getDate();
                this.openPopupYear();
            }
        };
        this.openPopupYear = () => {
            this._isYearOpened = !this._isYearOpened;
        };
        this.getDate = () => {
            const date = new Date(`${this._selectedMonth}/1/${this._selectedYear}`);
            this.dateRange = {
                start: date,
                end: date
            };
            this._value = this.getDateTextFormat(date);
            this.dateRangeChange.emit(this.dateRange);
        };
        this.openPopup = () => {
            this._showPop = !this._showPop;
        };
        this.onArrowClick = (cmd = 'next') => {
            if (cmd === 'next') {
                if (this._leftPos > this._max) {
                    this._leftPos = this._leftPos - 100;
                }
            }
            else {
                if (this._leftPos < 0) {
                    this._leftPos = this._leftPos + 100;
                }
            }
        };
    }
    ngOnInit() {
        this._yearList = this.generateYear();
        this._selectedYear = this.dateRange ? this.dateRange.start.getFullYear() : new Date().getFullYear();
        this._selectedMonth = this.dateRange ? this.dateRange.start.getMonth() + 1 : new Date().getMonth() + 1;
        this._isYearOpened = this.isYear;
        this._value = this.getDateTextFormat(this.dateRange ? this.dateRange.start : new Date());
        this._showPop = false;
    }
    ngOnChanges(changes) {
        if (changes.dateRange || changes.disabled) {
            this.ngOnInit();
        }
    }
    onDateChange(date) {
        this.dateRangeChange.emit(this.dateRange);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MonthDatePickerComponent.prototype, "dateRange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MonthDatePickerComponent.prototype, "fullWidth", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MonthDatePickerComponent.prototype, "minDate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MonthDatePickerComponent.prototype, "maxDate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MonthDatePickerComponent.prototype, "isYear", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MonthDatePickerComponent.prototype, "disabled", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], MonthDatePickerComponent.prototype, "dateRangeChange", void 0);
MonthDatePickerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'month-date-pciker',
        template: __webpack_require__(/*! raw-loader!./date-month-picker.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.html"),
        styles: [__webpack_require__(/*! ./date-month-picker.component.scss */ "./app/widgets/date-range-picker/lib/date-month-picker/date-month-picker.component.scss")]
    })
], MonthDatePickerComponent);



/***/ }),

/***/ "./app/widgets/date-range-picker/lib/date-picker/date-picker.component.css":
/*!*********************************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/date-picker/date-picker.component.css ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "svg {\r\n  width: 1rem;\r\n  height: 1rem;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9kYXRlLXJhbmdlLXBpY2tlci9saWIvZGF0ZS1waWNrZXIvZGF0ZS1waWNrZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2RhdGUtcmFuZ2UtcGlja2VyL2xpYi9kYXRlLXBpY2tlci9kYXRlLXBpY2tlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsic3ZnIHtcclxuICB3aWR0aDogMXJlbTtcclxuICBoZWlnaHQ6IDFyZW07XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./app/widgets/date-range-picker/lib/date-picker/date-picker.component.ts":
/*!********************************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/date-picker/date-picker.component.ts ***!
  \********************************************************************************/
/*! exports provided: DatePickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatePickerComponent", function() { return DatePickerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_NgbDateNativeAdapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/NgbDateNativeAdapter */ "./app/widgets/date-range-picker/lib/services/NgbDateNativeAdapter.ts");



let DatePickerComponent = class DatePickerComponent {
    constructor(dateAdapter) {
        this.dateAdapter = dateAdapter;
        this.disabled = false;
        this.dateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
        this.ngbDate = this.dateAdapter.fromModel(this.date);
    }
    ngOnChanges(changes) {
        if (changes.date || changes.disabled) {
            this.ngOnInit();
        }
    }
    onDateChange(date) {
        this.dateChange.emit(this.dateAdapter.toModel(date));
    }
};
DatePickerComponent.ctorParameters = () => [
    { type: _services_NgbDateNativeAdapter__WEBPACK_IMPORTED_MODULE_2__["NgbDateNativeAdapter"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DatePickerComponent.prototype, "date", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DatePickerComponent.prototype, "disabled", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], DatePickerComponent.prototype, "dateChange", void 0);
DatePickerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'date-picker',
        template: __webpack_require__(/*! raw-loader!./date-picker.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/date-range-picker/lib/date-picker/date-picker.component.html"),
        styles: [__webpack_require__(/*! ./date-picker.component.css */ "./app/widgets/date-range-picker/lib/date-picker/date-picker.component.css")]
    })
], DatePickerComponent);



/***/ }),

/***/ "./app/widgets/date-range-picker/lib/date-range-picker.module.ts":
/*!***********************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/date-range-picker.module.ts ***!
  \***********************************************************************/
/*! exports provided: DateRangePickerModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateRangePickerModule", function() { return DateRangePickerModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _date_range_picker_date_range_picker_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./date-range-picker/date-range-picker.component */ "./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.ts");
/* harmony import */ var _date_picker_date_picker_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./date-picker/date-picker.component */ "./app/widgets/date-range-picker/lib/date-picker/date-picker.component.ts");
/* harmony import */ var _services_NgbDateNativeAdapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./services/NgbDateNativeAdapter */ "./app/widgets/date-range-picker/lib/services/NgbDateNativeAdapter.ts");
/* harmony import */ var _services_ngb_date_native_parser_formatter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./services/ngb-date-native-parser-formatter */ "./app/widgets/date-range-picker/lib/services/ngb-date-native-parser-formatter.ts");









let DateRangePickerModule = class DateRangePickerModule {
};
DateRangePickerModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbModule"]],
        declarations: [_date_range_picker_date_range_picker_component__WEBPACK_IMPORTED_MODULE_5__["DateRangePickerComponent"], _date_picker_date_picker_component__WEBPACK_IMPORTED_MODULE_6__["DatePickerComponent"]],
        providers: [
            _services_NgbDateNativeAdapter__WEBPACK_IMPORTED_MODULE_7__["NgbDateNativeAdapter"],
            { provide: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbDateParserFormatter"], useClass: _services_ngb_date_native_parser_formatter__WEBPACK_IMPORTED_MODULE_8__["NgbDateNativeParserFormatter"] }
        ],
        exports: [_date_range_picker_date_range_picker_component__WEBPACK_IMPORTED_MODULE_5__["DateRangePickerComponent"], _date_picker_date_picker_component__WEBPACK_IMPORTED_MODULE_6__["DatePickerComponent"]]
    })
], DateRangePickerModule);



/***/ }),

/***/ "./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.css":
/*!*********************************************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.css ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".custom-day {\r\n  text-align: center;\r\n  padding: 0.185rem 0.25rem;\r\n  display: inline-block;\r\n  height: 2rem;\r\n  width: 2rem;\r\n}\r\n\r\n.custom-day.focused {\r\n  background-color: #e6e6e6;\r\n}\r\n\r\n.custom-day.range,\r\n.custom-day:hover {\r\n  background-color: rgb(47, 66, 81);\r\n  color: white;\r\n}\r\n\r\n.custom-day.faded {\r\n  background-color: rgb(129, 129, 130);\r\n}\r\n\r\n.custom-day.weekend {\r\n  color: #ca0000;\r\n}\r\n\r\n.custom-day.disabled {\r\n  color: #c8cdd2;\r\n}\r\n\r\nsvg {\r\n  width: 0.3rem;\r\n  height: 0.3rem;\r\n}\r\n\r\n.right-model{\r\n  right: 0px !important;\r\n}\r\n\r\n.date-picker-input {\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  /* max-width:180px; */\r\n  background-color: #FFFFFF;\r\n  text-align: left;\r\n  background-image: url('data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDUxMiA1MTI7IiB4bWw6c3BhY2U9InByZXNlcnZlIiB3aWR0aD0iMTZweCIgaGVpZ2h0PSIxNnB4Ij4KPGc+Cgk8Zz4KCQk8cGF0aCBkPSJNNDUyLDQwaC0yNFYwaC00MHY0MEgxMjRWMEg4NHY0MEg2MEMyNi45MTYsNDAsMCw2Ni45MTYsMCwxMDB2MzUyYzAsMzMuMDg0LDI2LjkxNiw2MCw2MCw2MGgzOTIgICAgYzMzLjA4NCwwLDYwLTI2LjkxNiw2MC02MFYxMDBDNTEyLDY2LjkxNiw0ODUuMDg0LDQwLDQ1Miw0MHogTTQ3Miw0NTJjMCwxMS4wMjgtOC45NzIsMjAtMjAsMjBINjBjLTExLjAyOCwwLTIwLTguOTcyLTIwLTIwVjE4OCAgICBoNDMyVjQ1MnogTTQ3MiwxNDhINDB2LTQ4YzAtMTEuMDI4LDguOTcyLTIwLDIwLTIwaDI0djQwaDQwVjgwaDI2NHY0MGg0MFY4MGgyNGMxMS4wMjgsMCwyMCw4Ljk3MiwyMCwyMFYxNDh6IiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSI3NiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9IjE1NiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9IjIzNiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9IjMxNiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9IjM5NiIgeT0iMjMwIiB3aWR0aD0iNDAiIGhlaWdodD0iNDAiIGZpbGw9IiMwMDAwMDAiLz4KCTwvZz4KPC9nPgo8Zz4KCTxnPgoJCTxyZWN0IHg9Ijc2IiB5PSIzMTAiIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHJlY3QgeD0iMTU2IiB5PSIzMTAiIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHJlY3QgeD0iMjM2IiB5PSIzMTAiIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHJlY3QgeD0iMzE2IiB5PSIzMTAiIHdpZHRoPSI0MCIgaGVpZ2h0PSI0MCIgZmlsbD0iIzAwMDAwMCIvPgoJPC9nPgo8L2c+CjxnPgoJPGc+CgkJPHJlY3QgeD0iNzYiIHk9IjM5MCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSIxNTYiIHk9IjM5MCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSIyMzYiIHk9IjM5MCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSIzMTYiIHk9IjM5MCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+Cgk8Zz4KCQk8cmVjdCB4PSIzOTYiIHk9IjMxMCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjQwIiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPC9zdmc+Cg==');\r\n  background-position: 98%;\r\n  padding-right:30px;\r\n  background-repeat: no-repeat;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9kYXRlLXJhbmdlLXBpY2tlci9saWIvZGF0ZS1yYW5nZS1waWNrZXIvZGF0ZS1yYW5nZS1waWNrZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7O0VBRUUsaUNBQWlDO0VBQ2pDLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZUFBZTtFQUNmLHFCQUFxQjtFQUNyQix5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLHd3RkFBd3dGO0VBQ3h3Rix3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLDRCQUE0QjtBQUM5QiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvZGF0ZS1yYW5nZS1waWNrZXIvbGliL2RhdGUtcmFuZ2UtcGlja2VyL2RhdGUtcmFuZ2UtcGlja2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tLWRheSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDAuMTg1cmVtIDAuMjVyZW07XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGhlaWdodDogMnJlbTtcclxuICB3aWR0aDogMnJlbTtcclxufVxyXG5cclxuLmN1c3RvbS1kYXkuZm9jdXNlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcclxufVxyXG5cclxuLmN1c3RvbS1kYXkucmFuZ2UsXHJcbi5jdXN0b20tZGF5OmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDcsIDY2LCA4MSk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uY3VzdG9tLWRheS5mYWRlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEyOSwgMTI5LCAxMzApO1xyXG59XHJcblxyXG4uY3VzdG9tLWRheS53ZWVrZW5kIHtcclxuICBjb2xvcjogI2NhMDAwMDtcclxufVxyXG5cclxuLmN1c3RvbS1kYXkuZGlzYWJsZWQge1xyXG4gIGNvbG9yOiAjYzhjZGQyO1xyXG59XHJcblxyXG5zdmcge1xyXG4gIHdpZHRoOiAwLjNyZW07XHJcbiAgaGVpZ2h0OiAwLjNyZW07XHJcbn1cclxuXHJcbi5yaWdodC1tb2RlbHtcclxuICByaWdodDogMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5kYXRlLXBpY2tlci1pbnB1dCB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICAvKiBtYXgtd2lkdGg6MTgwcHg7ICovXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9zdmcreG1sO3V0Zjg7YmFzZTY0LFBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQmxibU52WkdsdVp6MGlhWE52TFRnNE5Ua3RNU0kvUGdvOElTMHRJRWRsYm1WeVlYUnZjam9nUVdSdlltVWdTV3hzZFhOMGNtRjBiM0lnTVRrdU1DNHdMQ0JUVmtjZ1JYaHdiM0owSUZCc2RXY3RTVzRnTGlCVFZrY2dWbVZ5YzJsdmJqb2dOaTR3TUNCQ2RXbHNaQ0F3S1NBZ0xTMCtDanh6ZG1jZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWlCNGJXeHVjenA0YkdsdWF6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNVGs1T1M5NGJHbHVheUlnZG1WeWMybHZiajBpTVM0eElpQnBaRDBpUTJGd1lWOHhJaUI0UFNJd2NIZ2lJSGs5SWpCd2VDSWdkbWxsZDBKdmVEMGlNQ0F3SURVeE1pQTFNVElpSUhOMGVXeGxQU0psYm1GaWJHVXRZbUZqYTJkeWIzVnVaRHB1WlhjZ01DQXdJRFV4TWlBMU1USTdJaUI0Yld3NmMzQmhZMlU5SW5CeVpYTmxjblpsSWlCM2FXUjBhRDBpTVRad2VDSWdhR1ZwWjJoMFBTSXhObkI0SWo0S1BHYytDZ2s4Wno0S0NRazhjR0YwYUNCa1BTSk5ORFV5TERRd2FDMHlORll3YUMwME1IWTBNRWd4TWpSV01FZzROSFkwTUVnMk1FTXlOaTQ1TVRZc05EQXNNQ3cyTmk0NU1UWXNNQ3d4TURCMk16VXlZekFzTXpNdU1EZzBMREkyTGpreE5pdzJNQ3cyTUN3Mk1HZ3pPVElnSUNBZ1l6TXpMakE0TkN3d0xEWXdMVEkyTGpreE5pdzJNQzAyTUZZeE1EQkROVEV5TERZMkxqa3hOaXcwT0RVdU1EZzBMRFF3TERRMU1pdzBNSG9nVFRRM01pdzBOVEpqTUN3eE1TNHdNamd0T0M0NU56SXNNakF0TWpBc01qQklOakJqTFRFeExqQXlPQ3d3TFRJd0xUZ3VPVGN5TFRJd0xUSXdWakU0T0NBZ0lDQm9ORE15VmpRMU1ub2dUVFEzTWl3eE5EaElOREIyTFRRNFl6QXRNVEV1TURJNExEZ3VPVGN5TFRJd0xESXdMVEl3YURJMGRqUXdhRFF3Vmpnd2FESTJOSFkwTUdnME1GWTRNR2d5TkdNeE1TNHdNamdzTUN3eU1DdzRMamszTWl3eU1Dd3lNRll4TkRoNklpQm1hV3hzUFNJak1EQXdNREF3SWk4K0NnazhMMmMrQ2p3dlp6NEtQR2MrQ2drOFp6NEtDUWs4Y21WamRDQjRQU0kzTmlJZ2VUMGlNak13SWlCM2FXUjBhRDBpTkRBaUlHaGxhV2RvZEQwaU5EQWlJR1pwYkd3OUlpTXdNREF3TURBaUx6NEtDVHd2Wno0S1BDOW5QZ284Wno0S0NUeG5QZ29KQ1R4eVpXTjBJSGc5SWpFMU5pSWdlVDBpTWpNd0lpQjNhV1IwYUQwaU5EQWlJR2hsYVdkb2REMGlOREFpSUdacGJHdzlJaU13TURBd01EQWlMejRLQ1R3dlp6NEtQQzluUGdvOFp6NEtDVHhuUGdvSkNUeHlaV04wSUhnOUlqSXpOaUlnZVQwaU1qTXdJaUIzYVdSMGFEMGlOREFpSUdobGFXZG9kRDBpTkRBaUlHWnBiR3c5SWlNd01EQXdNREFpTHo0S0NUd3ZaejRLUEM5blBnbzhaejRLQ1R4blBnb0pDVHh5WldOMElIZzlJak14TmlJZ2VUMGlNak13SWlCM2FXUjBhRDBpTkRBaUlHaGxhV2RvZEQwaU5EQWlJR1pwYkd3OUlpTXdNREF3TURBaUx6NEtDVHd2Wno0S1BDOW5QZ284Wno0S0NUeG5QZ29KQ1R4eVpXTjBJSGc5SWpNNU5pSWdlVDBpTWpNd0lpQjNhV1IwYUQwaU5EQWlJR2hsYVdkb2REMGlOREFpSUdacGJHdzlJaU13TURBd01EQWlMejRLQ1R3dlp6NEtQQzluUGdvOFp6NEtDVHhuUGdvSkNUeHlaV04wSUhnOUlqYzJJaUI1UFNJek1UQWlJSGRwWkhSb1BTSTBNQ0lnYUdWcFoyaDBQU0kwTUNJZ1ptbHNiRDBpSXpBd01EQXdNQ0l2UGdvSlBDOW5QZ284TDJjK0NqeG5QZ29KUEdjK0Nna0pQSEpsWTNRZ2VEMGlNVFUySWlCNVBTSXpNVEFpSUhkcFpIUm9QU0kwTUNJZ2FHVnBaMmgwUFNJME1DSWdabWxzYkQwaUl6QXdNREF3TUNJdlBnb0pQQzluUGdvOEwyYytDanhuUGdvSlBHYytDZ2tKUEhKbFkzUWdlRDBpTWpNMklpQjVQU0l6TVRBaUlIZHBaSFJvUFNJME1DSWdhR1ZwWjJoMFBTSTBNQ0lnWm1sc2JEMGlJekF3TURBd01DSXZQZ29KUEM5blBnbzhMMmMrQ2p4blBnb0pQR2MrQ2drSlBISmxZM1FnZUQwaU16RTJJaUI1UFNJek1UQWlJSGRwWkhSb1BTSTBNQ0lnYUdWcFoyaDBQU0kwTUNJZ1ptbHNiRDBpSXpBd01EQXdNQ0l2UGdvSlBDOW5QZ284TDJjK0NqeG5QZ29KUEdjK0Nna0pQSEpsWTNRZ2VEMGlOellpSUhrOUlqTTVNQ0lnZDJsa2RHZzlJalF3SWlCb1pXbG5hSFE5SWpRd0lpQm1hV3hzUFNJak1EQXdNREF3SWk4K0NnazhMMmMrQ2p3dlp6NEtQR2MrQ2drOFp6NEtDUWs4Y21WamRDQjRQU0l4TlRZaUlIazlJak01TUNJZ2QybGtkR2c5SWpRd0lpQm9aV2xuYUhROUlqUXdJaUJtYVd4c1BTSWpNREF3TURBd0lpOCtDZ2s4TDJjK0Nqd3ZaejRLUEdjK0NnazhaejRLQ1FrOGNtVmpkQ0I0UFNJeU16WWlJSGs5SWpNNU1DSWdkMmxrZEdnOUlqUXdJaUJvWldsbmFIUTlJalF3SWlCbWFXeHNQU0lqTURBd01EQXdJaTgrQ2drOEwyYytDand2Wno0S1BHYytDZ2s4Wno0S0NRazhjbVZqZENCNFBTSXpNVFlpSUhrOUlqTTVNQ0lnZDJsa2RHZzlJalF3SWlCb1pXbG5hSFE5SWpRd0lpQm1hV3hzUFNJak1EQXdNREF3SWk4K0NnazhMMmMrQ2p3dlp6NEtQR2MrQ2drOFp6NEtDUWs4Y21WamRDQjRQU0l6T1RZaUlIazlJak14TUNJZ2QybGtkR2c5SWpRd0lpQm9aV2xuYUhROUlqUXdJaUJtYVd4c1BTSWpNREF3TURBd0lpOCtDZ2s4TDJjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEdjK0Nqd3ZaejRLUEM5emRtYytDZz09Jyk7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogOTglO1xyXG4gIHBhZGRpbmctcmlnaHQ6MzBweDtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG59Il19 */"

/***/ }),

/***/ "./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.ts":
/*!********************************************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.ts ***!
  \********************************************************************************************/
/*! exports provided: DateRangePickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateRangePickerComponent", function() { return DateRangePickerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _models_date_range__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/date-range */ "./app/widgets/date-range-picker/lib/models/date-range.ts");
/* harmony import */ var _services_NgbDateNativeAdapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/NgbDateNativeAdapter */ "./app/widgets/date-range-picker/lib/services/NgbDateNativeAdapter.ts");
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm2015/http.js");






let DateRangePickerComponent = class DateRangePickerComponent {
    constructor(dateAdapter, notifierService, http) {
        this.dateAdapter = dateAdapter;
        this.http = http;
        this.disabled = false;
        this.position = null;
        this.dateRangeChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.isInside = date => date.after(this.fromDate) && date.before(this.toDate);
        this.isFrom = date => date.equals(this.fromDate);
        this.isTo = date => date.equals(this.toDate);
        this.isDisabled = date => date.after(this.max) || date.before(this.min);
        this.isInFuture = date => date.after(this.toDate);
        this.notifier = notifierService;
        this.getSiteConfig().subscribe(data => {
            this.maxAllowDateRange = data.maxAllowDateRange;
        });
    }
    getSiteConfig() {
        return this.http.get('assets/configs/site-configs.json');
    }
    ngOnInit() {
        this.fromDate = this.dateAdapter.fromModel(this.dateRange.start);
        this.toDate = this.dateAdapter.fromModel(this.dateRange.end);
        this.min = this.minDate ? this.dateAdapter.fromModel(this.minDate) : null;
        this.max = this.maxDate ? this.dateAdapter.fromModel(this.maxDate) : null;
        this.inputElRef.nativeElement.value = this.formatInputText();
        if (this.fromDate) {
            this.dp.startDate = {
                year: this.fromDate.year,
                month: this.fromDate.month
            };
        }
    }
    ngOnChanges(changes) {
        if (changes.dateRange || changes.disabled) {
            this.ngOnInit();
        }
    }
    onDateChange(date, dp) {
        let tempFromDate = this.dateAdapter.toModel(this.fromDate);
        let tempDate = this.dateAdapter.toModel(date);
        if (this.isSingleDate) {
            this.toDate = date;
            this.fromDate = date;
            this.dateRange.start = this.dateAdapter.toModel(this.fromDate);
            this.dateRange.end = this.dateAdapter.toModel(this.fromDate);
            this.dateRangeChange.emit(this.dateRange);
            dp.close();
            return;
        }
        if (!this.fromDate && !this.toDate) {
            this.fromDate = date;
            this.dateRange.start = this.dateAdapter.toModel(this.fromDate);
        }
        else if (this.fromDate && !this.toDate && (tempDate >= tempFromDate)) {
            this.toDate = date;
            const tempEnd = this.dateAdapter.toModel(this.toDate);
            this.dateRange.end = new Date(this.dateAdapter.toModel(this.toDate).setDate(this.dateAdapter.toModel(this.toDate).getDate() + 1));
            const date1 = new Date(this.dateRange.end);
            const date2 = new Date(this.dateRange.start);
            const diffTime = Math.abs(date2 - date1);
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            const diffYears = Math.ceil(diffDays / 365);
            if (this.maxDateRange == '1month' && diffDays > this.maxAllowDateRange) {
                this.notifier.notify('warning', `Please Select a Valid Range. Maximum Date Range is ${this.maxAllowDateRange} days`);
            }
            else if (this.maxDateRange == '5years' && diffYears > 5) {
                this.notifier.notify('warning', 'Please Select a Valid Range. Maximum Date Range is 5 Years');
            }
            else {
                this.dateRangeChange.emit(this.dateRange);
            }
            this.dateRange.end = tempEnd;
            dp.close();
        }
        else {
            this.toDate = null;
            this.fromDate = date;
            this.dateRange.start = this.dateAdapter.toModel(this.fromDate);
            this.dateRange.end = null;
        }
        this.inputElRef.nativeElement.value = this.formatInputText();
    }
    formatInputText() {
        if ((this.dateRange.end !== null) &&
            (this.dateRange.start.toDateString() ==
                this.dateRange.end.toDateString())) {
            return `${this.dateRange.start.toLocaleDateString()}`;
        }
        else if (this.dateRange.start &&
            this.dateRange.end &&
            _models_date_range__WEBPACK_IMPORTED_MODULE_2__["DateRange"].isValidDate(this.dateRange.start) &&
            _models_date_range__WEBPACK_IMPORTED_MODULE_2__["DateRange"].isValidDate(this.dateRange.end)) {
            return `${this.dateRange.start.toLocaleDateString()} - ${this.dateRange.end.toLocaleDateString()}`;
        }
        return '';
    }
    isHovered(date) {
        return (this.fromDate &&
            !this.toDate &&
            this.hoveredDate &&
            date.after(this.fromDate) &&
            date.before(this.hoveredDate));
    }
    isWeekend(date) {
        const d = new Date(date.year, date.month - 1, date.day);
        return d.getDay() === 0 || d.getDay() === 6;
    }
};
DateRangePickerComponent.ctorParameters = () => [
    { type: _services_NgbDateNativeAdapter__WEBPACK_IMPORTED_MODULE_3__["NgbDateNativeAdapter"] },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_4__["NotifierService"] },
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_5__["HttpClient"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DateRangePickerComponent.prototype, "dateRange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DateRangePickerComponent.prototype, "fullWidth", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DateRangePickerComponent.prototype, "minDate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DateRangePickerComponent.prototype, "maxDate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DateRangePickerComponent.prototype, "maxDateRange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DateRangePickerComponent.prototype, "isSingleDate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DateRangePickerComponent.prototype, "disabled", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], DateRangePickerComponent.prototype, "position", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], DateRangePickerComponent.prototype, "dateRangeChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('dp', { read: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], static: true })
], DateRangePickerComponent.prototype, "inputElRef", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('dp', { static: true })
], DateRangePickerComponent.prototype, "dp", void 0);
DateRangePickerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'date-range-picker',
        template: __webpack_require__(/*! raw-loader!./date-range-picker.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.html"),
        styles: [__webpack_require__(/*! ./date-range-picker.component.css */ "./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.css")]
    })
], DateRangePickerComponent);



/***/ }),

/***/ "./app/widgets/date-range-picker/lib/models/date-range.ts":
/*!****************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/models/date-range.ts ***!
  \****************************************************************/
/*! exports provided: DateRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateRange", function() { return DateRange; });
/**
 * DateRange Type represents start date and end date.
 */
class DateRange {
    /**
     * Examples:
   ```typescript
  const d1 = new DateRange();
  const d2 = new DateRange(new Date(), new Date(2018, 9, 10));
   ```
     * @param start [Optional] Start Date. Default: null.
     * @param end [Optional] End Date. Default: null
     */
    constructor(start = null, end = null) {
        this.start = start;
        this.end = end;
    }
    /**
     * Examples:
   ```typescript
  const d1 = DateRange.nextDays(7);
  // a date range of next week since today
   ```
     * @param n Number of days after today.
     */
    static nextDays(n) {
        const start = new Date();
        const end = new Date();
        end.setDate(end.getDate() + n);
        return new DateRange(start, end);
    }
    /**
     * Examples:
   ```typescript
  const d1 = DateRange.nextTwoWeeks();
  // a date range of next two weeks since today
   ```
     */
    static nextTwoWeeks() {
        return DateRange.nextDays(14);
    }
    /**
     * Examples:
   ```typescript
  const d1 = DateRange.nextMonth();
  // a date range of next month since today
   ```
     */
    static nextMonth() {
        const start = new Date();
        const end = new Date();
        end.setMonth(end.getMonth() + 1);
        return new DateRange(start, end);
    }
    /**
   * Examples:
 ```typescript
const d1 = DateRange.lastMonth();
// a date range of last month till today
 ```
   */
    static lastMonth() {
        const start = new Date();
        const end = new Date();
        start.setMonth(start.getMonth() - 1);
        return new DateRange(start, end);
    }
    /**
     * Examples:
   ```typescript
  const d1 = DateRange.create({});
   ```
     * @param start start date of range you're creating
     * @param end end date of range you're creating
     */
    static create(start, end) {
        let startDate = null;
        let endDate = null;
        if (DateRange.isValidDate(start)) {
            startDate = new Date(start);
        }
        if (DateRange.isValidDate(end)) {
            endDate = new Date(end);
        }
        return new DateRange(startDate, endDate);
    }
    /**
     * Examples:
   ```typescript
  const isValid = DateRange.isValidDate(new Date());
   ```
     * @param value date you want to verify as date
     */
    static isValidDate(value) {
        if (!value) {
            return false;
        }
        switch (typeof value) {
            case 'number':
                return true;
            case 'string':
                return !isNaN(Date.parse(value));
            case 'object':
                if (value instanceof Date) {
                    return !isNaN(value.getTime());
                }
                break;
            default:
                return false;
        }
    }
}
DateRange.ctorParameters = () => [
    { type: Date },
    { type: Date }
];


/***/ }),

/***/ "./app/widgets/date-range-picker/lib/services/NgbDateNativeAdapter.ts":
/*!****************************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/services/NgbDateNativeAdapter.ts ***!
  \****************************************************************************/
/*! exports provided: NgbDateNativeAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDateNativeAdapter", function() { return NgbDateNativeAdapter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



/**
 * Native Date adapter for Ngb DatePicker
 */
let NgbDateNativeAdapter = class NgbDateNativeAdapter {
    fromModel(date) {
        return date instanceof Date
            ? new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbDate"](date.getFullYear(), date.getMonth() + 1, date.getDate())
            : null;
    }
    toModel(date) {
        return date && date.year && date.month
            ? new Date(date.year, date.month - 1, date.day, 12)
            : null;
    }
};
NgbDateNativeAdapter = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], NgbDateNativeAdapter);



/***/ }),

/***/ "./app/widgets/date-range-picker/lib/services/ngb-date-native-parser-formatter.ts":
/*!****************************************************************************************!*\
  !*** ./app/widgets/date-range-picker/lib/services/ngb-date-native-parser-formatter.ts ***!
  \****************************************************************************************/
/*! exports provided: NgbDateNativeParserFormatter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgbDateNativeParserFormatter", function() { return NgbDateNativeParserFormatter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



function padNumber(value) {
    if (isNumber(value)) {
        return `0${value}`.slice(-2);
    }
    else {
        return '';
    }
}
function isNumber(value) {
    return !isNaN(toInteger(value));
}
function toInteger(value) {
    return parseInt(`${value}`, 10);
}
let NgbDateNativeParserFormatter = class NgbDateNativeParserFormatter extends _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbDateParserFormatter"] {
    parse(value) {
        if (value != null) {
            const dateParts = value.trim().split('/');
            if (dateParts.length === 1 && isNumber(dateParts[0])) {
                return { year: toInteger(dateParts[0]), month: null, day: null };
            }
            else if (dateParts.length === 2 &&
                isNumber(dateParts[0]) &&
                isNumber(dateParts[1])) {
                return {
                    year: toInteger(dateParts[1]),
                    month: toInteger(dateParts[0]),
                    day: null
                };
            }
            else if (dateParts.length === 3 &&
                isNumber(dateParts[0]) &&
                isNumber(dateParts[1]) &&
                isNumber(dateParts[2])) {
                return {
                    year: toInteger(dateParts[2]),
                    month: toInteger(dateParts[1]),
                    day: toInteger(dateParts[0])
                };
            }
        }
        return null;
    }
    format(date) {
        let stringDate = '';
        if (date) {
            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';
            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';
            stringDate += date.year;
        }
        return stringDate;
    }
};
NgbDateNativeParserFormatter = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], NgbDateNativeParserFormatter);



/***/ }),

/***/ "./app/widgets/date-range-picker/public-api.ts":
/*!*****************************************************!*\
  !*** ./app/widgets/date-range-picker/public-api.ts ***!
  \*****************************************************/
/*! exports provided: DateRangePickerModule, DateRangePickerComponent, DateRange, NgbDateNativeAdapter, DatePickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_date_range_picker_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/date-range-picker.module */ "./app/widgets/date-range-picker/lib/date-range-picker.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateRangePickerModule", function() { return _lib_date_range_picker_module__WEBPACK_IMPORTED_MODULE_0__["DateRangePickerModule"]; });

/* harmony import */ var _lib_date_range_picker_date_range_picker_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/date-range-picker/date-range-picker.component */ "./app/widgets/date-range-picker/lib/date-range-picker/date-range-picker.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateRangePickerComponent", function() { return _lib_date_range_picker_date_range_picker_component__WEBPACK_IMPORTED_MODULE_1__["DateRangePickerComponent"]; });

/* harmony import */ var _lib_models_date_range__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/models/date-range */ "./app/widgets/date-range-picker/lib/models/date-range.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateRange", function() { return _lib_models_date_range__WEBPACK_IMPORTED_MODULE_2__["DateRange"]; });

/* harmony import */ var _lib_services_NgbDateNativeAdapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/services/NgbDateNativeAdapter */ "./app/widgets/date-range-picker/lib/services/NgbDateNativeAdapter.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NgbDateNativeAdapter", function() { return _lib_services_NgbDateNativeAdapter__WEBPACK_IMPORTED_MODULE_3__["NgbDateNativeAdapter"]; });

/* harmony import */ var _lib_date_picker_date_picker_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/date-picker/date-picker.component */ "./app/widgets/date-range-picker/lib/date-picker/date-picker.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DatePickerComponent", function() { return _lib_date_picker_date_picker_component__WEBPACK_IMPORTED_MODULE_4__["DatePickerComponent"]; });

/*
 * Public API Surface of date-range-picker
 */







/***/ }),

/***/ "./app/widgets/doughnut2d/doughnut2d.component.scss":
/*!**********************************************************!*\
  !*** ./app/widgets/doughnut2d/doughnut2d.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvZG91Z2hudXQyZC9kb3VnaG51dDJkLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/doughnut2d/doughnut2d.component.ts":
/*!********************************************************!*\
  !*** ./app/widgets/doughnut2d/doughnut2d.component.ts ***!
  \********************************************************/
/*! exports provided: Doughnut2dComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Doughnut2dComponent", function() { return Doughnut2dComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");




let Doughnut2dComponent = class Doughnut2dComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.dataSource = [];
        this.fixedWidth = false;
        this.chartWidth = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]('100%');
    }
    ngOnInit() {
        if (this.fixedWidth) {
            this.headerService.getChartWidth().subscribe(res => {
                this.chartWidth.next(res);
            });
        }
    }
};
Doughnut2dComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_3__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], Doughnut2dComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], Doughnut2dComponent.prototype, "fixedWidth", void 0);
Doughnut2dComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-doughnut2d',
        template: __webpack_require__(/*! raw-loader!./doughnut2d.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/doughnut2d/doughnut2d.component.html"),
        styles: [__webpack_require__(/*! ./doughnut2d.component.scss */ "./app/widgets/doughnut2d/doughnut2d.component.scss")]
    })
], Doughnut2dComponent);



/***/ }),

/***/ "./app/widgets/dynamic-date-label/meter-tree-date-view.component.scss":
/*!****************************************************************************!*\
  !*** ./app/widgets/dynamic-date-label/meter-tree-date-view.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dateViewContainer {\n  border-left: 2px solid #11b42c;\n  padding: 0px 0 1px 10px;\n}\n\n.dateViewHeader {\n  color: #9c9c9c;\n}\n\np {\n  font-size: 13px;\n  margin: 0px 0px 0px 0px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9keW5hbWljLWRhdGUtbGFiZWwvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcZHluYW1pYy1kYXRlLWxhYmVsXFxtZXRlci10cmVlLWRhdGUtdmlldy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvd2lkZ2V0cy9keW5hbWljLWRhdGUtbGFiZWwvbWV0ZXItdHJlZS1kYXRlLXZpZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBQTtFQUNBLHVCQUFBO0FDQ0Y7O0FERUE7RUFDRSxjQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxlQUFBO0VBQ0EsdUJBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvZHluYW1pYy1kYXRlLWxhYmVsL21ldGVyLXRyZWUtZGF0ZS12aWV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhdGVWaWV3Q29udGFpbmVyIHtcclxuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICMxMWI0MmM7XHJcbiAgcGFkZGluZzogMHB4IDAgMXB4IDEwcHg7XHJcbn1cclxuXHJcbi5kYXRlVmlld0hlYWRlciB7XHJcbiAgY29sb3I6IHJnYigxNTYsIDE1NiwgMTU2KTtcclxufVxyXG5wIHtcclxuICBmb250LXNpemU6IDEzcHg7XHJcbiAgbWFyZ2luOiAwcHggMHB4IDBweCAwcHg7XHJcbn1cclxuIiwiLmRhdGVWaWV3Q29udGFpbmVyIHtcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjMTFiNDJjO1xuICBwYWRkaW5nOiAwcHggMCAxcHggMTBweDtcbn1cblxuLmRhdGVWaWV3SGVhZGVyIHtcbiAgY29sb3I6ICM5YzljOWM7XG59XG5cbnAge1xuICBmb250LXNpemU6IDEzcHg7XG4gIG1hcmdpbjogMHB4IDBweCAwcHggMHB4O1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/dynamic-date-label/meter-tree-date-view.component.ts":
/*!**************************************************************************!*\
  !*** ./app/widgets/dynamic-date-label/meter-tree-date-view.component.ts ***!
  \**************************************************************************/
/*! exports provided: MeterTreeDateViewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeterTreeDateViewComponent", function() { return MeterTreeDateViewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../date-range-picker/public-api */ "./app/widgets/date-range-picker/public-api.ts");



let MeterTreeDateViewComponent = class MeterTreeDateViewComponent {
    constructor() {
        this.dateRange = new _date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_2__["DateRange"](new Date(), new Date());
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MeterTreeDateViewComponent.prototype, "dateRange", void 0);
MeterTreeDateViewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-dynamic-date-label',
        template: __webpack_require__(/*! raw-loader!./meter-tree-date-view.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/dynamic-date-label/meter-tree-date-view.component.html"),
        styles: [__webpack_require__(/*! ./meter-tree-date-view.component.scss */ "./app/widgets/dynamic-date-label/meter-tree-date-view.component.scss")]
    })
], MeterTreeDateViewComponent);



/***/ }),

/***/ "./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.scss":
/*!******************************************************************************************************!*\
  !*** ./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.scss ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvZXF1aXBtZW50LWJyZWFrZG93bi1maWx0ZXItZ3JvdXAvZXF1aXBtZW50LWJyZWFrZG93bi1maWx0ZXItZ3JvdXAuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.ts":
/*!****************************************************************************************************!*\
  !*** ./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: EquipmentBreakdownFilterGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EquipmentBreakdownFilterGroupComponent", function() { return EquipmentBreakdownFilterGroupComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_enums_DashboardLevel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/enums/DashboardLevel */ "./enums/DashboardLevel.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/filter */ "../node_modules/lodash/filter.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_filter__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/orderBy */ "../node_modules/lodash/orderBy.js");
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_orderBy__WEBPACK_IMPORTED_MODULE_6__);







let EquipmentBreakdownFilterGroupComponent = class EquipmentBreakdownFilterGroupComponent {
    constructor(dateService, initialService) {
        this.dateService = dateService;
        this.initialService = initialService;
        this.dataSource = [];
        this.onFilter = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
        this.onDateRangeChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
        this.block = [];
        this.blockId = 0;
        this.levelId = 0;
        this.eqCodeId = 0;
        this.eqTypeId = 0;
        this.blockList = [];
        this.levelList = [];
        this.eqCode = [];
        this.eqType = [];
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        this.eqBreakDownFilterGroup = this.dateService.thisMonthUpToNow(this.today);
        this.eqBreakDownFilterGroup.end = this.today;
    }
    ngOnChanges(changes) {
        try {
            this.blockList = [];
            this.levelList = [];
            this.eqCode = [];
            this.eqType = [];
            this.getBlocklList();
            this.getLevelList();
            this.getEqType();
            this.getEqCode();
            this.initialSelection();
            this.filterDataSet();
        }
        catch (Exception) { }
    }
    ngOnInit() { }
    initialSelection() {
        if (this.initialService.equipmentBreakdownStoreService.dashboardLevel === src_enums_DashboardLevel__WEBPACK_IMPORTED_MODULE_1__["DashboardLevel"].BUILDING && this.initialService.equipmentBreakdownStoreService.dashboardType == this.serviceType) {
            this.eqBreakDownFilterGroup = this.initialService.equipmentBreakdownStoreService.dateRange;
            this.levelId = this.initialService.equipmentBreakdownStoreService.level;
            this.eqTypeId = this.initialService.equipmentBreakdownStoreService.equipmentType;
            this.eqCodeId = this.initialService.equipmentBreakdownStoreService.equipmentCode;
            this.blockId = this.initialService.equipmentBreakdownStoreService.block;
        }
        else {
            this.initialService.equipmentBreakdownStoreService.dashboardType = this.serviceType;
            this.initialService.equipmentBreakdownStoreService.dashboardLevel = src_enums_DashboardLevel__WEBPACK_IMPORTED_MODULE_1__["DashboardLevel"].BUILDING;
            this.initialService.equipmentBreakdownStoreService.dateRange = this.eqBreakDownFilterGroup;
            this.initialService.equipmentBreakdownStoreService.level = this.levelId;
            this.initialService.equipmentBreakdownStoreService.equipmentType = this.eqTypeId;
            this.initialService.equipmentBreakdownStoreService.equipmentCode = this.eqCodeId;
            this.initialService.equipmentBreakdownStoreService.block = this.blockId;
        }
    }
    onDateRangeChange() {
        this.initialService.equipmentBreakdownStoreService.dateRange = this.eqBreakDownFilterGroup;
        this.onDateRangeChanged.emit(this.eqBreakDownFilterGroup);
    }
    onBlockChange(e) {
        this.blockId = e.value;
        this.initialService.equipmentBreakdownStoreService.block = this.blockId;
        this.filterDataSet();
    }
    onLevelChange(e) {
        this.levelId = e.value;
        this.initialService.equipmentBreakdownStoreService.level = this.levelId;
        this.filterDataSet();
    }
    onEquipmentTypeChange(e) {
        this.eqTypeId = e.value;
        this.initialService.equipmentBreakdownStoreService.equipmentType = this.eqTypeId;
        this.filterDataSet();
    }
    onEquipmentCode(e) {
        this.eqCodeId = e.value;
        this.initialService.equipmentBreakdownStoreService.equipmentCode = this.eqCodeId;
        this.filterDataSet();
    }
    filterDataSet() {
        let filteredData = [...this.dataSource];
        if (this.blockId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_5___default()(filteredData, { block: { id: parseInt(this.blockId + '') } });
        }
        if (this.levelId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_5___default()(filteredData, { level: { name: this.levelId } });
        }
        if (this.eqCodeId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_5___default()(filteredData, { eqCode: { name: this.eqCodeId } });
        }
        if (this.eqTypeId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_5___default()(filteredData, { eqType: { id: parseInt(this.eqTypeId + '') } });
        }
        this.onFilter.emit(filteredData);
    }
    getBlocklList() {
        this.block = [...new Set(this.dataSource.map(item => item.block.name))];
        for (const item of this.block) {
            for (const newItem of this.dataSource) {
                if (newItem.block.name === item) {
                    this.blockList.push({ name: newItem.block.name, id: newItem.block.id });
                    break;
                }
            }
        }
        this.blockList = lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default()(this.blockList, ['name'], ['asc']);
    }
    getLevelList() {
        this.block = [...new Set(this.dataSource.map(item => item.level.name))];
        for (const item of this.block) {
            for (const newItem of this.dataSource) {
                if (newItem.level.name === item) {
                    this.levelList.push({ name: newItem.level.name, id: newItem.level.name });
                    break;
                }
            }
        }
        this.levelList = lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default()(this.levelList, ['name'], ['asc']);
    }
    getEqType() {
        this.block = [...new Set(this.dataSource.map(item => item.eqType.name))];
        for (const item of this.block) {
            for (const newItem of this.dataSource) {
                if (newItem.eqType.name === item) {
                    this.eqType.push({ name: newItem.eqType.name, id: newItem.eqType.id });
                    break;
                }
            }
        }
        this.eqType = lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default()(this.eqType, ['name']);
    }
    getEqCode() {
        this.block = [...new Set(this.dataSource.map(item => item.eqCode.name))];
        for (const item of this.block) {
            for (const newItem of this.dataSource) {
                if (newItem.eqCode.name === item) {
                    this.eqCode.push({ name: newItem.eqCode.name, id: newItem.eqCode.name });
                    break;
                }
            }
        }
        this.eqCode = lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default()(this.eqCode, ['name'], ['asc']);
    }
};
EquipmentBreakdownFilterGroupComponent.ctorParameters = () => [
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_3__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()
], EquipmentBreakdownFilterGroupComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()
], EquipmentBreakdownFilterGroupComponent.prototype, "serviceType", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()
], EquipmentBreakdownFilterGroupComponent.prototype, "eqBreakDownFilterGroup", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"])()
], EquipmentBreakdownFilterGroupComponent.prototype, "onFilter", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"])()
], EquipmentBreakdownFilterGroupComponent.prototype, "onDateRangeChanged", void 0);
EquipmentBreakdownFilterGroupComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
        selector: 'app-equipment-breakdown-filter-group',
        template: __webpack_require__(/*! raw-loader!./equipment-breakdown-filter-group.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.html"),
        styles: [__webpack_require__(/*! ./equipment-breakdown-filter-group.component.scss */ "./app/widgets/equipment-breakdown-filter-group/equipment-breakdown-filter-group.component.scss")]
    })
], EquipmentBreakdownFilterGroupComponent);



/***/ }),

/***/ "./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.scss":
/*!******************************************************************************************!*\
  !*** ./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.scss ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvZXF1aXBtZW50LWJyZWFrZG93bi1maWx0ZXIvZXF1aXBtZW50LWJyZWFrZG93bi1maWx0ZXIuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.ts":
/*!****************************************************************************************!*\
  !*** ./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.ts ***!
  \****************************************************************************************/
/*! exports provided: EqupmentBreakdownFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EqupmentBreakdownFilterComponent", function() { return EqupmentBreakdownFilterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _enums_DashboardLevel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../enums/DashboardLevel */ "./enums/DashboardLevel.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/filter */ "../node_modules/lodash/filter.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_filter__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/orderBy */ "../node_modules/lodash/orderBy.js");
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_orderBy__WEBPACK_IMPORTED_MODULE_6__);







let EqupmentBreakdownFilterComponent = class EqupmentBreakdownFilterComponent {
    constructor(dateService, initialService) {
        this.dateService = dateService;
        this.initialService = initialService;
        this.onFilter = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
        this.onDateRangeChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
        this.levelId = 0;
        this.eqCodeId = 0;
        this.eqTypeId = 0;
        this.block = [];
        this.levelList = [];
        this.eqCode = [];
        this.eqType = [];
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        this.eqBreakDownFilter = this.dateService.thisMonthUpToNow(this.today);
        this.eqBreakDownFilter.end = this.today;
    }
    ngOnChanges(changes) {
        try {
            this.levelList = [];
            this.eqCode = [];
            this.eqType = [];
            this.getLevelList();
            this.getEqType();
            this.getEqCode();
            this.initialSelection();
            this.filterDataSet();
        }
        catch (Exception) { }
    }
    ngOnInit() {
    }
    initialSelection() {
        if (this.initialService.equipmentBreakdownStoreService.dashboardLevel === _enums_DashboardLevel__WEBPACK_IMPORTED_MODULE_1__["DashboardLevel"].BUILDING && this.initialService.equipmentBreakdownStoreService.dashboardType == this.serviceType) {
            this.eqBreakDownFilter = this.initialService.equipmentBreakdownStoreService.dateRange;
            this.levelId = this.initialService.equipmentBreakdownStoreService.level;
            this.eqTypeId = this.initialService.equipmentBreakdownStoreService.equipmentType;
            this.eqCodeId = this.initialService.equipmentBreakdownStoreService.equipmentCode;
        }
        else {
            this.initialService.equipmentBreakdownStoreService.dashboardType = this.serviceType;
            this.initialService.equipmentBreakdownStoreService.dashboardLevel = _enums_DashboardLevel__WEBPACK_IMPORTED_MODULE_1__["DashboardLevel"].BUILDING;
            this.initialService.equipmentBreakdownStoreService.dateRange = this.eqBreakDownFilter;
            this.initialService.equipmentBreakdownStoreService.level = this.levelId;
            this.initialService.equipmentBreakdownStoreService.equipmentType = this.eqTypeId;
            this.initialService.equipmentBreakdownStoreService.equipmentCode = this.eqCodeId;
        }
    }
    onDateRangeChange() {
        this.initialService.equipmentBreakdownStoreService.dateRange = this.eqBreakDownFilter;
        this.onDateRangeChanged.emit(this.eqBreakDownFilter);
    }
    onLevelChange(e) {
        this.levelId = e.value;
        this.initialService.equipmentBreakdownStoreService.level = e.value;
        this.filterDataSet();
    }
    onEquipmentTypeChange(e) {
        this.eqTypeId = e.value;
        this.initialService.equipmentBreakdownStoreService.equipmentType = e.value;
        this.filterDataSet();
    }
    onEquipmentCode(e) {
        this.eqCodeId = e.value;
        this.initialService.equipmentBreakdownStoreService.equipmentCode = e.value;
        this.filterDataSet();
    }
    filterDataSet() {
        let filteredData = [...this.dataSource];
        if (this.levelId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_5___default()(filteredData, { 'level': { 'id': parseInt(this.levelId + "") } });
        }
        if (this.eqCodeId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_5___default()(filteredData, { 'eqCode': { 'name': this.eqCodeId } });
        }
        if (this.eqTypeId != 0) {
            filteredData = lodash_filter__WEBPACK_IMPORTED_MODULE_5___default()(filteredData, { 'eqType': { 'id': parseInt(this.eqTypeId + "") } });
        }
        this.onFilter.emit(filteredData);
    }
    getLevelList() {
        this.block = [...new Set(this.dataSource.map(item => item.level.name))];
        for (const item of this.block) {
            for (const newItem of this.dataSource) {
                if (newItem.level.name === item) {
                    this.levelList.push({ name: newItem.level.name, id: newItem.level.id });
                    break;
                }
            }
        }
        this.levelList = lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default()(this.levelList, ['name'], ['asc']);
    }
    getEqType() {
        this.block = [...new Set(this.dataSource.map(item => item.eqType.name))];
        for (const item of this.block) {
            for (const newItem of this.dataSource) {
                if (newItem.eqType.name === item) {
                    this.eqType.push({ name: newItem.eqType.name, id: newItem.eqType.id });
                    break;
                }
            }
        }
        this.eqType = lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default()(this.eqType, ['name'], ['asc']);
    }
    getEqCode() {
        this.block = [...new Set(this.dataSource.map(item => item.eqCode.name))];
        for (const item of this.block) {
            for (const newItem of this.dataSource) {
                if (newItem.eqCode.name === item) {
                    this.eqCode.push({ name: newItem.eqCode.name, id: newItem.eqCode.name });
                    break;
                }
            }
        }
        this.eqCode = lodash_orderBy__WEBPACK_IMPORTED_MODULE_6___default()(this.eqCode, ['name'], ['asc']);
    }
};
EqupmentBreakdownFilterComponent.ctorParameters = () => [
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_3__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()
], EqupmentBreakdownFilterComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()
], EqupmentBreakdownFilterComponent.prototype, "serviceType", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()
], EqupmentBreakdownFilterComponent.prototype, "eqBreakDownFilter", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"])()
], EqupmentBreakdownFilterComponent.prototype, "onFilter", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"])()
], EqupmentBreakdownFilterComponent.prototype, "onDateRangeChanged", void 0);
EqupmentBreakdownFilterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
        selector: 'app-equipment-breakdown-filter',
        template: __webpack_require__(/*! raw-loader!./equipment-breakdown-filter.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.html"),
        styles: [__webpack_require__(/*! ./equipment-breakdown-filter.component.scss */ "./app/widgets/equipment-breakdown-filter/equipment-breakdown-filter.component.scss")]
    })
], EqupmentBreakdownFilterComponent);



/***/ }),

/***/ "./app/widgets/floating-button/floating-button.component.scss":
/*!********************************************************************!*\
  !*** ./app/widgets/floating-button/floating-button.component.scss ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".floating-button {\n  position: fixed;\n  right: 50px;\n  bottom: 50px;\n  width: 50px;\n  height: 50px;\n  border-radius: 50px;\n  background-color: #007BFF;\n  box-shadow: 2px 2px 8px #1b2126;\n  display: flex;\n  justify-content: space-around;\n}\n\n.floating-button:hover {\n  box-shadow: 2px 2px 4px #1b2126;\n  background-color: #0073ee;\n  cursor: pointer;\n}\n\n.floating-button:active {\n  box-shadow: 2px 2px 4px #1b2126;\n  background-color: #003670;\n  cursor: pointer;\n}\n\n.icon-center {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n.disabled {\n  background-color: #727272;\n  cursor: none;\n}\n\n.disabled:hover {\n  background-color: #727272;\n  cursor: none;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9mbG9hdGluZy1idXR0b24vRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcZmxvYXRpbmctYnV0dG9uXFxmbG9hdGluZy1idXR0b24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvZmxvYXRpbmctYnV0dG9uL2Zsb2F0aW5nLWJ1dHRvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtFQUNBLCtCQUFBO0VBQ0EsYUFBQTtFQUNBLDZCQUFBO0FDQ0Y7O0FERUE7RUFDRSwrQkFBQTtFQUNBLHlCQUFBO0VBQ0EsZUFBQTtBQ0NGOztBREVBO0VBQ0UsK0JBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2Zsb2F0aW5nLWJ1dHRvbi9mbG9hdGluZy1idXR0b24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmxvYXRpbmctYnV0dG9uIHtcclxuICBwb3NpdGlvbjpmaXhlZDtcclxuICByaWdodDogNTBweDtcclxuICBib3R0b206IDUwcHg7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN0JGRjtcclxuICBib3gtc2hhZG93OiAycHggMnB4IDhweCAjMWIyMTI2O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbn1cclxuXHJcbi5mbG9hdGluZy1idXR0b246aG92ZXIge1xyXG4gIGJveC1zaGFkb3c6IDJweCAycHggNHB4ICMxYjIxMjY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDExNSwgMjM4KTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5mbG9hdGluZy1idXR0b246YWN0aXZlIHtcclxuICBib3gtc2hhZG93OiAycHggMnB4IDRweCAjMWIyMTI2O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCA1NCwgMTEyKTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5pY29uLWNlbnRlciB7XHJcbiAgbWFyZ2luLXRvcDogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG59XHJcblxyXG4uZGlzYWJsZWQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTQsIDExNCwgMTE0KTtcclxuICBjdXJzb3I6IG5vbmU7XHJcbn1cclxuXHJcbi5kaXNhYmxlZDpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExNCwgMTE0LCAxMTQpO1xyXG4gIGN1cnNvcjogbm9uZTtcclxufVxyXG4iLCIuZmxvYXRpbmctYnV0dG9uIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogNTBweDtcbiAgYm90dG9tOiA1MHB4O1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3QkZGO1xuICBib3gtc2hhZG93OiAycHggMnB4IDhweCAjMWIyMTI2O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuLmZsb2F0aW5nLWJ1dHRvbjpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDJweCAycHggNHB4ICMxYjIxMjY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDczZWU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmZsb2F0aW5nLWJ1dHRvbjphY3RpdmUge1xuICBib3gtc2hhZG93OiAycHggMnB4IDRweCAjMWIyMTI2O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAzNjcwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5pY29uLWNlbnRlciB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IGF1dG87XG59XG5cbi5kaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3MjcyNzI7XG4gIGN1cnNvcjogbm9uZTtcbn1cblxuLmRpc2FibGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzcyNzI3MjtcbiAgY3Vyc29yOiBub25lO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/floating-button/floating-button.component.ts":
/*!******************************************************************!*\
  !*** ./app/widgets/floating-button/floating-button.component.ts ***!
  \******************************************************************/
/*! exports provided: FloatingButtonComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FloatingButtonComponent", function() { return FloatingButtonComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


// import { Icon } from '@fortawesome/fontawesome-svg-core';
let FloatingButtonComponent = class FloatingButtonComponent {
    constructor() {
        this.disable = false;
        this.clickOn = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
    }
    onClick() {
        this.clickOn.emit(null);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], FloatingButtonComponent.prototype, "icon", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], FloatingButtonComponent.prototype, "disable", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], FloatingButtonComponent.prototype, "clickOn", void 0);
FloatingButtonComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-floating-button',
        template: __webpack_require__(/*! raw-loader!./floating-button.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/floating-button/floating-button.component.html"),
        styles: [__webpack_require__(/*! ./floating-button.component.scss */ "./app/widgets/floating-button/floating-button.component.scss")]
    })
], FloatingButtonComponent);



/***/ }),

/***/ "./app/widgets/form-container/form-container.component.scss":
/*!******************************************************************!*\
  !*** ./app/widgets/form-container/form-container.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".fieldset-border-color {\n  border: 1px solid #fff;\n}\n\n.fieldset-border-color > legend {\n  font-size: 16px;\n  width: auto !important;\n  padding: 0 5px 0 5px;\n  color: #fff;\n  margin: 0 0 0 10px;\n}\n\n.content {\n  padding: 10px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9mb3JtLWNvbnRhaW5lci9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxmb3JtLWNvbnRhaW5lclxcZm9ybS1jb250YWluZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvZm9ybS1jb250YWluZXIvZm9ybS1jb250YWluZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBQTtBQ0NGOztBREVBO0VBQ0UsZUFBQTtFQUNBLHNCQUFBO0VBQ0Esb0JBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURFQTtFQUNFLHdCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2Zvcm0tY29udGFpbmVyL2Zvcm0tY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpZWxkc2V0LWJvcmRlci1jb2xvciB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcclxufVxyXG5cclxuLmZpZWxkc2V0LWJvcmRlci1jb2xvcj5sZWdlbmQge1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gIHBhZGRpbmc6IDAgNXB4IDAgNXB4O1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIG1hcmdpbjogMCAwIDAgMTBweDtcclxufVxyXG5cclxuLmNvbnRlbnR7XHJcbiAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50O1xyXG59XHJcbiIsIi5maWVsZHNldC1ib3JkZXItY29sb3Ige1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xufVxuXG4uZmllbGRzZXQtYm9yZGVyLWNvbG9yID4gbGVnZW5kIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwIDVweCAwIDVweDtcbiAgY29sb3I6ICNmZmY7XG4gIG1hcmdpbjogMCAwIDAgMTBweDtcbn1cblxuLmNvbnRlbnQge1xuICBwYWRkaW5nOiAxMHB4ICFpbXBvcnRhbnQ7XG59Il19 */"

/***/ }),

/***/ "./app/widgets/form-container/form-container.component.ts":
/*!****************************************************************!*\
  !*** ./app/widgets/form-container/form-container.component.ts ***!
  \****************************************************************/
/*! exports provided: FormContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormContainerComponent", function() { return FormContainerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let FormContainerComponent = class FormContainerComponent {
    constructor() { }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], FormContainerComponent.prototype, "fieldName", void 0);
FormContainerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-form-container',
        template: __webpack_require__(/*! raw-loader!./form-container.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/form-container/form-container.component.html"),
        styles: [__webpack_require__(/*! ./form-container.component.scss */ "./app/widgets/form-container/form-container.component.scss")]
    })
], FormContainerComponent);



/***/ }),

/***/ "./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.scss":
/*!****************************************************************************************!*\
  !*** ./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvZ3JvdXAtZXF1aXBtZW50LWJyZWFrZG93bi9ncm91cC1lcXVpcG1lbnQtYnJlYWtkb3duLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.ts":
/*!**************************************************************************************!*\
  !*** ./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.ts ***!
  \**************************************************************************************/
/*! exports provided: GroupEquipmentBreakdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupEquipmentBreakdownComponent", function() { return GroupEquipmentBreakdownComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let GroupEquipmentBreakdownComponent = class GroupEquipmentBreakdownComponent {
    constructor() { }
    ngOnInit() {
    }
};
GroupEquipmentBreakdownComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-group-equipment-breakdown',
        template: __webpack_require__(/*! raw-loader!./group-equipment-breakdown.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.html"),
        styles: [__webpack_require__(/*! ./group-equipment-breakdown.component.scss */ "./app/widgets/group-equipment-breakdown/group-equipment-breakdown.component.scss")]
    })
], GroupEquipmentBreakdownComponent);



/***/ }),

/***/ "./app/widgets/grouped-trend/grouped-trend.component.scss":
/*!****************************************************************!*\
  !*** ./app/widgets/grouped-trend/grouped-trend.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvZ3JvdXBlZC10cmVuZC9ncm91cGVkLXRyZW5kLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/grouped-trend/grouped-trend.component.ts":
/*!**************************************************************!*\
  !*** ./app/widgets/grouped-trend/grouped-trend.component.ts ***!
  \**************************************************************/
/*! exports provided: GroupedTrendComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupedTrendComponent", function() { return GroupedTrendComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");



let GroupedTrendComponent = class GroupedTrendComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.height = 100;
        this.chartWidth = headerService.getChartWidth();
        this.chartHeight = '100%';
    }
    ngOnInit() {
    }
};
GroupedTrendComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupedTrendComponent.prototype, "dataSourse", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], GroupedTrendComponent.prototype, "height", void 0);
GroupedTrendComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-grouped-trend',
        template: __webpack_require__(/*! raw-loader!./grouped-trend.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/grouped-trend/grouped-trend.component.html"),
        styles: [__webpack_require__(/*! ./grouped-trend.component.scss */ "./app/widgets/grouped-trend/grouped-trend.component.scss")]
    })
], GroupedTrendComponent);



/***/ }),

/***/ "./app/widgets/header/header.component.scss":
/*!**************************************************!*\
  !*** ./app/widgets/header/header.component.scss ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.header {\n  background-color: #293946;\n}\n\n.header .browse:hover {\n  color: #007bff;\n  cursor: pointer;\n}\n\n.mobileHeader {\n  font-size: 16px;\n}\n\n.desktopHeader {\n  font-size: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9oZWFkZXIvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcaGVhZGVyXFxoZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvd2lkZ2V0cy9oZWFkZXIvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNFLHlCRkRhO0FDSWY7O0FDREU7RUFDRSxjRkZTO0VFR1QsZUFBQTtBREdKOztBQ0NBO0VBQ0UsZUFBQTtBREVGOztBQ0FBO0VBQ0UsZUFBQTtBREdGIiwiZmlsZSI6InNyYy9hcHAvd2lkZ2V0cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWF0ZXJpYWwgY29sb3JzXHJcbiRiZy1jb2xvcjogIzFlMWYyMTtcclxuJGhlYWRlci1jb2xvcjogIzI5Mzk0NjtcclxuJGJnLWNhcmQ6ICMyNDJjMzM7XHJcbiRiZy1wcmltYXJ5OiAjMDA3YmZmO1xyXG4kYmctc2Vjb25kYXJ5OiAjMjkzOTQ2O1xyXG4kYmctb3B0LW9uZTogIzJmNDI1MTtcclxuJGJnLW9wdC10d286ICMzYzYxN2Q7XHJcbiRiZy1vcHQtZm91cjogIzM2NTU2ZjtcclxuJGJnLXRhYmxlLWhlYWRlcjogIzFjMjMyODtcclxuJGJnLXRhYmxlLWJvZHk6ICMzNDNmNDk7XHJcblxyXG4vLyBib3JkZXIgY29sb3JzXHJcbiRjb2xvci1ib3JkZXItcHJpbWFyeTogIzM1NDk1ODtcclxuXHJcbi8vIGNvbW1vbiBjb2xvcnNcclxuJHRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcclxuXHJcbi8vIHR5cG8gY29sb3JzXHJcbiRmb250LWNvbG9yOiAjZmZmZmZmO1xyXG4kY29sb3ItZm9udC1zZWNvbmRhcnk6ICNmZmY7XHJcbiRjb2xvci1mb250LXRlcm5hcnk6ICNiOWJhYmI7XHJcbiRmb250LWRhbmdlcjogI2U3NDgzYztcclxuJGZvbnQtbmV1dHJhbDogIzExYjcyYztcclxuJGZvbnQtd2FybmluZzogI2U3OGMzYztcclxuXHJcbi8vIHR5cG8gc2l6ZXNcclxuJHNpemUtZm9udC1wcmltYXJ5OiAuOHJlbTtcclxuJHNpemUtZm9udC1zZWNvbmRhcnk6IDFyZW07XHJcbiRzaXplLWZvbnQtbGFyZ2U6IDNyZW07XHJcbiRzaXplLWZvbnQtaGVhZGVyLWJ0bjogMC45cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXI6IDEuN3JlbTtcclxuJHNpemUtZm9udC1wb2ludGVyLXVuaXQ6IDEuNXJlbTtcclxuJHNpemUtZm9udC1taWQ6IDIuMXJlbTtcclxuJHNpemUtZm9udC1sb3c6IDAuOHJlbTtcclxuXHJcbi8vIGNvbXBvbmVudCBzaXplc1xyXG4kaGVhZGVyLWhlaWdodDogNzBweDtcclxuJGhlaWdodC1jaGFydC1oZWFkZXI6IDQ3Ljc4cHg7XHJcbiRzaWRlLWJhci13aWR0aDogMjUwcHg7XHJcblxyXG4uZGF0ZS1waWNrZXItaW5wdXR7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iLCIuZGF0ZS1waWNrZXItaW5wdXQge1xuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTM5NDY7XG59XG4uaGVhZGVyIC5icm93c2U6aG92ZXIge1xuICBjb2xvcjogIzAwN2JmZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ubW9iaWxlSGVhZGVyIHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4uZGVza3RvcEhlYWRlciB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn0iLCJAaW1wb3J0ICdzcmMvc2Nzcy9fdmFyaWFibGVzLnNjc3MnO1xyXG5cclxuLmhlYWRlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkaGVhZGVyLWNvbG9yO1xyXG5cclxuICAuYnJvd3NlOmhvdmVye1xyXG4gICAgY29sb3I6ICRiZy1wcmltYXJ5O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxufVxyXG5cclxuLm1vYmlsZUhlYWRlciB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcbi5kZXNrdG9wSGVhZGVyIHtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbn1cclxuXHJcblxyXG5cclxuIl19 */"

/***/ }),

/***/ "./app/widgets/header/header.component.ts":
/*!************************************************!*\
  !*** ./app/widgets/header/header.component.ts ***!
  \************************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _navigator_navigator_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../navigator/navigator.component */ "./app/widgets/navigator/navigator.component.ts");
/* harmony import */ var _services_responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/responsive.service */ "./app/services/responsive.service.ts");
/* harmony import */ var _substation_navigator_substation_navigator_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../substation-navigator/substation-navigator.component */ "./app/widgets/substation-navigator/substation-navigator.component.ts");
/* harmony import */ var src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/enums/DashboardType */ "./enums/DashboardType.ts");
/* harmony import */ var src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/store/navigation.service */ "./app/store/navigation.service.ts");










let HeaderComponent = class HeaderComponent {
    constructor(headerService, modalService, responsiveService, navigationStore) {
        this.headerService = headerService;
        this.modalService = modalService;
        this.responsiveService = responsiveService;
        this.navigationStore = navigationStore;
        this.editIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__["faFolderOpen"];
        this.calendarIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__["faCalendarDay"];
        this.homeIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__["faBars"];
        this.boardLevel = 0;
        this.selectedItem = "N/A";
        this.dateRange = '01/07/2019 - 01/08/2019';
        this.allNotifications = [];
    }
    ngOnInit() {
        this.headerService.item.subscribe(item => {
            this.selectedItem = item;
        });
        this.navigationStore.notifications$.subscribe(res => {
            this.allNotifications = res;
        });
        this.headerService.boardLevel.subscribe(level => {
            this.boardLevel = level;
        });
        this.headerService.electricalDashboardType.subscribe(type => {
            this.dashboardType = type;
        });
    }
    open() {
        let component;
        switch (this.dashboardType) {
            case src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_8__["DashboardType"].HIGH_TENSION:
                component = _substation_navigator_substation_navigator_component__WEBPACK_IMPORTED_MODULE_7__["SubstationNavigatorComponent"];
                break;
            case src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_8__["DashboardType"].LOW_TENSION:
                component = _navigator_navigator_component__WEBPACK_IMPORTED_MODULE_5__["NavigatorComponent"];
                break;
            case src_enums_DashboardType__WEBPACK_IMPORTED_MODULE_8__["DashboardType"].WATER:
                component = _navigator_navigator_component__WEBPACK_IMPORTED_MODULE_5__["NavigatorComponent"];
                break;
        }
        const modal = this.modalService.open(component, { size: 'lg', scrollable: true });
        modal.componentInstance.title = "Locations";
    }
    toggleSideBar() {
        this.headerService.toggleSideBar();
    }
    isMobile() {
        return this.responsiveService.isMobile();
    }
};
HeaderComponent.ctorParameters = () => [
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_3__["HeaderService"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbModal"] },
    { type: _services_responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] },
    { type: src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_9__["NavigationService"] }
];
HeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-header',
        template: __webpack_require__(/*! raw-loader!./header.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/header/header.component.html"),
        styles: [__webpack_require__(/*! ./header.component.scss */ "./app/widgets/header/header.component.scss")]
    })
], HeaderComponent);



/***/ }),

/***/ "./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.scss":
/*!************************************************************************************************!*\
  !*** ./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.scss ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvaHQtZXF1aXBtZW50LWJyZWFrZG93bi1maWx0ZXIvaHQtZXF1aXBtZW50LWJyZWFrZG93bi1maWx0ZXIuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.ts":
/*!**********************************************************************************************!*\
  !*** ./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.ts ***!
  \**********************************************************************************************/
/*! exports provided: HtEquipmentBreakdownFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtEquipmentBreakdownFilterComponent", function() { return HtEquipmentBreakdownFilterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _services_date_service_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _services_initial_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/filter */ "../node_modules/lodash/filter.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_filter__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/orderBy */ "../node_modules/lodash/orderBy.js");
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_orderBy__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/uniqBy */ "../node_modules/lodash/uniqBy.js");
/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqBy__WEBPACK_IMPORTED_MODULE_6__);







let HtEquipmentBreakdownFilterComponent = class HtEquipmentBreakdownFilterComponent {
    constructor(config, dateService) {
        this.config = config;
        this.dateService = dateService;
        this.dataSource = [];
        this.onFilter = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.onDateRangeChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.loopId = 0;
        this.substationId = 0;
        this.meterId = 0;
        this.loopIdChange = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.substationIdChange = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.meterIdChange = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.loop = [];
        this.substation = [];
        this.meter = [];
        if (this.config.getDemoConfig().isDemo) {
            this.today = new Date(this.config.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        this.dateRange = this.dateService.thisMonthUpToNow(this.today);
    }
    ngOnChanges(changes) {
        try {
            this.loop = [];
            this.substation = [];
            this.meter = [];
            this.getLoopList();
            this.getSubstationsList();
            this.getMeterList();
            this.filterData();
        }
        catch (e) { }
    }
    ngOnInit() {
    }
    onEqBreakdownDateChange(event) {
        this.onDateRangeChanged.emit(event);
    }
    getLoopList() {
        const allLoops = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_6___default()(this.dataSource, 'loopName');
        // tslint:disable-next-line: forin
        for (const item of allLoops) {
            // @ts-ignore
            this.loop.push({ name: item.loopName, id: item.loopName });
            this.loop = lodash_orderBy__WEBPACK_IMPORTED_MODULE_5___default()(this.loop, ['name'], ['asc']);
        }
    }
    getMeterList() {
        const allMeters = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_6___default()(this.dataSource, 'meterName');
        // tslint:disable-next-line: forin
        for (const item of allMeters) {
            // @ts-ignore
            this.meter.push({ name: item.meterName, id: item.meterName });
            this.meter = lodash_orderBy__WEBPACK_IMPORTED_MODULE_5___default()(this.meter, ['name'], ['asc']);
        }
    }
    getSubstationsList() {
        const allSubstations = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_6___default()(this.dataSource, 'substationName');
        // tslint:disable-next-line: forin
        for (const item of allSubstations) {
            // @ts-ignore
            this.substation.push({ name: item.substationName, id: item.substationName });
            this.substation = lodash_orderBy__WEBPACK_IMPORTED_MODULE_5___default()(this.substation, ['name'], ['asc']);
        }
    }
    onLoopChange(event) {
        this.loopId = event.value;
        this.loopIdChange.emit(this.loopId);
        this.filterData();
    }
    onSubstationChange(event) {
        this.substationId = event.value;
        this.substationIdChange.emit(this.substationId);
        this.filterData();
    }
    onMeterChange(event) {
        this.meterId = event.value;
        this.meterIdChange.emit(this.meterId);
        this.filterData();
    }
    filterData() {
        let filterdData = [...this.dataSource];
        if (this.loopId != 0) {
            filterdData = lodash_filter__WEBPACK_IMPORTED_MODULE_4___default()(filterdData, { loopName: this.loopId });
        }
        if (this.substationId != 0) {
            filterdData = lodash_filter__WEBPACK_IMPORTED_MODULE_4___default()(filterdData, { substationName: this.substationId });
        }
        if (this.meterId != 0) {
            filterdData = lodash_filter__WEBPACK_IMPORTED_MODULE_4___default()(filterdData, { meterName: this.meterId });
        }
        this.onFilter.emit(filterdData);
    }
};
HtEquipmentBreakdownFilterComponent.ctorParameters = () => [
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_2__["InitialService"] },
    { type: _services_date_service_service__WEBPACK_IMPORTED_MODULE_1__["DateServiceService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], HtEquipmentBreakdownFilterComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], HtEquipmentBreakdownFilterComponent.prototype, "dateRange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], HtEquipmentBreakdownFilterComponent.prototype, "isSite", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"])()
], HtEquipmentBreakdownFilterComponent.prototype, "onFilter", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"])()
], HtEquipmentBreakdownFilterComponent.prototype, "onDateRangeChanged", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], HtEquipmentBreakdownFilterComponent.prototype, "loopId", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], HtEquipmentBreakdownFilterComponent.prototype, "substationId", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], HtEquipmentBreakdownFilterComponent.prototype, "meterId", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"])()
], HtEquipmentBreakdownFilterComponent.prototype, "loopIdChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"])()
], HtEquipmentBreakdownFilterComponent.prototype, "substationIdChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"])()
], HtEquipmentBreakdownFilterComponent.prototype, "meterIdChange", void 0);
HtEquipmentBreakdownFilterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-ht-equipment-breakdown-filter',
        template: __webpack_require__(/*! raw-loader!./ht-equipment-breakdown-filter.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.html"),
        styles: [__webpack_require__(/*! ./ht-equipment-breakdown-filter.component.scss */ "./app/widgets/ht-equipment-breakdown-filter/ht-equipment-breakdown-filter.component.scss")]
    })
], HtEquipmentBreakdownFilterComponent);



/***/ }),

/***/ "./app/widgets/image-map/image-map.component.scss":
/*!********************************************************!*\
  !*** ./app/widgets/image-map/image-map.component.scss ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".breadcrumb-date-picker {\n  display: flex;\n  align-items: center;\n  margin: 10px;\n}\n\n.back-btn {\n  margin: 20px 20px 20px 20px;\n}\n\n.triangle-pointer {\n  position: fixed;\n  min-width: 235px;\n  height: 75px;\n  border-radius: 9px;\n  background-color: #112246;\n}\n\n.triangle-pointer .zone {\n  color: #F3F3F3;\n  text-align: center;\n  width: 100%;\n  margin: auto;\n}\n\n.triangle-pointer .image {\n  padding: 10px;\n  width: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.triangle-pointer .tooltip-details {\n  width: 100%;\n  margin-left: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n}\n\n.triangle-pointer .tooltip-details .building-name {\n  color: #F3F3F3;\n}\n\n.triangle-pointer .tooltip-details .consumption {\n  color: #EEAE3F;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.color_text {\n  fill: #fcff02;\n  paint-order: stroke;\n  stroke: #000000;\n  stroke-width: 4px;\n  stroke-linecap: butt;\n  stroke-linejoin: miter;\n  font-weight: 800;\n  font-family: monospace;\n}\n\n.color_text_hide {\n  fill: #cccccc;\n  paint-order: stroke;\n  stroke: #000000;\n  stroke-width: 4px;\n  stroke-linecap: butt;\n  stroke-linejoin: miter;\n  font-weight: 800;\n  font-family: monospace;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9pbWFnZS1tYXAvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcaW1hZ2UtbWFwXFxpbWFnZS1tYXAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvaW1hZ2UtbWFwL2ltYWdlLW1hcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7QUNDRjs7QURtQ0E7RUFDRSwyQkFBQTtBQ2hDRjs7QURtQ0E7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtBQ2hDRjs7QURrQ0U7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQ2hDSjs7QURtQ0U7RUFDRSxhQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDakNKOztBRG9DRTtFQUNFLFdBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0FDbENKOztBRG9DSTtFQUNFLGNBQUE7QUNsQ047O0FEcUNJO0VBQ0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ25DTjs7QUR5Q0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQkFBQTtBQ3RDRjs7QUR3Q0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQkFBQTtBQ3JDRiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvaW1hZ2UtbWFwL2ltYWdlLW1hcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5icmVhZGNydW1iLWRhdGUtcGlja2VyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAxMHB4O1xyXG59XHJcblxyXG4vLyBUT0RPOiByZXBsYWNlIG9sZCB0b29sdGlwXHJcbi8vIC50cmlhbmdsZS1wb2ludGVyIHtcclxuLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODUpO1xyXG4vLyAgIG1pbi1oZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcclxuLy8gICBtaW4td2lkdGg6IDIwMHB4ICFpbXBvcnRhbnQ7XHJcbi8vICAgcGFkZGluZzogMTBweDtcclxuLy8gICBjb2xvcjogI2UyZTJlMjtcclxuLy8gICBwb3NpdGlvbjogZml4ZWQ7XHJcbi8vICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4vLyAgIGJveC1zaGFkb3c6IDJweCAycHggOHB4IDJweCAjMTAxMDEwO1xyXG4vLyB9XHJcblxyXG4vLyAuY2FyZC10ZXh0LXBvc2l0aW9uIHtcclxuLy8gICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbi8vICAgd2lkdGg6IDEwMCU7XHJcbi8vICAgbWFyZ2luOiBhdXRvO1xyXG4vLyB9XHJcblxyXG4vLyAudHJpYW5nbGUtcG9pbnRlcjphZnRlciB7XHJcbi8vICAgY29udGVudDonJztcclxuLy8gICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbi8vICAgdG9wOiAxMDAlO1xyXG4vLyAgIGxlZnQ6IDA7XHJcbi8vICAgcmlnaHQ6IDA7XHJcbi8vICAgbWFyZ2luOiAwIGF1dG87XHJcbi8vICAgd2lkdGg6IDA7XHJcbi8vICAgaGVpZ2h0OiAwO1xyXG4vLyAgIGJvcmRlci10b3A6IHNvbGlkIDIwcHggcmdiYSgwLCAwLCAwLCAwLjgpO1xyXG4vLyAgIGJvcmRlci1sZWZ0OiBzb2xpZCAyMHB4IHRyYW5zcGFyZW50O1xyXG4vLyAgIGJvcmRlci1yaWdodDogc29saWQgMjBweCB0cmFuc3BhcmVudDtcclxuLy8gICBib3gtc2hhZG93OiAxcHggMXB4IDRweCAjMDAwO1xyXG4vLyB9XHJcblxyXG4uYmFjay1idG57XHJcbiAgbWFyZ2luOiAyMHB4IDIwcHggMjBweCAgMjBweDtcclxufVxyXG5cclxuLnRyaWFuZ2xlLXBvaW50ZXIge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBtaW4td2lkdGg6IDIzNXB4O1xyXG4gIGhlaWdodDogNzVweDtcclxuICBib3JkZXItcmFkaXVzOiA5cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzExMjI0NjtcclxuXHJcbiAgLnpvbmUge1xyXG4gICAgY29sb3I6ICNGM0YzRjM7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICB9XHJcblxyXG4gIC5pbWFnZSB7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgd2lkdGg6IDgwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgLnRvb2x0aXAtZGV0YWlscyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4OztcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XHJcblxyXG4gICAgLmJ1aWxkaW5nLW5hbWUge1xyXG4gICAgICBjb2xvcjogI0YzRjNGMztcclxuICAgIH1cclxuXHJcbiAgICAuY29uc3VtcHRpb24ge1xyXG4gICAgICBjb2xvcjogI0VFQUUzRjtcclxuICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4uY29sb3JfdGV4dHtcclxuICBmaWxsOiAjZmNmZjAyO1xyXG4gIHBhaW50LW9yZGVyOiBzdHJva2U7XHJcbiAgc3Ryb2tlOiAjMDAwMDAwO1xyXG4gIHN0cm9rZS13aWR0aDogNHB4O1xyXG4gIHN0cm9rZS1saW5lY2FwOiBidXR0O1xyXG4gIHN0cm9rZS1saW5lam9pbjogbWl0ZXI7XHJcbiAgZm9udC13ZWlnaHQ6IDgwMDtcclxuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xyXG59XHJcbi5jb2xvcl90ZXh0X2hpZGV7XHJcbiAgZmlsbDogI2NjY2NjYztcclxuICBwYWludC1vcmRlcjogc3Ryb2tlO1xyXG4gIHN0cm9rZTogIzAwMDAwMDtcclxuICBzdHJva2Utd2lkdGg6IDRweDtcclxuICBzdHJva2UtbGluZWNhcDogYnV0dDtcclxuICBzdHJva2UtbGluZWpvaW46IG1pdGVyO1xyXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcclxufSIsIi5icmVhZGNydW1iLWRhdGUtcGlja2VyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAxMHB4O1xufVxuXG4uYmFjay1idG4ge1xuICBtYXJnaW46IDIwcHggMjBweCAyMHB4IDIwcHg7XG59XG5cbi50cmlhbmdsZS1wb2ludGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBtaW4td2lkdGg6IDIzNXB4O1xuICBoZWlnaHQ6IDc1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDlweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzExMjI0Njtcbn1cbi50cmlhbmdsZS1wb2ludGVyIC56b25lIHtcbiAgY29sb3I6ICNGM0YzRjM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogYXV0bztcbn1cbi50cmlhbmdsZS1wb2ludGVyIC5pbWFnZSB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHdpZHRoOiA4MHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi50cmlhbmdsZS1wb2ludGVyIC50b29sdGlwLWRldGFpbHMge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xufVxuLnRyaWFuZ2xlLXBvaW50ZXIgLnRvb2x0aXAtZGV0YWlscyAuYnVpbGRpbmctbmFtZSB7XG4gIGNvbG9yOiAjRjNGM0YzO1xufVxuLnRyaWFuZ2xlLXBvaW50ZXIgLnRvb2x0aXAtZGV0YWlscyAuY29uc3VtcHRpb24ge1xuICBjb2xvcjogI0VFQUUzRjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmNvbG9yX3RleHQge1xuICBmaWxsOiAjZmNmZjAyO1xuICBwYWludC1vcmRlcjogc3Ryb2tlO1xuICBzdHJva2U6ICMwMDAwMDA7XG4gIHN0cm9rZS13aWR0aDogNHB4O1xuICBzdHJva2UtbGluZWNhcDogYnV0dDtcbiAgc3Ryb2tlLWxpbmVqb2luOiBtaXRlcjtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcbn1cblxuLmNvbG9yX3RleHRfaGlkZSB7XG4gIGZpbGw6ICNjY2NjY2M7XG4gIHBhaW50LW9yZGVyOiBzdHJva2U7XG4gIHN0cm9rZTogIzAwMDAwMDtcbiAgc3Ryb2tlLXdpZHRoOiA0cHg7XG4gIHN0cm9rZS1saW5lY2FwOiBidXR0O1xuICBzdHJva2UtbGluZWpvaW46IG1pdGVyO1xuICBmb250LXdlaWdodDogODAwO1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/image-map/image-map.component.ts":
/*!******************************************************!*\
  !*** ./app/widgets/image-map/image-map.component.ts ***!
  \******************************************************/
/*! exports provided: ImageMapComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageMapComponent", function() { return ImageMapComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/animations */ "../node_modules/@angular/animations/fesm2015/animations.js");
/* harmony import */ var src_app_services_sample_dummy_data_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/sample/dummy-data.service */ "./app/services/sample/dummy-data.service.ts");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var _util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../util/ChartHelper */ "./util/ChartHelper.ts");













let scrolTop = 0;
let ImageMapComponent = class ImageMapComponent {
    constructor(route, dataServiceConfig, router, headerService, dataService, configs, dateService, initialService, datePipe, thousandSeparator) {
        this.route = route;
        this.dataServiceConfig = dataServiceConfig;
        this.router = router;
        this.headerService = headerService;
        this.dataService = dataService;
        this.configs = configs;
        this.dateService = dateService;
        this.initialService = initialService;
        this.datePipe = datePipe;
        this.thousandSeparator = thousandSeparator;
        this.scrolTop = 0;
        this.breadcrumbData = [];
        this.mapPicker = false;
        this.imageGenerator = (type, link) => {
            const name = { 'electricity': 'elec_map', 'water': 'elec_map', };
            link = link.split('/');
            const imageFile = link[link.length - 1];
            return `assets/img/zone-map/${imageFile}`;
            return `assets/img/${name[type]}/${imageFile}`;
        };
        this.exectMap = () => {
            this.markingmap();
            const polyline = document.querySelector('#polyline');
            const svg = document.querySelector('#xxx');
            const arr = [];
            var selectedElement = false;
            svg.addEventListener('mousedown', startDrag);
            svg.addEventListener('mousemove', drag);
            svg.addEventListener('mouseup', endDrag);
            svg.addEventListener('mouseleave', endDrag);
            svg.addEventListener('touchstart', startDrag);
            svg.addEventListener('touchmove', drag);
            svg.addEventListener('touchend', endDrag);
            svg.addEventListener('touchleave', endDrag);
            svg.addEventListener('touchcancel', endDrag);
            function startDrag(evt) {
                if (evt.target.classList.contains('draggable')) {
                    this.readyCall = false;
                    const e = evt.target;
                    selectedElement = e;
                    const { x, y } = getMousePosition(evt);
                    e.setAttribute('y', y);
                    e.setAttribute('x', x);
                }
            }
            function drag(evt) {
                if (selectedElement) {
                    evt.preventDefault();
                    const e = evt.target;
                    const { x, y } = getMousePosition(evt);
                    e.setAttribute('y', y);
                    e.setAttribute('x', x);
                }
            }
            function endDrag(evt) {
                selectedElement = null;
                setTimeout(() => this.readyCall = true, 1000);
            }
            function getMousePosition(evt) {
                var CTM = svg.getScreenCTM();
                if (evt.touches) {
                    evt = evt.touches[0];
                }
                return {
                    x: evt.offsetX - 15,
                    y: evt.offsetY + 10,
                };
            }
        };
        this.readyCall = true;
        this.markingmap = () => {
            const polyline = document.querySelector('#polyline');
            const svg = document.querySelector('#xxx');
            const arr = [];
            svg.addEventListener('dblclick', (e) => {
                let pts = polyline.getAttribute('points') || '';
                const newPoint = `${e.offsetX},${e.offsetY} `;
                const mapCoordinate = { x: e.offsetX, y: e.offsetY };
                pts = newPoint;
                polyline.setAttribute('points', pts);
                const newMap = callInput(mapCoordinate);
                if (this.readyCall) {
                    this.datasourse.zoneMap = [...this.datasourse.zoneMap, newMap];
                }
            });
            function callInput(mapCoordinate) {
                let person = prompt("Please enter label:", "");
                if (person == null || person == "") {
                    return;
                }
                return Object.assign({}, mapCoordinate, { label: person });
            }
        };
        this._tempMapCoordinate = null;
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        this.minDate = new Date(this.today);
        this.minDate.setFullYear(this.minDate.getFullYear() - 1);
        this.dateRange = this.dateService.thisMonthUpToNow(this.today);
    }
    ngOnInit() {
        this.route.params.subscribe(params => {
            this.breadcrumbData = [
                { name: 'campus', url: `/map/${params.type}/main-map` }
            ];
            if (params.building != 'main-map') {
                this.breadcrumbData.push({ name: params.building, url: '' });
            }
            this.type = params.type;
            this.building = params.building;
            this.datasourse = null;
            this.getBuildingMap();
        });
        this.headerService.setItem('Site Map');
        window.addEventListener('scroll', function (event) {
            scrolTop = this.scrollY;
        }, false);
        if (this.mapPicker) {
            setTimeout(() => this.exectMap(), 2000);
        }
    }
    getBuildingMap() {
        switch (this.type) {
            case 'electricity':
                this.title = 'NTU Map Electricity';
                this.unit = 'kWh';
                this.iconURL = '../../../assets/img/overview/electrical.png';
                break;
            case 'water':
                this.title = 'NTU Map Water';
                this.unit = 'm³/m²';
                this.iconURL = '../../../assets/img/overview/water.png';
                break;
        }
        this.dataServiceConfig.getJson(`image-map/${this.type}/${this.building}`).subscribe(res => {
            this.datasourse = res;
            this.datasourse.imageUrl = this.imageGenerator(this.type, this.datasourse.imageUrl);
            const forkRequests = {};
            this.disableLoading = false;
            for (const building of res.map) {
                if (building.building !== '' && building.building !== undefined) {
                    forkRequests[building.building] = this.dataService.get(this.configs.endPoints['building-type-consumption'], {
                        startDate: this.datePipe.transform(this.dateRange.start, 'yyyy/MM/dd'),
                        endDate: this.datePipe.transform(this.dateRange.end, 'yyyy/MM/dd'),
                        serviceTypeId: this.type === 'electricity' ? 1 : 2,
                        dataMode: 1,
                        interval: 0,
                        buildingId: building.building
                    });
                }
            }
            Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["forkJoin"])(forkRequests).subscribe(value => {
                this.buildingsResponses = value;
            });
        }, error => {
            this.router.navigate(['']);
        });
    }
    dateRangedChanged() {
        this.getBuildingMap();
    }
    mouseEnter(event) {
        event.target.style.fill = 'rgba(255,255,255, 0.4)';
        event.target.style.stroke = 'red';
        if (this.building !== 'main-map') {
            if (event.target.getAttribute('alt') !== 'null') {
                this.cardDetails = null;
                this.buildingName = event.target.getAttribute('alt');
                this.detailCard.nativeElement.style.display = 'flex';
                this.detailCard.nativeElement.style.top = (event.pageY - 100) - scrolTop + 'px';
                this.detailCard.nativeElement.style.left = event.pageX - 100 + 'px';
                const building = event.target.getAttribute('id');
                if (this.buildingsResponses) {
                    if (this.buildingsResponses[building]) {
                        if (this.buildingsResponses[building][0]) {
                            const { suffix, scalledNumber } = Object(_util_ChartHelper__WEBPACK_IMPORTED_MODULE_12__["abbreviateNumber"])(this.buildingsResponses[building][0].data[0].value, undefined);
                            this.suffix = suffix;
                            this.cardDetails = scalledNumber; // this.thousandSeparator.transform(fixDecimalNumPrecision(this.buildingsResponses[building][0].data[0].value, this.configs.siteConfigurations.decimalNumPrecision));
                        }
                        else {
                            this.cardDetails = null;
                            this.disableLoading = true;
                        }
                    }
                }
                else {
                    this.cardDetails = null;
                    this.disableLoading = true;
                }
            }
        }
        else {
            this.cardDetails = null;
            this.disableLoading = true;
            this.buildingName = event.target.getAttribute('alt');
            this.zoneCard.nativeElement.style.display = 'flex';
            this.zoneCard.nativeElement.style.top = (event.pageY - 100) - scrolTop + 'px';
            this.zoneCard.nativeElement.style.left = event.pageX - 100 + 'px';
        }
    }
    onClicked(event) {
        event.preventDefault();
        if (event.target.getAttribute('href') !== '#') {
            const url = ['/map/' + this.type + '/' + event.target.getAttribute('href')];
            this.router.navigate(url);
            this.detailCard.nativeElement.style.display = 'none';
            this.zoneCard.nativeElement.style.display = 'none';
        }
    }
    mouseOut(event) {
        event.target.style.fill = 'transparent';
        event.target.style.stroke = 'transparent';
        this.cardHide();
    }
    cardHide() {
        this.zoneCard.nativeElement.style.display = 'none';
        this.detailCard.nativeElement.style.display = 'none';
    }
    getPoints(p) {
        return p.toString();
    }
    imageDimension(event) {
        this.imageHeight = event.currentTarget.offsetHeight;
        this.imageWidth = event.currentTarget.offsetWidth;
    }
    onPnaImage(event) {
        this.cardHide();
    }
    getData() {
        const arr = [];
        const svg = document.querySelectorAll('.draggable');
        for (let i = 0; i < svg.length; i++) {
            const el = svg[i];
            arr.push({
                x: el.getAttribute("x"),
                y: el.getAttribute("y"),
                label: el.getAttribute("label"),
            });
        }
        this._tempMapCoordinate = null;
    }
    higlightMap() {
        const polyline = document.querySelector('#polyline');
        const svg = document.querySelector('#xxx');
        const arr = [];
        this._tempMapCoordinate = {};
        svg.addEventListener('click', (e) => {
            if (this._tempMapCoordinate) {
                let pts = polyline.getAttribute('points') || '';
                const newPoint = `${e.offsetX},${e.offsetY} `;
                pts += newPoint;
                polyline.setAttribute('points', pts);
                this._tempMapCoordinate = {
                    "alt": "untitled",
                    "link": "#",
                    "building": "450",
                    "title": "untitled",
                    "coords": pts
                };
            }
        });
    }
};
ImageMapComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] },
    { type: src_app_services_sample_dummy_data_service__WEBPACK_IMPORTED_MODULE_5__["DummyDataService"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_6__["HeaderService"] },
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_7__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] },
    { type: src_app_services_date_service_service__WEBPACK_IMPORTED_MODULE_8__["DateServiceService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_9__["InitialService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_11__["ThousandSeparatorPipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('myDetailDiv', null)
], ImageMapComponent.prototype, "detailCard", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('myZoneDev', null)
], ImageMapComponent.prototype, "zoneCard", void 0);
ImageMapComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-image-map',
        template: __webpack_require__(/*! raw-loader!./image-map.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/image-map/image-map.component.html"),
        animations: [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["trigger"])('simpleFadeAnimation', [
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["state"])('in', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["style"])({ transform: 'scale(1)', opacity: 1 })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["transition"])(':enter', [
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["style"])({ transform: 'scale(0)', opacity: 0 }),
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["animate"])(400)
                ]),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["transition"])(':leave', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["animate"])(400, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_4__["style"])({ transform: 'scale(0)', opacity: 0 })))
            ])
        ],
        styles: [__webpack_require__(/*! ./image-map.component.scss */ "./app/widgets/image-map/image-map.component.scss")]
    })
], ImageMapComponent);



/***/ }),

/***/ "./app/widgets/indicator/indicator.component.scss":
/*!********************************************************!*\
  !*** ./app/widgets/indicator/indicator.component.scss ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.danger {\n  color: #e7483c;\n}\n\n.neutral {\n  color: #11b72c;\n}\n\n.indi-container {\n  min-width: 115px;\n}\n\n.indi-container .value {\n  font-size: 1.3em;\n}\n\n.indi-container .sub-value {\n  font-size: 1.7rem;\n  margin-bottom: 0px;\n  font-weight: 500;\n  font-size: 1.3rem;\n}\n\n.indi-container .indi-img {\n  width: 20px;\n  margin-right: 5px;\n}\n\n.indi-container .custom-fonts {\n  font-size: 12px;\n}\n\n.value-image {\n  min-width: 115px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9pbmRpY2F0b3IvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcaW5kaWNhdG9yXFxpbmRpY2F0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvaW5kaWNhdG9yL2luZGljYXRvci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvd2lkZ2V0cy9pbmRpY2F0b3IvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNJLGNGbUJVO0FDaEJkOztBQ0FBO0VBQ0ksY0ZnQlc7QUNiZjs7QUNBQTtFQUNJLGdCQUFBO0FER0o7O0FDRkk7RUFDSSxnQkFBQTtBRElSOztBQ0RJO0VBQ0ksaUJGY1k7RUViWixrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QURHUjs7QUNBSTtFQUNJLFdBQUE7RUFDQSxpQkFBQTtBREVSOztBQ0FJO0VBQ0ksZUFBQTtBREVSOztBQ0NBO0VBQ0ksZ0JBQUE7QURFSiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvaW5kaWNhdG9yL2luZGljYXRvci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1hdGVyaWFsIGNvbG9yc1xyXG4kYmctY29sb3I6ICMxZTFmMjE7XHJcbiRoZWFkZXItY29sb3I6ICMyOTM5NDY7XHJcbiRiZy1jYXJkOiAjMjQyYzMzO1xyXG4kYmctcHJpbWFyeTogIzAwN2JmZjtcclxuJGJnLXNlY29uZGFyeTogIzI5Mzk0NjtcclxuJGJnLW9wdC1vbmU6ICMyZjQyNTE7XHJcbiRiZy1vcHQtdHdvOiAjM2M2MTdkO1xyXG4kYmctb3B0LWZvdXI6ICMzNjU1NmY7XHJcbiRiZy10YWJsZS1oZWFkZXI6ICMxYzIzMjg7XHJcbiRiZy10YWJsZS1ib2R5OiAjMzQzZjQ5O1xyXG5cclxuLy8gYm9yZGVyIGNvbG9yc1xyXG4kY29sb3ItYm9yZGVyLXByaW1hcnk6ICMzNTQ5NTg7XHJcblxyXG4vLyBjb21tb24gY29sb3JzXHJcbiR0cmFuc3BhcmVudDogdHJhbnNwYXJlbnQ7XHJcblxyXG4vLyB0eXBvIGNvbG9yc1xyXG4kZm9udC1jb2xvcjogI2ZmZmZmZjtcclxuJGNvbG9yLWZvbnQtc2Vjb25kYXJ5OiAjZmZmO1xyXG4kY29sb3ItZm9udC10ZXJuYXJ5OiAjYjliYWJiO1xyXG4kZm9udC1kYW5nZXI6ICNlNzQ4M2M7XHJcbiRmb250LW5ldXRyYWw6ICMxMWI3MmM7XHJcbiRmb250LXdhcm5pbmc6ICNlNzhjM2M7XHJcblxyXG4vLyB0eXBvIHNpemVzXHJcbiRzaXplLWZvbnQtcHJpbWFyeTogLjhyZW07XHJcbiRzaXplLWZvbnQtc2Vjb25kYXJ5OiAxcmVtO1xyXG4kc2l6ZS1mb250LWxhcmdlOiAzcmVtO1xyXG4kc2l6ZS1mb250LWhlYWRlci1idG46IDAuOXJlbTtcclxuJHNpemUtZm9udC1wb2ludGVyOiAxLjdyZW07XHJcbiRzaXplLWZvbnQtcG9pbnRlci11bml0OiAxLjVyZW07XHJcbiRzaXplLWZvbnQtbWlkOiAyLjFyZW07XHJcbiRzaXplLWZvbnQtbG93OiAwLjhyZW07XHJcblxyXG4vLyBjb21wb25lbnQgc2l6ZXNcclxuJGhlYWRlci1oZWlnaHQ6IDcwcHg7XHJcbiRoZWlnaHQtY2hhcnQtaGVhZGVyOiA0Ny43OHB4O1xyXG4kc2lkZS1iYXItd2lkdGg6IDI1MHB4O1xyXG5cclxuLmRhdGUtcGlja2VyLWlucHV0e1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZSAhaW1wb3J0YW50O1xyXG59IiwiLmRhdGUtcGlja2VyLWlucHV0IHtcbiAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5kYW5nZXIge1xuICBjb2xvcjogI2U3NDgzYztcbn1cblxuLm5ldXRyYWwge1xuICBjb2xvcjogIzExYjcyYztcbn1cblxuLmluZGktY29udGFpbmVyIHtcbiAgbWluLXdpZHRoOiAxMTVweDtcbn1cbi5pbmRpLWNvbnRhaW5lciAudmFsdWUge1xuICBmb250LXNpemU6IDEuM2VtO1xufVxuLmluZGktY29udGFpbmVyIC5zdWItdmFsdWUge1xuICBmb250LXNpemU6IDEuN3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDEuM3JlbTtcbn1cbi5pbmRpLWNvbnRhaW5lciAuaW5kaS1pbWcge1xuICB3aWR0aDogMjBweDtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG4uaW5kaS1jb250YWluZXIgLmN1c3RvbS1mb250cyB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLnZhbHVlLWltYWdlIHtcbiAgbWluLXdpZHRoOiAxMTVweDtcbn0iLCJAaW1wb3J0ICdzcmMvc2Nzcy9fdmFyaWFibGVzLnNjc3MnO1xyXG5cclxuLmRhbmdlcntcclxuICAgIGNvbG9yOiAkZm9udC1kYW5nZXI7XHJcbn1cclxuXHJcbi5uZXV0cmFse1xyXG4gICAgY29sb3I6ICRmb250LW5ldXRyYWw7XHJcbn1cclxuXHJcbi5pbmRpLWNvbnRhaW5lcntcclxuICAgIG1pbi13aWR0aDogMTE1cHg7XHJcbiAgICAudmFsdWV7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjNlbTtcclxuICAgIH1cclxuXHJcbiAgICAuc3ViLXZhbHVle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJHNpemUtZm9udC1wb2ludGVyO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5pbmRpLWltZ3tcclxuICAgICAgICB3aWR0aDogMjBweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgIH1cclxuICAgIC5jdXN0b20tZm9udHN7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgfVxyXG59XHJcbi52YWx1ZS1pbWFnZXtcclxuICAgIG1pbi13aWR0aDogMTE1cHg7XHJcbn0iXX0= */"

/***/ }),

/***/ "./app/widgets/indicator/indicator.component.ts":
/*!******************************************************!*\
  !*** ./app/widgets/indicator/indicator.component.ts ***!
  \******************************************************/
/*! exports provided: IndicatorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndicatorComponent", function() { return IndicatorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");
/* harmony import */ var src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/pipes/thousand-separator.pipe */ "./app/pipes/thousand-separator.pipe.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");






let IndicatorComponent = class IndicatorComponent {
    constructor(config, thousandSeparator) {
        this.config = config;
        this.thousandSeparator = thousandSeparator;
        this.unit = "N/A";
    }
    convertNumberAndSuffic(number) {
        let { scalledNumber, suffix, unit } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_2__["abbreviateNumber"])(number);
        if (!scalledNumber)
            return null;
        this.diffValue = scalledNumber;
        if (this.unit.toLowerCase() == 'kwh') {
            this.unit = 'kWh';
            this.diffValue = (number / 1000).toFixed(0);
            suffix = '';
        }
        else {
            this.unit = this.unit;
            // this.diffValue = `${this.round(this.diffValue, 2)}`;
        }
        if (this.diffValue == 0) {
            this.changeInConsumption = 'N/A';
        }
        else {
            this.changeInConsumption = `${this.diffValue}${suffix} ${this.unit}`;
        }
    }
    ngOnChanges(changes) {
        this.diffValue = this.newValue - this.oldValue;
        if (this.diffValue > 0) {
            this.isIncreased = true;
        }
        this.diffValue = Math.abs(this.diffValue);
        if (this.oldValue === null || this.oldValue === 0 || this.newValue === this.oldValue) {
            this.percentile = null;
        }
        else {
            this.percentile = `${Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_2__["fixDecimalNumPrecision"])((this.diffValue / this.oldValue) * 100, this.config.siteConfigurations.decimalNumPrecision)}%`;
        }
        this.convertNumberAndSuffic(Number(this.diffValue));
        // if (Number(this.diffValue) > 10_000_000_000) {
        //   this.diffValue = `${this.round((Number(this.diffValue) / 1000_1000_1000).toString(), 2)}`;
        //   if (this.unit === 'kWh') {
        //     this.unit = ' TWh';
        //   } else {
        //     this.unit = `G ${this.unit}`;
        //     this.diffValue = `${this.round(this.diffValue, 2)}`;
        //   }
        // } else if (Number(this.diffValue) > 10_000_000) {
        //   this.diffValue = `${this.round((Number(this.diffValue) / 1000_1000).toString(), 2)}`;
        //   if (this.unit === 'kWh') {
        //     this.unit = ' GWh';
        //   } else {
        //     this.unit = `M ${this.unit}`;
        //     this.diffValue = `${this.round(this.diffValue, 2)}`;
        //   }
        // } else if (Number(this.diffValue) > 10_000) {
        //   this.diffValue = `${this.round((Number(this.diffValue) / 1000).toString(), 2)}`;
        //   if (this.unit === 'kWh') {
        //     this.unit = ' MWh';
        //   } else {
        //     this.unit = `K ${this.unit}`;
        //     this.diffValue = `${this.round(this.diffValue, 2)}`;
        //   }
        // } else {
        //   this.diffValue = `${this.round(Number(this.diffValue).toString(), 2)} `;
        //   if (this.unit === 'kWh') {
        //     this.unit = this.unit;
        //   } else {
        //     this.unit = this.unit;
        //   }
        // }
        // if (this.diffValue == 0) {
        //   this.changeInConsumption = 'N/A';
        // } else {
        //   this.changeInConsumption = `${this.thousandSeparator.transform(this.diffValue)} ${this.unit}`;
        // }
    }
    ngOnInit() { }
    round(value, precision) {
        const multiplier = Math.pow(10, precision || 0);
        return Math.round(value * multiplier) / multiplier;
    }
};
IndicatorComponent.ctorParameters = () => [
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_4__["InitialService"] },
    { type: src_app_pipes_thousand_separator_pipe__WEBPACK_IMPORTED_MODULE_3__["ThousandSeparatorPipe"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], IndicatorComponent.prototype, "oldValue", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], IndicatorComponent.prototype, "newValue", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], IndicatorComponent.prototype, "unit", void 0);
IndicatorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-indicator',
        template: __webpack_require__(/*! raw-loader!./indicator.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/indicator/indicator.component.html"),
        styles: [__webpack_require__(/*! ./indicator.component.scss */ "./app/widgets/indicator/indicator.component.scss")]
    })
], IndicatorComponent);



/***/ }),

/***/ "./app/widgets/input-field/input-field.component.scss":
/*!************************************************************!*\
  !*** ./app/widgets/input-field/input-field.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".label {\n  font-size: 14px;\n  color: #fff;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9pbnB1dC1maWVsZC9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxpbnB1dC1maWVsZFxcaW5wdXQtZmllbGQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvaW5wdXQtZmllbGQvaW5wdXQtZmllbGQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsV0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvd2lkZ2V0cy9pbnB1dC1maWVsZC9pbnB1dC1maWVsZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sYWJlbHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuIiwiLmxhYmVsIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogI2ZmZjtcbn0iXX0= */"

/***/ }),

/***/ "./app/widgets/input-field/input-field.component.ts":
/*!**********************************************************!*\
  !*** ./app/widgets/input-field/input-field.component.ts ***!
  \**********************************************************/
/*! exports provided: InputFieldComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputFieldComponent", function() { return InputFieldComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let InputFieldComponent = class InputFieldComponent {
    constructor() { }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], InputFieldComponent.prototype, "label", void 0);
InputFieldComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-input-field',
        template: __webpack_require__(/*! raw-loader!./input-field.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/input-field/input-field.component.html"),
        styles: [__webpack_require__(/*! ./input-field.component.scss */ "./app/widgets/input-field/input-field.component.scss")]
    })
], InputFieldComponent);



/***/ }),

/***/ "./app/widgets/ld-configuration/ld-configuration.component.scss":
/*!**********************************************************************!*\
  !*** ./app/widgets/ld-configuration/ld-configuration.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".row-limit {\n  font-size: 14px;\n}\n\n.loading-area {\n  width: 100%;\n  height: 600px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n\n.popup-link {\n  color: #ffffff;\n  cursor: pointer;\n}\n\n.popup-link:hover {\n  color: #005cbf;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9sZC1jb25maWd1cmF0aW9uL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGxkLWNvbmZpZ3VyYXRpb25cXGxkLWNvbmZpZ3VyYXRpb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbGQtY29uZmlndXJhdGlvbi9sZC1jb25maWd1cmF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2xkLWNvbmZpZ3VyYXRpb24vbGQtY29uZmlndXJhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3ctbGltaXQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4ubG9hZGluZy1hcmVhIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA2MDBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWljb24ge1xyXG4gICAgd2lkdGg6IDc1cHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5wb3B1cC1saW5rIHtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ucG9wdXAtbGluazpob3ZlciB7XHJcbiAgICBjb2xvcjogIzAwNWNiZjtcclxufSIsIi5yb3ctbGltaXQge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi5sb2FkaW5nLWFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5sb2FkaW5nLWljb24ge1xuICB3aWR0aDogNzVweDtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4ucG9wdXAtbGluayB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5wb3B1cC1saW5rOmhvdmVyIHtcbiAgY29sb3I6ICMwMDVjYmY7XG59Il19 */"

/***/ }),

/***/ "./app/widgets/ld-configuration/ld-configuration.component.ts":
/*!********************************************************************!*\
  !*** ./app/widgets/ld-configuration/ld-configuration.component.ts ***!
  \********************************************************************/
/*! exports provided: LdConfigurationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LdConfigurationComponent", function() { return LdConfigurationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var angular_notifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular-notifier */ "../node_modules/angular-notifier/fesm2015/angular-notifier.js");
/* harmony import */ var _ld_meter_select_ld_meter_select_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ld-meter-select/ld-meter-select.component */ "./app/widgets/ld-meter-select/ld-meter-select.component.ts");
/* harmony import */ var _confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../confirmation-box/confirmation-box.component */ "./app/widgets/confirmation-box/confirmation-box.component.ts");
/* harmony import */ var src_app_services_dashboards_alert_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/dashboards/alert.service */ "./app/services/dashboards/alert.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");











let LdConfigurationComponent = class LdConfigurationComponent {
    constructor(
    //  @Inject(DOCUMENT) private _document: Document,
    router, alertService, notifierService, modalService) {
        this.router = router;
        this.alertService = alertService;
        this.modalService = modalService;
        this.rows = [];
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__["ColumnMode"];
        this.meterList = [];
        this.rowLimits = [
            { id: 1, name: 10 },
            { id: 2, name: 15 },
            { id: 3, name: 25 },
            { id: 4, name: 50 },
            { id: 5, name: 100 }
        ];
        this.plusIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faPlus"];
        this.notifier = notifierService;
        this.limit = 15;
    }
    ngOnInit() {
        // this.router.routeReuseStrategy.shouldReuseRoute = () => false;
        this.alertService.getWaterMeters(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].LD_WATER, 0, 0).then(res => {
            res.forEach(element => {
                this.meterList.push({
                    id: element.meterID,
                    name: element.meterName
                });
            });
        });
    }
    changeNoOfRows(event) {
        const rowLimit = this.rowLimits.find(x => x.id == event.value);
        this.limit = rowLimit.name;
    }
    onToggle(e, row) {
        const body = [{ LdScenarioId: row.id, Status: e ? 1 : 2 }];
        this.alertService.changeLDConfigScenario(body).then(res => {
            if (res.StatusCode == 200 && res.Message == 'Success') {
                row.status = e;
                this.notifier.notify('success', `Successfully ${e ? 'Activated' : 'Deactivated'} the Scenario`);
            }
            else {
                row.status = !e;
                this.notifier.notify('error', `Failed to ${e ? 'Activated' : 'Deactivated'} the Scenario`);
            }
        });
        row.edit = false;
        this.rows = [...this.rows];
    }
    onScenarioChange(row, e) {
        row.scenarioId = Number(e.value);
    }
    onMeterAChange(row, e) {
        row.meterA = this.meterList.find(x => x.id == e.value).name;
        row.meterAId = Number(e.value);
    }
    onMeterBChange(row, e) {
        row.meterB = this.meterList.find(x => x.id == e.value).name;
        row.meterBId = Number(e.value);
    }
    openMeterPopup(row) {
        const modalRef = this.modalService.open(_ld_meter_select_ld_meter_select_component__WEBPACK_IMPORTED_MODULE_6__["LdMeterSelectComponent"], { size: 'xl', centered: true });
        modalRef.componentInstance.subMeters = row.subMeters;
        modalRef.result.then((result) => {
            row.subMeters = result;
        }, (reason) => {
            // TODO: Do your task after dismissed the dialog box
        });
    }
    editClick(row) {
        this.rows.forEach(element => {
            element.edit = false;
        });
        this.tempRow = Object.assign({}, row);
        this.rows.find(x => x.id === row.id).edit = true;
    }
    deleteClick(id) {
        const modalRef = this.modalService.open(_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_7__["ConfirmationBoxComponent"], { size: 'sm', centered: true });
        modalRef.componentInstance.massage = 'Do you want to Delete this Scenario?';
        modalRef.result.then((result) => {
            const body = [{ LdScenarioId: id, Status: 3 }];
            this.alertService.changeLDConfigScenario(body).then(res => {
                if (res.StatusCode == 200 && res.Message == 'Success') {
                    const index = this.rows.findIndex(x => x.id === id);
                    if (index > -1) {
                        this.rows.splice(index, 1);
                    }
                    this.rows = [...this.rows];
                    this.notifier.notify('success', 'Successfully Deleted the Scenario');
                }
                else {
                    this.notifier.notify('error', 'Failed to Delete the Scenario');
                }
            });
        }, (reason) => {
            // TODO: Do your task after dismissed the dialog box
        });
    }
    saveClick(row) {
        const body = {
            ldModelId: row.scenarioId,
            meterAId: row.meterAId,
            meterBId: row.meterBId,
            subMeters: row.subMeters
        };
        if (!`${row.id}`.includes('addMeter')) {
            body['ldScenarioId'] = row.id;
        }
        this.alertService.addNewLdScenario(body).then(res => {
            if (res.StatusCode == 467) {
                this.notifier.notify('error', 'Scenario Already Exists');
                this.rows = [...this.rows];
            }
            if (res.StatusCode == 201 && res.Message == 'Created') {
                if (`${row.id}`.includes('addMeter')) {
                    row.id = res.Data.ldScenarioId;
                    this.notifier.notify('success', 'Successfully Added the Scenario');
                }
                else {
                    this.notifier.notify('success', 'Successfully Updated the Scenario');
                }
            }
            else {
                const index = this.rows.findIndex(x => x.id === row.id);
                if (`${row.id}`.includes('addMeter')) {
                    if (index > -1) {
                        this.rows.splice(index, 1);
                    }
                }
                else {
                    this.rows[index] = this.tempRow;
                    this.rows = [...this.rows];
                }
                if (`${row.id}`.includes('addMeter')) {
                    this.notifier.notify('error', 'Failed to Add the Scenario');
                }
                else {
                    this.notifier.notify('error', 'Failed to Update the Scenario');
                }
            }
        });
        row.edit = false;
        // this._document.defaultView.location.reload();
    }
    cancelClick(row) {
        const index = this.rows.findIndex(x => x.id === row.id);
        if (`${row.id}`.includes('addMeter')) {
            if (index > -1) {
                this.rows.splice(index, 1);
            }
        }
        else {
            this.rows[index] = this.tempRow;
        }
        this.rows = [...this.rows];
    }
    addNewScenario() {
        this.table.offset = 0;
        this.rows.forEach((element, i) => {
            if (`${element.id}`.includes('addMeter')) {
                this.rows.splice(i, 1);
            }
            element.edit = false;
        });
        let row = {
            id: this.guidId(),
            status: true,
            scenarioId: 1,
            meterA: this.meterList[0].name,
            meterAId: this.meterList[0].id,
            meterB: this.meterList[0].name,
            meterBId: this.meterList[0].id,
            subMeters: [],
            edit: true
        };
        this.rows.unshift(row);
        this.rows = [...this.rows];
    }
    guidId() {
        return 'addMeter-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }
};
LdConfigurationComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_10__["Router"] },
    { type: src_app_services_dashboards_alert_service__WEBPACK_IMPORTED_MODULE_8__["AlertService"] },
    { type: angular_notifier__WEBPACK_IMPORTED_MODULE_5__["NotifierService"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbModal"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], LdConfigurationComponent.prototype, "rows", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], LdConfigurationComponent.prototype, "isLoading", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_2__["DatatableComponent"], { static: false })
], LdConfigurationComponent.prototype, "table", void 0);
LdConfigurationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-ld-configuration',
        template: __webpack_require__(/*! raw-loader!./ld-configuration.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/ld-configuration/ld-configuration.component.html"),
        styles: [__webpack_require__(/*! ./ld-configuration.component.scss */ "./app/widgets/ld-configuration/ld-configuration.component.scss")]
    })
], LdConfigurationComponent);



/***/ }),

/***/ "./app/widgets/ld-meter-select/ld-meter-select.component.scss":
/*!********************************************************************!*\
  !*** ./app/widgets/ld-meter-select/ld-meter-select.component.scss ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content .header-content {\n  display: flex;\n  align-items: center;\n}\n.content .header-content .header-title {\n  margin-left: 10px;\n}\n.content .close-button {\n  transition: opacity 0.2s ease;\n  opacity: 0.5;\n  outline: 0;\n  border: none;\n  background: 0 0;\n  cursor: pointer;\n  width: 32px;\n  height: 32px;\n  vertical-align: top;\n}\n.content .close-button:hover {\n  opacity: 1;\n}\n.content .body-content {\n  padding: 10px 20px;\n}\n.content .body-content .table-buttons {\n  min-height: 500px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.content .body-content .loading-area {\n  min-height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.content .body-content .loading-area .loading-icon {\n  width: 75px;\n  height: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9sZC1tZXRlci1zZWxlY3QvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcbGQtbWV0ZXItc2VsZWN0XFxsZC1tZXRlci1zZWxlY3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbGQtbWV0ZXItc2VsZWN0L2xkLW1ldGVyLXNlbGVjdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtBQ0RSO0FER1E7RUFDSSxpQkFBQTtBQ0RaO0FES0k7RUFDSSw2QkFBQTtFQUNBLFlBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtBQ0hSO0FETUk7RUFDSSxVQUFBO0FDSlI7QURPSTtFQUNJLGtCQUFBO0FDTFI7QURPUTtFQUNJLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsOEJBQUE7QUNMWjtBRFFRO0VBQ0ksaUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ05aO0FEUVk7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQ05oQiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbGQtbWV0ZXItc2VsZWN0L2xkLW1ldGVyLXNlbGVjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHJcbiAgICAuaGVhZGVyLWNvbnRlbnQge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgLmhlYWRlci10aXRsZSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuY2xvc2UtYnV0dG9uIHtcclxuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBlYXNlO1xyXG4gICAgICAgIG9wYWNpdHk6IC41O1xyXG4gICAgICAgIG91dGxpbmU6IDA7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IDAgMDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgd2lkdGg6IDMycHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICB9XHJcblxyXG4gICAgLmNsb3NlLWJ1dHRvbjpob3ZlciB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuXHJcbiAgICAuYm9keS1jb250ZW50IHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcblxyXG4gICAgICAgIC50YWJsZS1idXR0b25zIHtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogNTAwcHg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5sb2FkaW5nLWFyZWEge1xyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiA1MDBweDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgICAgICAubG9hZGluZy1pY29uIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmNvbnRlbnQgLmhlYWRlci1jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5jb250ZW50IC5oZWFkZXItY29udGVudCAuaGVhZGVyLXRpdGxlIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4uY29udGVudCAuY2xvc2UtYnV0dG9uIHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2U7XG4gIG9wYWNpdHk6IDAuNTtcbiAgb3V0bGluZTogMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiAwIDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgd2lkdGg6IDMycHg7XG4gIGhlaWdodDogMzJweDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cbi5jb250ZW50IC5jbG9zZS1idXR0b246aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLmNvbnRlbnQgLmJvZHktY29udGVudCB7XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbn1cbi5jb250ZW50IC5ib2R5LWNvbnRlbnQgLnRhYmxlLWJ1dHRvbnMge1xuICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuLmNvbnRlbnQgLmJvZHktY29udGVudCAubG9hZGluZy1hcmVhIHtcbiAgbWluLWhlaWdodDogNTAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLmNvbnRlbnQgLmJvZHktY29udGVudCAubG9hZGluZy1hcmVhIC5sb2FkaW5nLWljb24ge1xuICB3aWR0aDogNzVweDtcbiAgaGVpZ2h0OiBhdXRvO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/ld-meter-select/ld-meter-select.component.ts":
/*!******************************************************************!*\
  !*** ./app/widgets/ld-meter-select/ld-meter-select.component.ts ***!
  \******************************************************************/
/*! exports provided: LdMeterSelectComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LdMeterSelectComponent", function() { return LdMeterSelectComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var src_app_services_dashboards_alert_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/dashboards/alert.service */ "./app/services/dashboards/alert.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");
/* harmony import */ var src_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/util/filtrationDropdownHelper */ "./util/filtrationDropdownHelper.ts");








let LdMeterSelectComponent = class LdMeterSelectComponent {
    constructor(activeModal, initialService, alertService) {
        this.activeModal = activeModal;
        this.initialService = initialService;
        this.alertService = alertService;
        this.subMeters = [];
        this.selected = [];
        this.meters = [];
        this.rows = [];
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["ColumnMode"];
        this.SelectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["SelectionType"];
        this.buildingGroups = [];
        this.buildings = [];
        this.levels = [];
    }
    ngOnInit() {
        this.selectedBuilding = 0;
        this.selectedBuildingGroup = 0;
        this.buildingGroups = Object(src_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_7__["getBuildingGroupList"])(this.initialService.navigationStore.buildingGroupsByServiceType(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_6__["ServiceType"].WATER));
        this.loadData(this.selectedBuildingGroup, this.selectedBuilding);
    }
    loadData(buildingGroup, building) {
        this.isLoading = true;
        this.alertService.getWaterMeters(src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_6__["ServiceType"].WATER, buildingGroup, building).then(res => {
            this.meters = res;
            this.rows = res;
            this.subMeters.forEach(element => {
                this.selected.push(res.find(x => x.meterID == element.meterID));
            });
            this.isLoading = false;
        });
    }
    close() {
        this.activeModal.dismiss();
    }
    onBuildingGroupChange(id) {
        this.selectedBuilding = 0;
        this.selectedBuildingGroup = Number(id);
        this.buildings = Object(src_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_7__["getBuildingList"])(this.initialService.navigationStore.getBuildingsByBuildingGroup(Number(id))
            .filter(building => building.serviceTypes.some(serviceType => serviceType.serviceTypeID == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_6__["ServiceType"].WATER)));
        this.levels = Object(src_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_7__["getLevelList"])(this.initialService.navigationStore.getLevelsByBuildingId(0));
        if (id == 0) {
            this.rows = this.meters;
        }
        else {
            this.rows = this.meters.filter(x => x.buildingGroupId == id);
        }
    }
    onBuildingChange(id) {
        this.selectedBuilding = Number(id);
        this.levels = Object(src_util_filtrationDropdownHelper__WEBPACK_IMPORTED_MODULE_7__["getLevelList"])(this.initialService.navigationStore.getLevelsByBuildingId(Number(id)));
        if (id == 0) {
            this.rows = this.meters.filter(x => x.buildingGroupId == this.selectedBuildingGroup);
        }
        else {
            this.rows = this.meters.filter(x => x.buildingId == id);
        }
    }
    onLevelChange(id) {
        if (id == 0) {
            this.rows = this.meters.filter(x => x.buildingId == this.selectedBuilding);
        }
        else {
            this.rows = this.meters.filter(x => x.levelID == id);
        }
    }
    onSearchChange(searchKey) {
        this.rows = this.meters.filter(x => x.meterName.toUpperCase().includes(`${searchKey}`.toUpperCase()));
    }
    onActivate(event) {
        // (activate)="onActivate($event)" removed from table
        // console.log('Activate Event', event);
    }
    onSelect({ selected }) {
        this.selected.splice(0, this.selected.length);
        this.selected.push(...selected);
    }
    onSelectMeters() {
        this.subMeters = [];
        this.selected.forEach(element => {
            this.subMeters.push({
                meterID: element.meterID,
                meterName: element.meterName
            });
        });
        this.activeModal.close(this.subMeters);
    }
    onCancel() {
        this.activeModal.dismiss();
    }
};
LdMeterSelectComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_5__["InitialService"] },
    { type: src_app_services_dashboards_alert_service__WEBPACK_IMPORTED_MODULE_4__["AlertService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], LdMeterSelectComponent.prototype, "subMeters", void 0);
LdMeterSelectComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-ld-meter-select',
        template: __webpack_require__(/*! raw-loader!./ld-meter-select.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/ld-meter-select/ld-meter-select.component.html"),
        styles: [__webpack_require__(/*! ./ld-meter-select.component.scss */ "./app/widgets/ld-meter-select/ld-meter-select.component.scss")]
    })
], LdMeterSelectComponent);



/***/ }),

/***/ "./app/widgets/leakage-information/leakage-information.component.scss":
/*!****************************************************************************!*\
  !*** ./app/widgets/leakage-information/leakage-information.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content .header-content {\n  display: flex;\n  align-items: center;\n}\n.content .header-content .header-title {\n  margin-left: 10px;\n}\n.content .close-button {\n  transition: opacity 0.2s ease;\n  opacity: 0.5;\n  outline: 0;\n  border: none;\n  background: 0 0;\n  cursor: pointer;\n  width: 32px;\n  height: 32px;\n  vertical-align: top;\n}\n.content .close-button:hover {\n  opacity: 1;\n}\n.content .body-content {\n  padding: 10px 20px;\n}\n.content .body-content .summary-text {\n  margin-top: 10px;\n}\n.content .body-content .info-table {\n  padding-top: 10px;\n  padding-bottom: 5px;\n}\n.content .body-content .info-table table {\n  width: 100%;\n  border-radius: 5px;\n  border-style: hidden;\n  box-shadow: 0 0 0 1px #A4A4A4;\n}\n.content .body-content .info-table table tr {\n  height: 30px;\n  width: 100%;\n}\n.content .body-content .info-table table tr td {\n  padding-left: 15px;\n  width: 50%;\n}\n.content .body-content .info-table table hr {\n  margin-top: 0;\n  margin-bottom: 0;\n  border: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  background-color: #707070;\n  margin-left: 10px;\n  width: calc(200% - 20px);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9sZWFrYWdlLWluZm9ybWF0aW9uL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXGxlYWthZ2UtaW5mb3JtYXRpb25cXGxlYWthZ2UtaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbGVha2FnZS1pbmZvcm1hdGlvbi9sZWFrYWdlLWluZm9ybWF0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0FDRFI7QURHUTtFQUNJLGlCQUFBO0FDRFo7QURLSTtFQUNJLDZCQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0FDSFI7QURNSTtFQUNJLFVBQUE7QUNKUjtBRE9JO0VBQ0ksa0JBQUE7QUNMUjtBRE9RO0VBQ0ksZ0JBQUE7QUNMWjtBRFFRO0VBQ0ksaUJBQUE7RUFDQSxtQkFBQTtBQ05aO0FEUVk7RUFDSSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQkFBQTtFQUNBLDZCQUFBO0FDTmhCO0FEUWdCO0VBQ0ksWUFBQTtFQUNBLFdBQUE7QUNOcEI7QURRb0I7RUFDSSxrQkFBQTtFQUNBLFVBQUE7QUNOeEI7QURVZ0I7RUFDSSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSxTQUFBO0VBQ0Esd0NBQUE7RUFDQSx5QkFBQTtFQUNBLGlCQUFBO0VBQ0Esd0JBQUE7QUNScEIiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL2xlYWthZ2UtaW5mb3JtYXRpb24vbGVha2FnZS1pbmZvcm1hdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHJcbiAgICAuaGVhZGVyLWNvbnRlbnQge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgLmhlYWRlci10aXRsZSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuY2xvc2UtYnV0dG9uIHtcclxuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBlYXNlO1xyXG4gICAgICAgIG9wYWNpdHk6IC41O1xyXG4gICAgICAgIG91dGxpbmU6IDA7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IDAgMDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgd2lkdGg6IDMycHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICB9XHJcblxyXG4gICAgLmNsb3NlLWJ1dHRvbjpob3ZlciB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuXHJcbiAgICAuYm9keS1jb250ZW50IHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcblxyXG4gICAgICAgIC5zdW1tYXJ5LXRleHQge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmluZm8tdGFibGUge1xyXG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDVweDtcclxuXHJcbiAgICAgICAgICAgIHRhYmxlIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI0E0QTRBNDtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgdHIge1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIHRkIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBociB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMDtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgwLDAsMCwuMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzcwNzA3MDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygyMDAlIC0gMjBweCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuY29udGVudCAuaGVhZGVyLWNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmNvbnRlbnQgLmhlYWRlci1jb250ZW50IC5oZWFkZXItdGl0bGUge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cbi5jb250ZW50IC5jbG9zZS1idXR0b24ge1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZTtcbiAgb3BhY2l0eTogMC41O1xuICBvdXRsaW5lOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IDAgMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB3aWR0aDogMzJweDtcbiAgaGVpZ2h0OiAzMnB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuLmNvbnRlbnQgLmNsb3NlLWJ1dHRvbjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4uY29udGVudCAuYm9keS1jb250ZW50IHtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xufVxuLmNvbnRlbnQgLmJvZHktY29udGVudCAuc3VtbWFyeS10ZXh0IHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cbi5jb250ZW50IC5ib2R5LWNvbnRlbnQgLmluZm8tdGFibGUge1xuICBwYWRkaW5nLXRvcDogMTBweDtcbiAgcGFkZGluZy1ib3R0b206IDVweDtcbn1cbi5jb250ZW50IC5ib2R5LWNvbnRlbnQgLmluZm8tdGFibGUgdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXItc3R5bGU6IGhpZGRlbjtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNBNEE0QTQ7XG59XG4uY29udGVudCAuYm9keS1jb250ZW50IC5pbmZvLXRhYmxlIHRhYmxlIHRyIHtcbiAgaGVpZ2h0OiAzMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cbi5jb250ZW50IC5ib2R5LWNvbnRlbnQgLmluZm8tdGFibGUgdGFibGUgdHIgdGQge1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIHdpZHRoOiA1MCU7XG59XG4uY29udGVudCAuYm9keS1jb250ZW50IC5pbmZvLXRhYmxlIHRhYmxlIGhyIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzA3MDcwO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgd2lkdGg6IGNhbGMoMjAwJSAtIDIwcHgpO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/leakage-information/leakage-information.component.ts":
/*!**************************************************************************!*\
  !*** ./app/widgets/leakage-information/leakage-information.component.ts ***!
  \**************************************************************************/
/*! exports provided: LeakageInformationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LeakageInformationComponent", function() { return LeakageInformationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



let LeakageInformationComponent = class LeakageInformationComponent {
    constructor(activeModal) {
        this.activeModal = activeModal;
        this.data = {
            time: undefined,
            meters: undefined,
            maxError: undefined,
            error: undefined,
            direction: undefined,
            directionName: undefined,
        };
    }
    ngOnInit() {
        if (this.data.direction == "LTR") {
            this.data.directionName = "Left to Right";
        }
        else if (this.data.direction == "RTL") {
            this.data.directionName = "Right to Left";
        }
    }
    close() {
        this.activeModal.close();
    }
};
LeakageInformationComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], LeakageInformationComponent.prototype, "data", void 0);
LeakageInformationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-leakage-information',
        template: __webpack_require__(/*! raw-loader!./leakage-information.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/leakage-information/leakage-information.component.html"),
        styles: [__webpack_require__(/*! ./leakage-information.component.scss */ "./app/widgets/leakage-information/leakage-information.component.scss")]
    })
], LeakageInformationComponent);



/***/ }),

/***/ "./app/widgets/line2d/line2d.component.scss":
/*!**************************************************!*\
  !*** ./app/widgets/line2d/line2d.component.scss ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbGluZTJkL2xpbmUyZC5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./app/widgets/line2d/line2d.component.ts":
/*!************************************************!*\
  !*** ./app/widgets/line2d/line2d.component.ts ***!
  \************************************************/
/*! exports provided: Line2dComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Line2dComponent", function() { return Line2dComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let Line2dComponent = class Line2dComponent {
    constructor() {
        this.dataSource = {};
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], Line2dComponent.prototype, "dataSource", void 0);
Line2dComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-line2d',
        template: __webpack_require__(/*! raw-loader!./line2d.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/line2d/line2d.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./line2d.component.scss */ "./app/widgets/line2d/line2d.component.scss")]
    })
], Line2dComponent);



/***/ }),

/***/ "./app/widgets/linear-scale-gradient/linear-scale-gradient.component.scss":
/*!********************************************************************************!*\
  !*** ./app/widgets/linear-scale-gradient/linear-scale-gradient.component.scss ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#linear-gauge {\n  width: 100%;\n  height: 60px;\n}\n\n.svg-container {\n  display: inline-block;\n  position: relative;\n  width: 100%;\n  padding-bottom: 30%;\n  /* aspect ratio */\n  vertical-align: bottom;\n  overflow: hidden;\n}\n\n.svg-content-responsive {\n  display: inline-block;\n  position: absolute;\n  maring-top: 30px;\n  left: 0;\n}\n\nsvg text {\n  font-size: 1.2em;\n  font-family: sans-serif;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9saW5lYXItc2NhbGUtZ3JhZGllbnQvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcbGluZWFyLXNjYWxlLWdyYWRpZW50XFxsaW5lYXItc2NhbGUtZ3JhZGllbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbGluZWFyLXNjYWxlLWdyYWRpZW50L2xpbmVhci1zY2FsZS1ncmFkaWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLFdBQUE7RUFDQSxZQUFBO0FDQUY7O0FESUE7RUFDRSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQXFCLGlCQUFBO0VBQ3JCLHNCQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLE9BQUE7QUNBRjs7QURHQTtFQUNFLGdCQUFBO0VBQ0EsdUJBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbGluZWFyLXNjYWxlLWdyYWRpZW50L2xpbmVhci1zY2FsZS1ncmFkaWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNsaW5lYXItZ2F1Z2Uge1xyXG5cclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDYwcHg7XHJcbn1cclxuXHJcblxyXG4uc3ZnLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nLWJvdHRvbTogMzAlOyAvKiBhc3BlY3QgcmF0aW8gKi9cclxuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG59XHJcbi5zdmctY29udGVudC1yZXNwb25zaXZlIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG1hcmluZy10b3A6IDMwcHg7XHJcbiAgbGVmdDogMDtcclxufVxyXG5cclxuc3ZnIHRleHR7XHJcbiAgZm9udC1zaXplOiAxLjJlbTtcclxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxufVxyXG4iLCIjbGluZWFyLWdhdWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNjBweDtcbn1cblxuLnN2Zy1jb250YWluZXIge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctYm90dG9tOiAzMCU7XG4gIC8qIGFzcGVjdCByYXRpbyAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uc3ZnLWNvbnRlbnQtcmVzcG9uc2l2ZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtYXJpbmctdG9wOiAzMHB4O1xuICBsZWZ0OiAwO1xufVxuXG5zdmcgdGV4dCB7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/linear-scale-gradient/linear-scale-gradient.component.ts":
/*!******************************************************************************!*\
  !*** ./app/widgets/linear-scale-gradient/linear-scale-gradient.component.ts ***!
  \******************************************************************************/
/*! exports provided: LinearScaleGradientComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinearScaleGradientComponent", function() { return LinearScaleGradientComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _util_jsLoader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../util/jsLoader */ "./util/jsLoader.ts");



let LinearScaleGradientComponent = class LinearScaleGradientComponent {
    constructor() {
        _util_jsLoader__WEBPACK_IMPORTED_MODULE_2__["JsLoader"].loadScript();
        this.updateChart();
    }
    ngOnInit() {
    }
    updateChart() {
        setTimeout(() => {
            DrawLinearScaleGradient();
        }, 1000);
    }
};
LinearScaleGradientComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-linear-scale-gradient',
        template: __webpack_require__(/*! raw-loader!./linear-scale-gradient.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/linear-scale-gradient/linear-scale-gradient.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./linear-scale-gradient.component.scss */ "./app/widgets/linear-scale-gradient/linear-scale-gradient.component.scss")]
    })
], LinearScaleGradientComponent);



/***/ }),

/***/ "./app/widgets/linear-scale/linear-scale.component.scss":
/*!**************************************************************!*\
  !*** ./app/widgets/linear-scale/linear-scale.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbGluZWFyLXNjYWxlL2xpbmVhci1zY2FsZS5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./app/widgets/linear-scale/linear-scale.component.ts":
/*!************************************************************!*\
  !*** ./app/widgets/linear-scale/linear-scale.component.ts ***!
  \************************************************************/
/*! exports provided: LinearScaleComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinearScaleComponent", function() { return LinearScaleComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let LinearScaleComponent = class LinearScaleComponent {
    constructor() {
        this.dataSource = {};
        this.height = {};
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], LinearScaleComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], LinearScaleComponent.prototype, "height", void 0);
LinearScaleComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-linear-scale',
        template: __webpack_require__(/*! raw-loader!./linear-scale.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/linear-scale/linear-scale.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./linear-scale.component.scss */ "./app/widgets/linear-scale/linear-scale.component.scss")]
    })
], LinearScaleComponent);



/***/ }),

/***/ "./app/widgets/meter-tree/meter-tree.component.scss":
/*!**********************************************************!*\
  !*** ./app/widgets/meter-tree/meter-tree.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".loading-area {\n  width: 100%;\n  height: 700px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n\n#meter-tree {\n  position: absolute;\n}\n\n.preview {\n  position: absolute;\n  right: 0;\n  top: 0;\n  box-shadow: 1px 1px 8px 2px #0000005e;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9tZXRlci10cmVlL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXG1ldGVyLXRyZWVcXG1ldGVyLXRyZWUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbWV0ZXItdHJlZS9tZXRlci10cmVlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0NGOztBREVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxNQUFBO0VBRUEscUNBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbWV0ZXItdHJlZS9tZXRlci10cmVlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvYWRpbmctYXJlYSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA3MDBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWljb24ge1xyXG4gIHdpZHRoOiA3NXB4O1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuI21ldGVyLXRyZWUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxufVxyXG5cclxuLnByZXZpZXcge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICByaWdodDogMDtcclxuICB0b3A6IDA7XHJcbiAgLy8gbWF4LWhlaWdodDogY2FsYygxMDB2aCAtIDI0MnB4KTtcclxuICBib3gtc2hhZG93OiAxcHggMXB4IDhweCAycHggIzAwMDAwMDVlO1xyXG59IiwiLmxvYWRpbmctYXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDcwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmxvYWRpbmctaWNvbiB7XG4gIHdpZHRoOiA3NXB4O1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbiNtZXRlci10cmVlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4ucHJldmlldyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDtcbiAgYm94LXNoYWRvdzogMXB4IDFweCA4cHggMnB4ICMwMDAwMDA1ZTtcbn0iXX0= */"

/***/ }),

/***/ "./app/widgets/meter-tree/meter-tree.component.ts":
/*!********************************************************!*\
  !*** ./app/widgets/meter-tree/meter-tree.component.ts ***!
  \********************************************************/
/*! exports provided: MeterTreeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeterTreeComponent", function() { return MeterTreeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _assets_configs_meter_tree_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../assets/configs/meter-tree.json */ "./assets/configs/meter-tree.json");
var _assets_configs_meter_tree_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../../assets/configs/meter-tree.json */ "./assets/configs/meter-tree.json", 1);
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");




let MeterTreeComponent = class MeterTreeComponent {
    constructor(configs) {
        this.configs = configs;
        this.configurations = null;
        this.mode = true;
        this.noData = false;
    }
    ngOnChanges(changes) {
        if (this.configurations == null) {
            this.configurations = Object.assign({}, _assets_configs_meter_tree_json__WEBPACK_IMPORTED_MODULE_2__, { decimalNumPrecision: this.configs.siteConfigurations.decimalNumPrecision });
        }
        if (!this.dataSource) {
            this.noData = true;
        }
        else {
            if (this.dataSource.children.length <= 0) {
                this.noData = true;
            }
            else {
                this.noData = false;
                this.updateChart(this.dataSource, this.configurations, this.mode, this.type);
            }
        }
    }
    ngOnInit() {
    }
    updateChart(res, configs, mode, type) {
        setTimeout(() => {
            DrawTree('#meter-tree', res, configs, '#fakeTree', type);
        }, 1500);
    }
};
MeterTreeComponent.ctorParameters = () => [
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_3__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MeterTreeComponent.prototype, "isLoading", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MeterTreeComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MeterTreeComponent.prototype, "configurations", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MeterTreeComponent.prototype, "building", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MeterTreeComponent.prototype, "mode", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MeterTreeComponent.prototype, "type", void 0);
MeterTreeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-meter-tree',
        template: __webpack_require__(/*! raw-loader!./meter-tree.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/meter-tree/meter-tree.component.html"),
        styles: [__webpack_require__(/*! ./meter-tree.component.scss */ "./app/widgets/meter-tree/meter-tree.component.scss")]
    })
], MeterTreeComponent);



/***/ }),

/***/ "./app/widgets/modal/modal.component.scss":
/*!************************************************!*\
  !*** ./app/widgets/modal/modal.component.scss ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.btn-close {\n  color: #fff;\n  font-size: 0.8rem;\n  margin-top: -1%;\n}\n\n.icon-close {\n  background-color: #242c33;\n  border-radius: 3px;\n  font-weight: 500;\n}\n\n/* Important part */\n\n.chart-card-body {\n  overflow-y: initial !important;\n}\n\n.chart-card-body {\n  max-height: 80vh;\n  overflow-y: auto;\n}\n\n.full-height {\n  height: 80vh;\n  overflow-y: auto;\n}\n\n::-webkit-scrollbar {\n  width: 4px;\n}\n\n/* Track */\n\n::-webkit-scrollbar-track {\n  background: #8d8d8d;\n}\n\n/* Handle */\n\n::-webkit-scrollbar-thumb {\n  background: rgba(29, 39, 46, 0.8);\n}\n\n/* Handle on hover */\n\n::-webkit-scrollbar-thumb:hover {\n  background: #1d272e;\n}\n\n.chart-card-header {\n  padding: 0.9rem 0rem 0.9rem 1.5rem !important;\n}\n\n.app-navigator .chart-card-header {\n  background-color: #25333f;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9tb2RhbC9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxtb2RhbFxcbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbW9kYWwvbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbW9kYWwvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNJLFdGaUJtQjtFRWhCbkIsaUJGdUJnQjtFRXRCaEIsZUFBQTtBREdKOztBQ0FBO0VBQ0kseUJGTk07RUVPTixrQkFBQTtFQUNBLGdCQUFBO0FER0o7O0FDQUEsbUJBQUE7O0FBQ0E7RUFDRSw4QkFBQTtBREdGOztBQ0FBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtBREdGOztBQ0FBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0FER0Y7O0FDQUE7RUFDRSxVQUFBO0FER0Y7O0FDQUEsVUFBQTs7QUFDQTtFQUNFLG1CQUFBO0FER0Y7O0FDQUEsV0FBQTs7QUFDQTtFQUNFLGlDQUFBO0FER0Y7O0FDQUEsb0JBQUE7O0FBQ0E7RUFDRSxtQkFBQTtBREdGOztBQ0FBO0VBQ0UsNkNBQUE7QURHRjs7QUNDRTtFQUNJLHlCQUFBO0FERU4iLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL21vZGFsL21vZGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWF0ZXJpYWwgY29sb3JzXHJcbiRiZy1jb2xvcjogIzFlMWYyMTtcclxuJGhlYWRlci1jb2xvcjogIzI5Mzk0NjtcclxuJGJnLWNhcmQ6ICMyNDJjMzM7XHJcbiRiZy1wcmltYXJ5OiAjMDA3YmZmO1xyXG4kYmctc2Vjb25kYXJ5OiAjMjkzOTQ2O1xyXG4kYmctb3B0LW9uZTogIzJmNDI1MTtcclxuJGJnLW9wdC10d286ICMzYzYxN2Q7XHJcbiRiZy1vcHQtZm91cjogIzM2NTU2ZjtcclxuJGJnLXRhYmxlLWhlYWRlcjogIzFjMjMyODtcclxuJGJnLXRhYmxlLWJvZHk6ICMzNDNmNDk7XHJcblxyXG4vLyBib3JkZXIgY29sb3JzXHJcbiRjb2xvci1ib3JkZXItcHJpbWFyeTogIzM1NDk1ODtcclxuXHJcbi8vIGNvbW1vbiBjb2xvcnNcclxuJHRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcclxuXHJcbi8vIHR5cG8gY29sb3JzXHJcbiRmb250LWNvbG9yOiAjZmZmZmZmO1xyXG4kY29sb3ItZm9udC1zZWNvbmRhcnk6ICNmZmY7XHJcbiRjb2xvci1mb250LXRlcm5hcnk6ICNiOWJhYmI7XHJcbiRmb250LWRhbmdlcjogI2U3NDgzYztcclxuJGZvbnQtbmV1dHJhbDogIzExYjcyYztcclxuJGZvbnQtd2FybmluZzogI2U3OGMzYztcclxuXHJcbi8vIHR5cG8gc2l6ZXNcclxuJHNpemUtZm9udC1wcmltYXJ5OiAuOHJlbTtcclxuJHNpemUtZm9udC1zZWNvbmRhcnk6IDFyZW07XHJcbiRzaXplLWZvbnQtbGFyZ2U6IDNyZW07XHJcbiRzaXplLWZvbnQtaGVhZGVyLWJ0bjogMC45cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXI6IDEuN3JlbTtcclxuJHNpemUtZm9udC1wb2ludGVyLXVuaXQ6IDEuNXJlbTtcclxuJHNpemUtZm9udC1taWQ6IDIuMXJlbTtcclxuJHNpemUtZm9udC1sb3c6IDAuOHJlbTtcclxuXHJcbi8vIGNvbXBvbmVudCBzaXplc1xyXG4kaGVhZGVyLWhlaWdodDogNzBweDtcclxuJGhlaWdodC1jaGFydC1oZWFkZXI6IDQ3Ljc4cHg7XHJcbiRzaWRlLWJhci13aWR0aDogMjUwcHg7XHJcblxyXG4uZGF0ZS1waWNrZXItaW5wdXR7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iLCIuZGF0ZS1waWNrZXItaW5wdXQge1xuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmJ0bi1jbG9zZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDAuOHJlbTtcbiAgbWFyZ2luLXRvcDogLTElO1xufVxuXG4uaWNvbi1jbG9zZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNDJjMzM7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLyogSW1wb3J0YW50IHBhcnQgKi9cbi5jaGFydC1jYXJkLWJvZHkge1xuICBvdmVyZmxvdy15OiBpbml0aWFsICFpbXBvcnRhbnQ7XG59XG5cbi5jaGFydC1jYXJkLWJvZHkge1xuICBtYXgtaGVpZ2h0OiA4MHZoO1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4uZnVsbC1oZWlnaHQge1xuICBoZWlnaHQ6IDgwdmg7XG4gIG92ZXJmbG93LXk6IGF1dG87XG59XG5cbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICB3aWR0aDogNHB4O1xufVxuXG4vKiBUcmFjayAqL1xuOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gIGJhY2tncm91bmQ6ICM4ZDhkOGQ7XG59XG5cbi8qIEhhbmRsZSAqL1xuOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjksIDM5LCA0NiwgMC44KTtcbn1cblxuLyogSGFuZGxlIG9uIGhvdmVyICovXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzFkMjcyZTtcbn1cblxuLmNoYXJ0LWNhcmQtaGVhZGVyIHtcbiAgcGFkZGluZzogMC45cmVtIDByZW0gMC45cmVtIDEuNXJlbSAhaW1wb3J0YW50O1xufVxuXG4uYXBwLW5hdmlnYXRvciAuY2hhcnQtY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUzMzNmO1xufSIsIkBpbXBvcnQgJ3NyYy9zY3NzL192YXJpYWJsZXMuc2Nzcyc7XHJcblxyXG4uYnRuLWNsb3Nle1xyXG4gICAgY29sb3I6ICRjb2xvci1mb250LXNlY29uZGFyeTtcclxuICAgIGZvbnQtc2l6ZTogJHNpemUtZm9udC1wcmltYXJ5O1xyXG4gICAgbWFyZ2luLXRvcDogLTElO1xyXG59XHJcblxyXG4uaWNvbi1jbG9zZXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRiZy1jYXJkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuLyogSW1wb3J0YW50IHBhcnQgKi9cclxuLmNoYXJ0LWNhcmQtYm9keXtcclxuICBvdmVyZmxvdy15OiBpbml0aWFsICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jaGFydC1jYXJkLWJvZHl7XHJcbiAgbWF4LWhlaWdodDogODB2aDtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4uZnVsbC1oZWlnaHR7XHJcbiAgaGVpZ2h0OiA4MHZoO1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gIHdpZHRoOiA0cHg7XHJcbn1cclxuXHJcbi8qIFRyYWNrICovXHJcbjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xyXG4gIGJhY2tncm91bmQ6ICM4ZDhkOGQ7XHJcbn1cclxuXHJcbi8qIEhhbmRsZSAqL1xyXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDI5LCAzOSwgNDYsIDAuOCk7XHJcbn1cclxuXHJcbi8qIEhhbmRsZSBvbiBob3ZlciAqL1xyXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiByZ2IoMjksIDM5LCA0Nik7XHJcbn1cclxuXHJcbi5jaGFydC1jYXJkLWhlYWRlcntcclxuICBwYWRkaW5nOiAuOXJlbSAwcmVtIC45cmVtIDEuNXJlbSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uYXBwLW5hdmlnYXRvcntcclxuICAuY2hhcnQtY2FyZC1oZWFkZXJ7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTMzM2Y7XHJcbiAgfVxyXG4gIFxyXG59XHJcblxyXG4iXX0= */"

/***/ }),

/***/ "./app/widgets/modal/modal.component.ts":
/*!**********************************************!*\
  !*** ./app/widgets/modal/modal.component.ts ***!
  \**********************************************/
/*! exports provided: ModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalComponent", function() { return ModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



let ModalComponent = class ModalComponent {
    constructor(activeModal) {
        this.activeModal = activeModal;
        this.titleText = "N/A";
        this.fullHeight = true;
    }
    ngOnInit() {
    }
};
ModalComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ModalComponent.prototype, "titleText", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ModalComponent.prototype, "content", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ModalComponent.prototype, "fullHeight", void 0);
ModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-modal',
        template: __webpack_require__(/*! raw-loader!./modal.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/modal/modal.component.html"),
        styles: [__webpack_require__(/*! ./modal.component.scss */ "./app/widgets/modal/modal.component.scss")]
    })
], ModalComponent);



/***/ }),

/***/ "./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.scss":
/*!**********************************************************************!*\
  !*** ./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbXNjb2x1bW4zZGxpbmVkeS9tc2NvbHVtbjNkbGluZWR5LmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.ts":
/*!********************************************************************!*\
  !*** ./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.ts ***!
  \********************************************************************/
/*! exports provided: Mscolumn3dlinedyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mscolumn3dlinedyComponent", function() { return Mscolumn3dlinedyComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let Mscolumn3dlinedyComponent = class Mscolumn3dlinedyComponent {
    constructor() {
        this.dataSource = [];
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], Mscolumn3dlinedyComponent.prototype, "dataSource", void 0);
Mscolumn3dlinedyComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-mscolumn3dlinedy',
        template: __webpack_require__(/*! raw-loader!./mscolumn3dlinedy.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./mscolumn3dlinedy.component.scss */ "./app/widgets/mscolumn3dlinedy/mscolumn3dlinedy.component.scss")]
    })
], Mscolumn3dlinedyComponent);



/***/ }),

/***/ "./app/widgets/multi-level-pie/multi-level-pie.component.scss":
/*!********************************************************************!*\
  !*** ./app/widgets/multi-level-pie/multi-level-pie.component.scss ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbXVsdGktbGV2ZWwtcGllL211bHRpLWxldmVsLXBpZS5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./app/widgets/multi-level-pie/multi-level-pie.component.ts":
/*!******************************************************************!*\
  !*** ./app/widgets/multi-level-pie/multi-level-pie.component.ts ***!
  \******************************************************************/
/*! exports provided: MultiLevelPieComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiLevelPieComponent", function() { return MultiLevelPieComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let MultiLevelPieComponent = class MultiLevelPieComponent {
    constructor() {
        this.dataSource = [];
    }
    ngOnInit() {
        this.dataSource = {
            chart: {
                caption: "Sales by Product Category",
                subcaption: "Last Quarter",
                showplotborder: "1",
                plotfillalpha: "60",
                hoverfillcolor: "#CCCCCC",
                numberprefix: "$",
                plottooltext: "Sales of <b>$label</b> was <b>$$valueK</b>, which was $percentValue of parent category",
                theme: "carbon"
            },
            category: [
                {
                    label: "Products",
                    tooltext: "Please hover over a sub-category to see details",
                    color: "#ffffff",
                    value: "150",
                    category: [
                        {
                            label: "Food & Beverage",
                            color: "#f8bd19",
                            value: "55.5",
                            category: [
                                {
                                    label: "Breads",
                                    color: "#f8bd19",
                                    value: "11.1"
                                },
                                {
                                    label: "Juice",
                                    color: "#f8bd19",
                                    value: "27.75"
                                },
                                {
                                    label: "Noodles",
                                    color: "#f8bd19",
                                    value: "9.99"
                                },
                                {
                                    label: "Seafood",
                                    color: "#f8bd19",
                                    value: "6.66"
                                }
                            ]
                        },
                        {
                            label: "Apparel",
                            color: "#33ccff",
                            value: "42",
                            category: [
                                {
                                    label: "Sun Glasses",
                                    color: "#33ccff",
                                    value: "10.08"
                                },
                                {
                                    label: "Clothing",
                                    color: "#33ccff",
                                    value: "18.9"
                                },
                                {
                                    label: "Handbags",
                                    color: "#33ccff",
                                    value: "6.3"
                                },
                                {
                                    label: "Shoes",
                                    color: "#33ccff",
                                    value: "6.72"
                                }
                            ]
                        },
                        {
                            label: "Baby Products",
                            color: "#ffcccc",
                            value: "22.5",
                            category: [
                                {
                                    label: "Bath &{br}Grooming",
                                    color: "#ffcccc",
                                    value: "9.45"
                                },
                                {
                                    label: "Food",
                                    color: "#ffcccc",
                                    value: "6.3"
                                },
                                {
                                    label: "Diapers",
                                    color: "#ffcccc",
                                    value: "6.75"
                                }
                            ]
                        },
                        {
                            label: "Electronics",
                            color: "#ccff66",
                            value: "30",
                            category: [
                                {
                                    label: "Laptops",
                                    color: "#ccff66",
                                    value: "8.1"
                                },
                                {
                                    label: "Televisions",
                                    color: "#ccff66",
                                    value: "10.5"
                                },
                                {
                                    label: "SmartPhones",
                                    color: "#ccff66",
                                    value: "11.4"
                                }
                            ]
                        }
                    ]
                }
            ]
        };
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MultiLevelPieComponent.prototype, "dataSource", void 0);
MultiLevelPieComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-multi-level-pie',
        template: __webpack_require__(/*! raw-loader!./multi-level-pie.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/multi-level-pie/multi-level-pie.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./multi-level-pie.component.scss */ "./app/widgets/multi-level-pie/multi-level-pie.component.scss")]
    })
], MultiLevelPieComponent);



/***/ }),

/***/ "./app/widgets/multi-series/multi-series.component.scss":
/*!**************************************************************!*\
  !*** ./app/widgets/multi-series/multi-series.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbXVsdGktc2VyaWVzL211bHRpLXNlcmllcy5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./app/widgets/multi-series/multi-series.component.ts":
/*!************************************************************!*\
  !*** ./app/widgets/multi-series/multi-series.component.ts ***!
  \************************************************************/
/*! exports provided: MultiSeriesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiSeriesComponent", function() { return MultiSeriesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");




let MultiSeriesComponent = class MultiSeriesComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.dataSource = {};
        this.height = 100;
        this.fixedWidth = false;
        this.chartWidth = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"]('100%');
    }
    ngOnInit() {
        if (this.fixedWidth) {
            this.headerService.getChartWidth().subscribe(res => {
                this.chartWidth.next(res);
            });
        }
    }
};
MultiSeriesComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MultiSeriesComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MultiSeriesComponent.prototype, "height", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MultiSeriesComponent.prototype, "fixedWidth", void 0);
MultiSeriesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-multi-series',
        template: __webpack_require__(/*! raw-loader!./multi-series.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/multi-series/multi-series.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./multi-series.component.scss */ "./app/widgets/multi-series/multi-series.component.scss")]
    })
], MultiSeriesComponent);



/***/ }),

/***/ "./app/widgets/multiple-select/multiple-select.component.scss":
/*!********************************************************************!*\
  !*** ./app/widgets/multiple-select/multiple-select.component.scss ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".multiselect {\n  position: relative;\n  overflow: visible;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.multiselect .label-text {\n  margin: 0;\n}\n.selectBox {\n  position: relative;\n  margin-left: 0.5em;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n}\n.selectBox select {\n  width: 100%;\n  font-weight: bold;\n  min-width: 10em;\n  max-width: 10em;\n}\n.overSelect {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n}\n.checkboxes {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  z-index: 1;\n  display: none;\n  background-color: #1e1f21;\n}\n.checkboxes.expanded {\n  display: block;\n}\n.checkboxes label {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.checkboxes label:hover {\n  background-color: #1e90ff;\n}\n.checkboxes label input {\n  margin: 0.5em;\n}\n.checkboxes label:last-child {\n  margin-bottom: 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9tdWx0aXBsZS1zZWxlY3QvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcbXVsdGlwbGUtc2VsZWN0XFxtdWx0aXBsZS1zZWxlY3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbXVsdGlwbGUtc2VsZWN0L211bHRpcGxlLXNlbGVjdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsaUJBQUE7RUFFQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQ0FKO0FERUk7RUFDSSxTQUFBO0FDQVI7QURJQTtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSwyQkFBQTtFQUFBLHdCQUFBO0VBQUEsbUJBQUE7QUNESjtBREdJO0VBQ0ksV0FBQTtFQUNBLGlCQUFBO0VBRUEsZUFBQTtFQUNBLGVBQUE7QUNGUjtBRE1BO0VBQ0ksa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE1BQUE7RUFDQSxTQUFBO0FDSEo7QURNQTtFQUNJLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RUFFQSxXQUFBO0VBQ0EsVUFBQTtFQUVBLGFBQUE7RUFDQSx5QkFBQTtBQ0xKO0FET0k7RUFDSSxjQUFBO0FDTFI7QURRSTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FDTlI7QURRUTtFQUNJLHlCQUFBO0FDTlo7QURTUTtFQUNJLGFBQUE7QUNQWjtBRFVRO0VBQ0ksZ0JBQUE7QUNSWiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbXVsdGlwbGUtc2VsZWN0L211bHRpcGxlLXNlbGVjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tdWx0aXNlbGVjdCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgJiAubGFiZWwtdGV4dCB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG59XHJcbiAgXHJcbi5zZWxlY3RCb3gge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IC41ZW07XHJcbiAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xyXG5cclxuICAgICYgc2VsZWN0IHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIFxyXG4gICAgICAgIG1pbi13aWR0aDogMTBlbTtcclxuICAgICAgICBtYXgtd2lkdGg6IDEwZW07XHJcbiAgICB9XHJcbn1cclxuICBcclxuLm92ZXJTZWxlY3Qge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG59XHJcbiAgXHJcbi5jaGVja2JveGVzIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMTAwJTtcclxuICAgIGxlZnQ6IDA7XHJcblxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZjIxO1xyXG5cclxuICAgICYuZXhwYW5kZWQge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgICYgbGFiZWwge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxZTkwZmY7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgJiBpbnB1dCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogLjVlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfSAgXHJcbn0iLCIubXVsdGlzZWxlY3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLm11bHRpc2VsZWN0IC5sYWJlbC10ZXh0IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uc2VsZWN0Qm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tbGVmdDogMC41ZW07XG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XG59XG4uc2VsZWN0Qm94IHNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWluLXdpZHRoOiAxMGVtO1xuICBtYXgtd2lkdGg6IDEwZW07XG59XG5cbi5vdmVyU2VsZWN0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG59XG5cbi5jaGVja2JveGVzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAxO1xuICBkaXNwbGF5OiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZjIxO1xufVxuLmNoZWNrYm94ZXMuZXhwYW5kZWQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5jaGVja2JveGVzIGxhYmVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5jaGVja2JveGVzIGxhYmVsOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFlOTBmZjtcbn1cbi5jaGVja2JveGVzIGxhYmVsIGlucHV0IHtcbiAgbWFyZ2luOiAwLjVlbTtcbn1cbi5jaGVja2JveGVzIGxhYmVsOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/multiple-select/multiple-select.component.ts":
/*!******************************************************************!*\
  !*** ./app/widgets/multiple-select/multiple-select.component.ts ***!
  \******************************************************************/
/*! exports provided: MultipleSelectComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultipleSelectComponent", function() { return MultipleSelectComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let MultipleSelectComponent = class MultipleSelectComponent {
    constructor() {
        this.options = [];
        this.selected = [];
        this.expanded = false;
        this.onSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
    }
    ngOnChanges(changes) {
        const selected = changes.selected;
        if (this.checks && selected && selected.currentValue != selected.previousValue) {
            this.setAll();
        }
    }
    ngAfterViewInit() {
        this.setAll();
    }
    setAll() {
        this.options.forEach((option, i) => {
            const found = this.selected.indexOf(option.id) > -1;
            this.checks.toArray()[i + 1].nativeElement.checked = this.all;
        });
        this.checks.first.nativeElement.checked = this.all;
    }
    showCheckboxes() {
        this.expanded = !this.expanded;
    }
    selectAll(event) {
        const checked = event.target.checked;
        this.checks.forEach(el => el.nativeElement.checked = checked);
        this.selected = checked ? this.options.map(x => x.id) : [];
        this.onSelect.emit(this.selected);
    }
    select(id) {
        const index = this.selected.findIndex(x => x == id);
        if (index > -1)
            this.selected.splice(index, 1);
        else
            this.selected.push(id);
        this.checks.first.nativeElement.checked = this.all;
        this.onSelect.emit(this.selected);
    }
    get all() {
        return this.options.length == this.selected.length;
    }
    get selectedNames() {
        return this.selected.length == 0 ? 'Select option' :
            this.all ? 'All' :
                this.options.filter(x => this.selected.indexOf(x.id) > -1).map(x => x.name).join(', ');
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChildren"])('checks')
], MultipleSelectComponent.prototype, "checks", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MultipleSelectComponent.prototype, "options", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], MultipleSelectComponent.prototype, "selected", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], MultipleSelectComponent.prototype, "onSelect", void 0);
MultipleSelectComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-multiple-select',
        template: __webpack_require__(/*! raw-loader!./multiple-select.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/multiple-select/multiple-select.component.html"),
        styles: [__webpack_require__(/*! ./multiple-select.component.scss */ "./app/widgets/multiple-select/multiple-select.component.scss")]
    })
], MultipleSelectComponent);



/***/ }),

/***/ "./app/widgets/multiplechart-2d/multiplechart-2d.component.scss":
/*!**********************************************************************!*\
  !*** ./app/widgets/multiplechart-2d/multiplechart-2d.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvbXVsdGlwbGVjaGFydC0yZC9tdWx0aXBsZWNoYXJ0LTJkLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/multiplechart-2d/multiplechart-2d.component.ts":
/*!********************************************************************!*\
  !*** ./app/widgets/multiplechart-2d/multiplechart-2d.component.ts ***!
  \********************************************************************/
/*! exports provided: Multiplechart2dComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Multiplechart2dComponent", function() { return Multiplechart2dComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let Multiplechart2dComponent = class Multiplechart2dComponent {
    constructor() {
        this.dataSource = [];
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], Multiplechart2dComponent.prototype, "dataSource", void 0);
Multiplechart2dComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-multiplechart-2d',
        template: __webpack_require__(/*! raw-loader!./multiplechart-2d.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/multiplechart-2d/multiplechart-2d.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./multiplechart-2d.component.scss */ "./app/widgets/multiplechart-2d/multiplechart-2d.component.scss")]
    })
], Multiplechart2dComponent);



/***/ }),

/***/ "./app/widgets/navigator/navigator.component.scss":
/*!********************************************************!*\
  !*** ./app/widgets/navigator/navigator.component.scss ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.item {\n  border-left: 2px solid #354958;\n}\n\n.item:hover {\n  background-color: #3c617d;\n  border-left: 2px solid #007bff;\n}\n\n.top-level {\n  padding-left: 0rem;\n  background-color: #2f4251;\n}\n\n.second-level {\n  padding-left: 2.5rem;\n}\n\n.third-level {\n  padding-left: 4.5rem;\n}\n\n.active-item {\n  cursor: pointer;\n  background-color: #3c617d;\n  border-left: 4px solid #007bff;\n  border-bottom: 1px solid #536b7c;\n}\n\n.active-item:hover {\n  border-left: 8px solid #007bff;\n}\n\n.app-navigator .chart-card-header {\n  background-color: #22303c;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9uYXZpZ2F0b3IvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcbmF2aWdhdG9yXFxuYXZpZ2F0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvbmF2aWdhdG9yL25hdmlnYXRvci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvd2lkZ2V0cy9uYXZpZ2F0b3IvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNJLDhCQUFBO0FER0o7O0FDQUE7RUFDSSx5QkFBQTtFQUNBLDhCQUFBO0FER0o7O0FDQUE7RUFDSSxrQkFBQTtFQUNBLHlCRlBTO0FDVWI7O0FDQUE7RUFDSSxvQkFBQTtBREdKOztBQ0FBO0VBQ0ksb0JBQUE7QURHSjs7QUNBQTtFQUNFLGVBQUE7RUFDQSx5QkZuQlc7RUVvQlgsOEJBQUE7RUFDQSxnQ0FBQTtBREdGOztBQ0FBO0VBQ0UsOEJBQUE7QURHRjs7QUNBSTtFQUNJLHlCQUFBO0FER1IiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL25hdmlnYXRvci9uYXZpZ2F0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtYXRlcmlhbCBjb2xvcnNcclxuJGJnLWNvbG9yOiAjMWUxZjIxO1xyXG4kaGVhZGVyLWNvbG9yOiAjMjkzOTQ2O1xyXG4kYmctY2FyZDogIzI0MmMzMztcclxuJGJnLXByaW1hcnk6ICMwMDdiZmY7XHJcbiRiZy1zZWNvbmRhcnk6ICMyOTM5NDY7XHJcbiRiZy1vcHQtb25lOiAjMmY0MjUxO1xyXG4kYmctb3B0LXR3bzogIzNjNjE3ZDtcclxuJGJnLW9wdC1mb3VyOiAjMzY1NTZmO1xyXG4kYmctdGFibGUtaGVhZGVyOiAjMWMyMzI4O1xyXG4kYmctdGFibGUtYm9keTogIzM0M2Y0OTtcclxuXHJcbi8vIGJvcmRlciBjb2xvcnNcclxuJGNvbG9yLWJvcmRlci1wcmltYXJ5OiAjMzU0OTU4O1xyXG5cclxuLy8gY29tbW9uIGNvbG9yc1xyXG4kdHJhbnNwYXJlbnQ6IHRyYW5zcGFyZW50O1xyXG5cclxuLy8gdHlwbyBjb2xvcnNcclxuJGZvbnQtY29sb3I6ICNmZmZmZmY7XHJcbiRjb2xvci1mb250LXNlY29uZGFyeTogI2ZmZjtcclxuJGNvbG9yLWZvbnQtdGVybmFyeTogI2I5YmFiYjtcclxuJGZvbnQtZGFuZ2VyOiAjZTc0ODNjO1xyXG4kZm9udC1uZXV0cmFsOiAjMTFiNzJjO1xyXG4kZm9udC13YXJuaW5nOiAjZTc4YzNjO1xyXG5cclxuLy8gdHlwbyBzaXplc1xyXG4kc2l6ZS1mb250LXByaW1hcnk6IC44cmVtO1xyXG4kc2l6ZS1mb250LXNlY29uZGFyeTogMXJlbTtcclxuJHNpemUtZm9udC1sYXJnZTogM3JlbTtcclxuJHNpemUtZm9udC1oZWFkZXItYnRuOiAwLjlyZW07XHJcbiRzaXplLWZvbnQtcG9pbnRlcjogMS43cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXItdW5pdDogMS41cmVtO1xyXG4kc2l6ZS1mb250LW1pZDogMi4xcmVtO1xyXG4kc2l6ZS1mb250LWxvdzogMC44cmVtO1xyXG5cclxuLy8gY29tcG9uZW50IHNpemVzXHJcbiRoZWFkZXItaGVpZ2h0OiA3MHB4O1xyXG4kaGVpZ2h0LWNoYXJ0LWhlYWRlcjogNDcuNzhweDtcclxuJHNpZGUtYmFyLXdpZHRoOiAyNTBweDtcclxuXHJcbi5kYXRlLXBpY2tlci1pbnB1dHtcclxuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcclxufSIsIi5kYXRlLXBpY2tlci1pbnB1dCB7XG4gIGJvcmRlci1zdHlsZTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uaXRlbSB7XG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzM1NDk1ODtcbn1cblxuLml0ZW06aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2M2MTdkO1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICMwMDdiZmY7XG59XG5cbi50b3AtbGV2ZWwge1xuICBwYWRkaW5nLWxlZnQ6IDByZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMyZjQyNTE7XG59XG5cbi5zZWNvbmQtbGV2ZWwge1xuICBwYWRkaW5nLWxlZnQ6IDIuNXJlbTtcbn1cblxuLnRoaXJkLWxldmVsIHtcbiAgcGFkZGluZy1sZWZ0OiA0LjVyZW07XG59XG5cbi5hY3RpdmUtaXRlbSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNjNjE3ZDtcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjMDA3YmZmO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzUzNmI3Yztcbn1cblxuLmFjdGl2ZS1pdGVtOmhvdmVyIHtcbiAgYm9yZGVyLWxlZnQ6IDhweCBzb2xpZCAjMDA3YmZmO1xufVxuXG4uYXBwLW5hdmlnYXRvciAuY2hhcnQtY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjIzMDNjO1xufSIsIkBpbXBvcnQgJ3NyYy9zY3NzL192YXJpYWJsZXMuc2Nzcyc7XHJcblxyXG4uaXRlbXtcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgJGNvbG9yLWJvcmRlci1wcmltYXJ5O1xyXG59XHJcblxyXG4uaXRlbTpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRiZy1vcHQtdHdvO1xyXG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAkYmctcHJpbWFyeTtcclxufVxyXG5cclxuLnRvcC1sZXZlbHtcclxuICAgIHBhZGRpbmctbGVmdDogMHJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRiZy1vcHQtb25lO1xyXG59XHJcblxyXG4uc2Vjb25kLWxldmVse1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyLjVyZW07XHJcbn1cclxuXHJcbi50aGlyZC1sZXZlbHtcclxuICAgIHBhZGRpbmctbGVmdDogNC41cmVtO1xyXG59XHJcblxyXG4uYWN0aXZlLWl0ZW0ge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmctb3B0LXR3bztcclxuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICRiZy1wcmltYXJ5O1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNTM2YjdjO1xyXG59XHJcblxyXG4uYWN0aXZlLWl0ZW06aG92ZXIge1xyXG4gIGJvcmRlci1sZWZ0OiA4cHggc29saWQgJGJnLXByaW1hcnk7XHJcbn1cclxuLmFwcC1uYXZpZ2F0b3J7XHJcbiAgICAuY2hhcnQtY2FyZC1oZWFkZXJ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIyMzAzYztcclxuICAgIH1cclxuICAgIFxyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./app/widgets/navigator/navigator.component.ts":
/*!******************************************************!*\
  !*** ./app/widgets/navigator/navigator.component.ts ***!
  \******************************************************/
/*! exports provided: NavigatorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigatorComponent", function() { return NavigatorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/orderBy */ "../node_modules/lodash/orderBy.js");
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_orderBy__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");










let NavigatorComponent = class NavigatorComponent {
    constructor(router, modalService, headerService, httpService, config, initialService) {
        this.router = router;
        this.modalService = modalService;
        this.headerService = headerService;
        this.httpService = httpService;
        this.config = config;
        this.initialService = initialService;
        this.arrowDown = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__["faChevronCircleDown"];
        this.arrowUp = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__["faChevronCircleUp"];
        this.datasourse = [];
        this.callapseCat = [];
        this.buildingGroups = [];
        this.headerService.boardLevel.subscribe(level => {
            this.boardLevel = level;
            if (level == 0) {
                this.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].ELECTRICAL;
            }
            else {
                this.serviceType = src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_9__["ServiceType"].WATER;
            }
        });
        this.getSites();
    }
    ngOnInit() {
    }
    navigateToUrl(url, buildingId, buildingName) {
        this.router.navigateByUrl(encodeURI(url));
        this.headerService.fireNavigationChanged();
        if (buildingId !== null) {
            this.headerService.setItem(buildingName);
            this.httpService.setbuildingId(buildingId);
        }
        else {
            this.headerService.setItem('Nanyang Technological University');
        }
        this.modalService.dismissAll();
    }
    navigateToSite(url) {
        this.router.navigateByUrl(encodeURI(url));
    }
    getSites() {
        this.getCategories(this.config.siteConfigurations.siteId, this.config.siteConfigurations.siteName);
    }
    getCategories(siteId, siteName) {
        let categories = this.initialService.navigationStore.buildingCategories;
        categories = lodash_orderBy__WEBPACK_IMPORTED_MODULE_8___default()(categories, ['description'], ['asc']);
        this.getBuildingGroups(categories, siteName, siteId);
    }
    getBuildings(categoryRes, siteName, siteId) {
        const siteNavigation = {
            siteId,
            siteName,
            siteCategories: []
        };
        let catCount = 0;
        categoryRes.forEach((element) => {
            let res = this.initialService.navigationStore.getBuildingsByCategory(element.buildingCategoryID);
            res = res.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
            let getRes = [];
            res.forEach(element => {
                getRes.push(this.getBuildingGroupName(element));
            });
            let groupedArr = this.groupBy(getRes, 'buildingGroupID', 'buildingGroupName');
            let catD = [];
            for (let i in groupedArr) {
                catD.push({
                    buildingGroupID: i.split(',')[0],
                    buildingGroupName: i.split(',')[1],
                    data: groupedArr[i]
                });
            }
            const buildingsCategory = {
                categoryId: element.buildingCategoryID,
                categoryName: element.description,
                buildingList: catD
            };
            if (catD.length != 0) {
                siteNavigation.siteCategories.push(buildingsCategory);
                for (let j = 0; j < catD.length; j++) {
                    this.buildingGroups[catCount][j] = false;
                }
                this.callapseCat.push(false);
                catCount++;
            }
        });
        for (let siteCats of siteNavigation.siteCategories) {
            for (let buildingList of siteCats.buildingList) {
                buildingList.data = lodash_orderBy__WEBPACK_IMPORTED_MODULE_8___default()(buildingList.data, ['buildingName'], ['asc']);
            }
            siteCats.buildingList = lodash_orderBy__WEBPACK_IMPORTED_MODULE_8___default()(siteCats.buildingList, ['buildingGroupName'], ['asc']);
        }
        this.headerService.setBuildingMenu(siteNavigation);
        this.datasourse.push(siteNavigation);
    }
    groupBy(OurArray, p1, p2) {
        return OurArray.reduce((accumulator, object) => {
            const key = object[p1] + ',' + object[p2];
            !accumulator[key] ? (accumulator[key] = [object]) : (accumulator[key].push(object));
            return accumulator;
        }, {});
    }
    getBuildingGroupName(element) {
        const buildingName = this.buildingGroups.find(x => x.buildingGroupID == element.buildingGroupID);
        return Object.assign({}, element, { buildingGroupName: buildingName ? buildingName.description : null });
    }
    getBuildingGroups(categoryRes, siteName, siteId) {
        this.buildingGroups = this.initialService.navigationStore.buildingGroupsByServiceType(this.serviceType);
        this.buildingGroups = lodash_orderBy__WEBPACK_IMPORTED_MODULE_8___default()(this.buildingGroups, ['description'], ['asc']);
        this.getBuildings(categoryRes, siteName, siteId);
    }
    expandCallpse(index) {
        const temp = this.callapseCat[index];
        this.callapseCat.forEach((category, c) => {
            this.callapseCat[c] = false;
        });
        this.callapseCat[index] = !temp;
    }
    expandGroup(i, j) {
        const temp = this.buildingGroups[i][j];
        this.datasourse[0].siteCategories.forEach((category, c) => {
            category.buildingList.forEach((group, g) => {
                this.buildingGroups[c][g] = false;
            });
        });
        this.buildingGroups[i][j] = !temp;
    }
};
NavigatorComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbModal"] },
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_5__["HeaderService"] },
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_6__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_1__["InitialService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_1__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()
], NavigatorComponent.prototype, "building_levels", void 0);
NavigatorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
        selector: 'app-navigator',
        template: __webpack_require__(/*! raw-loader!./navigator.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/navigator/navigator.component.html"),
        styles: [__webpack_require__(/*! ./navigator.component.scss */ "./app/widgets/navigator/navigator.component.scss")]
    })
], NavigatorComponent);



/***/ }),

/***/ "./app/widgets/notification-panel/notification-panel.component.scss":
/*!**************************************************************************!*\
  !*** ./app/widgets/notification-panel/notification-panel.component.scss ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".notification-panel {\n  width: 300px;\n  height: 400px;\n  background-color: #314a5e;\n  position: absolute;\n  right: 53px;\n  top: 60px;\n  z-index: 999;\n  border-radius: 6px;\n  box-shadow: 0px 4px 10px #303030;\n  padding: 5px;\n  color: #ffffff;\n  text-align: left;\n  font-size: 14px;\n}\n\n.arrow-top:after {\n  content: \" \";\n  position: absolute;\n  right: 5px;\n  top: -5px;\n  border-top: none;\n  border-right: 15px solid transparent;\n  border-left: 15px solid transparent;\n  border-bottom: 15px solid #314a5e;\n}\n\n.panel-header {\n  font-size: 16px;\n}\n\n.notification-item {\n  border: 1px solid #1c293557;\n  padding: 10px 10px 10px 10px;\n  border-radius: 4px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  background-color: #486b88;\n  box-shadow: 2px 2px 6px #2435444d;\n}\n\n.notification-item-notviewed {\n  border: 1px solid #1c293557;\n  padding: 10px 10px 10px 10px;\n  border-radius: 4px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  background-color: #3a3a3a;\n  box-shadow: 2px 2px 6px #2435444d;\n}\n\n.notification-item:hover {\n  box-shadow: 2px 2px 2px #243544a4;\n  background-color: #3a566d;\n}\n\n.panel-content {\n  flex: 0 0 100%;\n  min-width: 100%;\n  height: 90%;\n  overflow-y: auto;\n}\n\n.clear-text {\n  color: #007bff;\n}\n\n.clear-text:hover {\n  color: #0063ce;\n  cursor: pointer;\n}\n\n.date-time {\n  color: #dadada;\n  font-size: 12px;\n}\n\n::ng-deep .modal-width .modal-dialog {\n  max-width: 60% !important;\n  width: 60% !important;\n}\n\n::ng-deep .config-modal-width .modal-dialog {\n  max-width: 45% !important;\n  width: 45% !important;\n}\n\n.panel-header {\n  padding: 5px;\n  height: 50px;\n  width: 100%;\n  font-size: 16px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.panel-header .panel-title {\n  margin: auto auto auto 0;\n}\n\n.panel-header .clear-button {\n  height: 25px;\n  width: 25px;\n  margin: auto 5px auto auto;\n  cursor: pointer;\n  opacity: 0.8;\n  transition: 0.3s ease-in-out;\n}\n\n.panel-header .clear-button:hover {\n  transform: translateY(-1px);\n  opacity: 1;\n}\n\n.panel-body {\n  padding: 5px;\n  height: calc(100% - 50px);\n  overflow-y: auto;\n}\n\n.panel-body .notification-card {\n  min-height: 100px;\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  box-shadow: 2px 0 4px rgba(0, 0, 0, 0.14), 0 3px 8px rgba(0, 0, 0, 0.14), 0 4px 13px rgba(0, 0, 0, 0.18);\n}\n\n.panel-body .notification-card .notification-card-header {\n  display: flex;\n  width: 100%;\n}\n\n.panel-body .notification-card .notification-card-header .notification-icon {\n  width: 25px;\n  height: 25px;\n  margin: auto 5px auto 0;\n}\n\n.panel-body .notification-card .notification-card-header .notification-card-title {\n  margin: auto auto auto 5px;\n}\n\n.panel-body .notification-card hr {\n  margin: 2px 0;\n  border-top: 2px solid #2f4251;\n}\n\n.panel-body .notification-card .notification-card-body {\n  margin: 5px;\n  margin-bottom: 0;\n}\n\n.panel-body .notification-card .notification-card-body .notification-time {\n  color: #9f9f9f;\n  font-size: 12px;\n}\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./app/widgets/notification-panel/notification-panel.component.ts":
/*!************************************************************************!*\
  !*** ./app/widgets/notification-panel/notification-panel.component.ts ***!
  \************************************************************************/
/*! exports provided: NotificationPanelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationPanelComponent", function() { return NotificationPanelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _alert_info_alert_info_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../alert-info/alert-info.component */ "./app/widgets/alert-info/alert-info.component.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "../node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/store/navigation.service */ "./app/store/navigation.service.ts");
/* harmony import */ var lodash_reverse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/reverse */ "../node_modules/lodash/reverse.js");
/* harmony import */ var lodash_reverse__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_reverse__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");









let NotificationPanelComponent = class NotificationPanelComponent {
    constructor(modalService, navigationStore, headerService) {
        this.modalService = modalService;
        this.navigationStore = navigationStore;
        this.headerService = headerService;
        this.notifications = [];
        this.onPanelView = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.notificationCount = [];
        this.badgeText = "";
        this.bellIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__["faBell"];
        this.navigationStore.notificationsCount$.subscribe(res => {
            this.notificationCount = res;
            this.changeBadgeText();
        });
    }
    ngOnChanges() {
        let data = [...this.notifications];
        this.notifications = [...lodash_reverse__WEBPACK_IMPORTED_MODULE_7___default()(data)];
    }
    ngOnInit() {
        this.headerService.panelView.subscribe(view => this.showPanel = view);
    }
    iconClicked(event) {
        this.headerService.changePanelVisibility(!this.showPanel);
        event.stopPropagation();
    }
    clickout(event) {
        try {
            if (!this.panel.nativeElement.contains(event.target)) {
                this.headerService.changePanelVisibility(!this.showPanel);
            }
        }
        catch (e) { }
    }
    changeBadgeText() {
        if (this.notificationCount.length >= 99) {
            this.badgeText = '99+';
        }
        else if (this.notificationCount.length == 0) {
            this.badgeText = '';
        }
        else {
            this.badgeText = `${this.notificationCount.length}`;
        }
    }
    isViewedNotification(item) {
        return this.navigationStore.isViewedNotification(item.AlertTimeStamp);
    }
    removeFromCount(item) {
        this.navigationStore.removeNotificationCountItem(item.AlertTimeStamp);
    }
    getMomentAgo(date) {
        return moment__WEBPACK_IMPORTED_MODULE_5___default()(date).fromNow();
    }
    onNotificationClicked() {
        this.showPanel = !this.showPanel;
        const modal = this.modalService.open(_alert_info_alert_info_component__WEBPACK_IMPORTED_MODULE_4__["AlertInfoComponent"], { size: 'lg', scrollable: true, windowClass: 'modal-width', centered: true });
        modal.componentInstance.alertInfo = { data: {}, type: '' };
    }
    clearAllNotifications() {
        this.navigationStore.removeAllNotifiations();
    }
    onNotificationPanelView() {
        this.showPanel = !this.showPanel;
        if (this.showPanel) {
            this.onPanelView.emit();
        }
    }
};
NotificationPanelComponent.ctorParameters = () => [
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__["NgbModal"] },
    { type: src_app_store_navigation_service__WEBPACK_IMPORTED_MODULE_6__["NavigationService"] },
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_8__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], NotificationPanelComponent.prototype, "notifications", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], NotificationPanelComponent.prototype, "onPanelView", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('panel', null)
], NotificationPanelComponent.prototype, "panel", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('clearall', null)
], NotificationPanelComponent.prototype, "clearText", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('alertItem', null)
], NotificationPanelComponent.prototype, "alertItem", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('document:click', ['$event'])
], NotificationPanelComponent.prototype, "clickout", null);
NotificationPanelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-notification-panel',
        template: __webpack_require__(/*! raw-loader!./notification-panel.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/notification-panel/notification-panel.component.html"),
        styles: [__webpack_require__(/*! ./notification-panel.component.scss */ "./app/widgets/notification-panel/notification-panel.component.scss")]
    })
], NotificationPanelComponent);



/***/ }),

/***/ "./app/widgets/pie/pie.component.scss":
/*!********************************************!*\
  !*** ./app/widgets/pie/pie.component.scss ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvcGllL3BpZS5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./app/widgets/pie/pie.component.ts":
/*!******************************************!*\
  !*** ./app/widgets/pie/pie.component.ts ***!
  \******************************************/
/*! exports provided: PieComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieComponent", function() { return PieComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let PieComponent = class PieComponent {
    constructor() {
        this.dataSource = [];
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PieComponent.prototype, "dataSource", void 0);
PieComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-pie',
        template: __webpack_require__(/*! raw-loader!./pie.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/pie/pie.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./pie.component.scss */ "./app/widgets/pie/pie.component.scss")]
    })
], PieComponent);



/***/ }),

/***/ "./app/widgets/print-preview/print-preview.component.scss":
/*!****************************************************************!*\
  !*** ./app/widgets/print-preview/print-preview.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".print-icon, .days8, .customp-chiller-efficiencyx, .customp-chiller-condencer, .customp-chiller-efficiency, .position-gorelative {\n  position: absolute;\n  right: 10px;\n  top: 13px;\n  width: 25px;\n  height: 25px;\n  padding: 2px;\n  border: 2px solid #858b90;\n  border-radius: 4px;\n  box-shadow: 0 0 2px rgba(255, 255, 255, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #455f73;\n  z-index: 2;\n  cursor: pointer;\n}\n.print-icon svg, .days8 svg, .customp-chiller-efficiencyx svg, .customp-chiller-condencer svg, .customp-chiller-efficiency svg, .position-gorelative svg {\n  width: 15px;\n  height: 15px;\n  fill: #bbbbbb;\n}\n.print-icon:hover .menu-dropdown, .days8:hover .menu-dropdown, .customp-chiller-efficiencyx:hover .menu-dropdown, .customp-chiller-condencer:hover .menu-dropdown, .customp-chiller-efficiency:hover .menu-dropdown, .position-gorelative:hover .menu-dropdown {\n  display: block;\n}\n.print-icon .menu-dropdown, .days8 .menu-dropdown, .customp-chiller-efficiencyx .menu-dropdown, .customp-chiller-condencer .menu-dropdown, .customp-chiller-efficiency .menu-dropdown, .position-gorelative .menu-dropdown {\n  background-color: #fff;\n  box-shadow: 0 0 2px rgba(255, 255, 255, 0.2);\n  display: none;\n  position: absolute;\n  right: -1px;\n  top: 23px;\n  width: 127px;\n  color: #333;\n  z-index: 2;\n}\n.print-icon .menu-dropdown .menu-dropdown-inside, .days8 .menu-dropdown .menu-dropdown-inside, .customp-chiller-efficiencyx .menu-dropdown .menu-dropdown-inside, .customp-chiller-condencer .menu-dropdown .menu-dropdown-inside, .customp-chiller-efficiency .menu-dropdown .menu-dropdown-inside, .position-gorelative .menu-dropdown .menu-dropdown-inside {\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n}\n.print-icon .menu-dropdown .menu-dropdown-inside .menu-dropdown-item, .days8 .menu-dropdown .menu-dropdown-inside .menu-dropdown-item, .customp-chiller-efficiencyx .menu-dropdown .menu-dropdown-inside .menu-dropdown-item, .customp-chiller-condencer .menu-dropdown .menu-dropdown-inside .menu-dropdown-item, .customp-chiller-efficiency .menu-dropdown .menu-dropdown-inside .menu-dropdown-item, .position-gorelative .menu-dropdown .menu-dropdown-inside .menu-dropdown-item {\n  padding: 2px;\n}\n.print-icon .menu-dropdown .menu-dropdown-inside .menu-dropdown-item:hover, .days8 .menu-dropdown .menu-dropdown-inside .menu-dropdown-item:hover, .customp-chiller-efficiencyx .menu-dropdown .menu-dropdown-inside .menu-dropdown-item:hover, .customp-chiller-condencer .menu-dropdown .menu-dropdown-inside .menu-dropdown-item:hover, .customp-chiller-efficiency .menu-dropdown .menu-dropdown-inside .menu-dropdown-item:hover, .position-gorelative .menu-dropdown .menu-dropdown-inside .menu-dropdown-item:hover {\n  background-color: #333;\n  color: #fff;\n}\n.hide {\n  display: none !important;\n}\n.position-gorelative {\n  position: relative !important;\n  margin-left: 10px;\n  top: 0;\n  right: 0;\n}\n.customp-chiller-efficiency {\n  margin-left: 10px;\n  top: 43px;\n  right: 136px;\n}\n.customp-chiller-condencer {\n  margin-left: 0;\n  left: 47px;\n  top: 44px;\n  right: auto;\n}\n.customp-chiller-condencer .menu-dropdown {\n  left: -1px;\n  right: auto;\n}\n.customp-chiller-efficiencyx {\n  margin-left: 10px;\n  top: 43px;\n  right: 140px;\n}\n.days8 {\n  top: 10px;\n  left: 298px;\n}\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./app/widgets/print-preview/print-preview.component.ts":
/*!**************************************************************!*\
  !*** ./app/widgets/print-preview/print-preview.component.ts ***!
  \**************************************************************/
/*! exports provided: PrintPreviewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrintPreviewComponent", function() { return PrintPreviewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var html2canvas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! html2canvas */ "../node_modules/html2canvas/dist/html2canvas.js");
/* harmony import */ var html2canvas__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(html2canvas__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jspdf */ "../node_modules/jspdf/dist/jspdf.es.min.js");




let PrintPreviewComponent = class PrintPreviewComponent {
    constructor() {
        this.targetHtml = 'xxx';
        this.title = 'chart';
        this.className = 'print-icon';
        this.generateImage = (type = 'img') => {
            const html = document.getElementById(this.targetHtml);
            const icons = html.querySelector('.print-icon');
            const header = html.querySelector('.header-title');
            let text = '';
            if (icons) {
                // icons.style.opacity = 0;
                icons.style.display = 'none';
            }
            if (header) {
                text = header.innerHTML;
                header.innerHTML = `NTU ${text}`;
            }
            html2canvas__WEBPACK_IMPORTED_MODULE_2___default()(html, { removeContainer: true }).then((canvas) => {
                const dataUrl = canvas.toDataURL("image/jpeg");
                const day = new Date().getDate();
                const month = new Date().getMonth() + 1;
                const year = new Date().getFullYear();
                const hour = new Date().getHours();
                const minut = new Date().getMinutes();
                const second = new Date().getSeconds();
                const datePick = `-${year}${month}${day}-${hour}${minut}${second}`;
                const blob = canvas.toBlob((blobs) => {
                    if (type == 'pdf') {
                        const { width, height } = canvas;
                        let pos = 'p';
                        if (width > height) {
                            pos = 'l';
                        }
                        const doc = new jspdf__WEBPACK_IMPORTED_MODULE_3__["default"](pos, 'px', [canvas.width, canvas.height]);
                        doc.addImage(dataUrl, 'PNG', 0, 0, canvas.width, canvas.height);
                        doc.save(this.title + datePick);
                    }
                    else {
                        const url = URL.createObjectURL(blobs);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = this.title + datePick;
                        document.body.appendChild(a);
                        a.click();
                        a.remove();
                    }
                    if (icons) {
                        // icons.style.opacity = 1;
                        icons.style.display = '';
                    }
                    if (header) {
                        header.innerHTML = text;
                    }
                });
            });
        };
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PrintPreviewComponent.prototype, "targetHtml", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PrintPreviewComponent.prototype, "title", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], PrintPreviewComponent.prototype, "className", void 0);
PrintPreviewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-print-preview',
        template: __webpack_require__(/*! raw-loader!./print-preview.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/print-preview/print-preview.component.html"),
        styles: [__webpack_require__(/*! ./print-preview.component.scss */ "./app/widgets/print-preview/print-preview.component.scss")]
    })
], PrintPreviewComponent);



/***/ }),

/***/ "./app/widgets/profile-chart-container/chart-container.component.scss":
/*!****************************************************************************!*\
  !*** ./app/widgets/profile-chart-container/chart-container.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".widget-marge {\n  margin-left: 30px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9wcm9maWxlLWNoYXJ0LWNvbnRhaW5lci9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxwcm9maWxlLWNoYXJ0LWNvbnRhaW5lclxcY2hhcnQtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC93aWRnZXRzL3Byb2ZpbGUtY2hhcnQtY29udGFpbmVyL2NoYXJ0LWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL3Byb2ZpbGUtY2hhcnQtY29udGFpbmVyL2NoYXJ0LWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53aWRnZXQtbWFyZ2Uge1xyXG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xyXG59XHJcbiIsIi53aWRnZXQtbWFyZ2Uge1xuICBtYXJnaW4tbGVmdDogMzBweDtcbn0iXX0= */"

/***/ }),

/***/ "./app/widgets/profile-chart-container/chart-container.component.ts":
/*!**************************************************************************!*\
  !*** ./app/widgets/profile-chart-container/chart-container.component.ts ***!
  \**************************************************************************/
/*! exports provided: ChartContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartContainerComponent", function() { return ChartContainerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_sample_dummy_data_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/sample/dummy-data.service */ "./app/services/sample/dummy-data.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _services_http_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _services_date_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/date-service.service */ "./app/services/date-service.service.ts");
/* harmony import */ var _services_initial_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/initial.service */ "./app/services/initial.service.ts");







let ChartContainerComponent = class ChartContainerComponent {
    constructor(initialService, dummyDataService, datePipe, dataService, dateService, configs) {
        this.initialService = initialService;
        this.dummyDataService = dummyDataService;
        this.datePipe = datePipe;
        this.dataService = dataService;
        this.dateService = dateService;
        this.configs = configs;
        this.chart = null;
        this.compareChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.dateChangeEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
    }
    ngOnInit() {
        this.dateRange = this.dateService.thisMonthUpToNow(this.today);
        this.dataset = this.configs.chartConfigurations.profileChartData;
        this.chart = this.configs.chartConfigurations["profileChart"];
    }
    onToggleChanged(event) {
        this.compareChange.emit(event);
    }
    dateChanged(event) {
        this.dateChangeEvent.emit({ event: event, isCompare: this.isCompare });
    }
};
ChartContainerComponent.ctorParameters = () => [
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] },
    { type: _services_sample_dummy_data_service__WEBPACK_IMPORTED_MODULE_2__["DummyDataService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: _services_http_service__WEBPACK_IMPORTED_MODULE_4__["HttpService"] },
    { type: _services_date_service_service__WEBPACK_IMPORTED_MODULE_5__["DateServiceService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ChartContainerComponent.prototype, "isCompare", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ChartContainerComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ChartContainerComponent.prototype, "chart", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ChartContainerComponent.prototype, "dataset", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ChartContainerComponent.prototype, "compareChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ChartContainerComponent.prototype, "dateChangeEvent", void 0);
ChartContainerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-chart-container',
        template: __webpack_require__(/*! raw-loader!./chart-container.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/profile-chart-container/chart-container.component.html"),
        styles: [__webpack_require__(/*! ./chart-container.component.scss */ "./app/widgets/profile-chart-container/chart-container.component.scss")]
    })
], ChartContainerComponent);



/***/ }),

/***/ "./app/widgets/profile-chart/profile-chart.component.scss":
/*!****************************************************************!*\
  !*** ./app/widgets/profile-chart/profile-chart.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvcHJvZmlsZS1jaGFydC9wcm9maWxlLWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/profile-chart/profile-chart.component.ts":
/*!**************************************************************!*\
  !*** ./app/widgets/profile-chart/profile-chart.component.ts ***!
  \**************************************************************/
/*! exports provided: ProfileChartComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProfileChartComponent", function() { return ProfileChartComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _services_initial_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../services/dashboards/lt-dashboard.service */ "./app/services/dashboards/lt-dashboard.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _services_http_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _services_date_service_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/date-service.service */ "./app/services/date-service.service.ts");







let ProfileChartComponent = class ProfileChartComponent {
    constructor(datePipe, dataService, dateService, configs, ltDashboardService, initialService) {
        this.datePipe = datePipe;
        this.dataService = dataService;
        this.dateService = dateService;
        this.configs = configs;
        this.ltDashboardService = ltDashboardService;
        this.initialService = initialService;
        this.level = 'building';
        this.compare = false;
        this.chart = null;
        this.week = { "Sunday": 0, "Monday": 1, "Tuesday": 2, "Wednesday": 3, "Thursday": 4, "Friday": 5, "Saturday": 6, "Holiday": 7 };
        this.allBuildings = [];
    }
    ngOnInit() {
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
        this.dateRange = this.dateService.thisMonthUpToNow(this.today);
        this.dataset = this.configs.chartConfigurations.profileChartData;
        this.datasetCompare = this.configs.chartConfigurations.profileChartData2;
        this.chart = this.configs.chartConfigurations["profileChart"];
        this.plotEmptyChart(this.compare);
        if (this.level == 'building') {
            this.getChartData({ event: this.dateRange, isCompare: true });
        }
        else {
            this.getChartDataGroup({ event: this.dateRange, isCompare: true });
        }
    }
    compareChange(event) {
        this.compare = !this.compare;
        if (this.compare) {
            if (this.level == 'building') {
                this.getChartData({ event: this.dateService.thisMonthUpToNow(this.today), isCompare: false });
            }
            else {
                this.getChartDataGroup({ event: this.dateService.thisMonthUpToNow(this.today), isCompare: false });
            }
        }
    }
    getChartDataGroup(event) {
        this.ltDashboardService.getProfileChartBuildingGroup(this.serviceType, this.buildingId, event.event.start, event.event.end).then(res => {
            if (event.isCompare) {
                this.dataSource = res;
            }
            else {
                this.compareDataSource = res;
            }
        });
    }
    getChartData(event) {
        this.ltDashboardService.getProfileChartBuilding(this.serviceType, this.buildingId, event.event.start, event.event.end).then(res => {
            if (event.isCompare) {
                this.dataSource = res;
            }
            else {
                this.compareDataSource = res;
            }
        });
    }
    plotEmptyChart(isCompare) {
        if (isCompare) {
            this.dataSource = this.ltDashboardService.getEmptyProfileChart(this.serviceType);
        }
        else {
            this.compareDataSource = this.ltDashboardService.getEmptyProfileChart(this.serviceType);
        }
    }
    dateChanged(event) {
        this.dateRange = event.event;
        this.plotEmptyChart(event.isCompare);
        if (this.level == 'building') {
            this.getChartData({ event: this.dateRange, isCompare: event.isCompare });
        }
        else {
            this.getChartDataGroup({ event: this.dateRange, isCompare: event.isCompare });
        }
    }
};
ProfileChartComponent.ctorParameters = () => [
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_4__["DatePipe"] },
    { type: _services_http_service__WEBPACK_IMPORTED_MODULE_5__["HttpService"] },
    { type: _services_date_service_service__WEBPACK_IMPORTED_MODULE_6__["DateServiceService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_1__["InitialService"] },
    { type: _services_dashboards_lt_dashboard_service__WEBPACK_IMPORTED_MODULE_2__["LtDashboardService"] },
    { type: _services_initial_service__WEBPACK_IMPORTED_MODULE_1__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], ProfileChartComponent.prototype, "serviceType", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], ProfileChartComponent.prototype, "buildingId", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])()
], ProfileChartComponent.prototype, "level", void 0);
ProfileChartComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-profile-chart',
        template: __webpack_require__(/*! raw-loader!./profile-chart.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/profile-chart/profile-chart.component.html"),
        styles: [__webpack_require__(/*! ./profile-chart.component.scss */ "./app/widgets/profile-chart/profile-chart.component.scss")]
    })
], ProfileChartComponent);



/***/ }),

/***/ "./app/widgets/real-time-line/real-time-line.component.scss":
/*!******************************************************************!*\
  !*** ./app/widgets/real-time-line/real-time-line.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvcmVhbC10aW1lLWxpbmUvcmVhbC10aW1lLWxpbmUuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/widgets/real-time-line/real-time-line.component.ts":
/*!****************************************************************!*\
  !*** ./app/widgets/real-time-line/real-time-line.component.ts ***!
  \****************************************************************/
/*! exports provided: RealTimeLineComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RealTimeLineComponent", function() { return RealTimeLineComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let RealTimeLineComponent = class RealTimeLineComponent {
    constructor() {
        this.dataSource = [];
        this.height = 100;
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], RealTimeLineComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], RealTimeLineComponent.prototype, "height", void 0);
RealTimeLineComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-real-time-line',
        template: __webpack_require__(/*! raw-loader!./real-time-line.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/real-time-line/real-time-line.component.html"),
        styles: [__webpack_require__(/*! ./real-time-line.component.scss */ "./app/widgets/real-time-line/real-time-line.component.scss")]
    })
], RealTimeLineComponent);



/***/ }),

/***/ "./app/widgets/report-form/report-form.component.scss":
/*!************************************************************!*\
  !*** ./app/widgets/report-form/report-form.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-content {\n  font-size: 14px;\n}\n\n.fieldset {\n  border: 1px solid #686a6b;\n  width: 500px;\n}\n\n.fieldset > legend {\n  font-size: 16px;\n  width: auto !important;\n  padding: 0 5px 0 5px;\n  color: #b8b7b7;\n  margin: 0 0 0 10px;\n}\n\nhr {\n  margin-top: 0;\n  margin-bottom: 10px;\n  border-top: 1px solid #727272;\n}\n\n.action-btn button {\n  width: 225px;\n}\n\n.btn-primary {\n  background-color: #0069d9 !important;\n}\n\n.btn-primary.active {\n  border-color: #0069d9 !important;\n}\n\n.row-limit {\n  font-size: 14px;\n}\n\n.loading-area {\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n\n.button-border {\n  border: 1px solid #4296ff;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9yZXBvcnQtZm9ybS9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxyZXBvcnQtZm9ybVxccmVwb3J0LWZvcm0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvcmVwb3J0LWZvcm0vcmVwb3J0LWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FDQ0o7O0FERUE7RUFDSSx5QkFBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLGVBQUE7RUFDQSxzQkFBQTtFQUNBLG9CQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSw2QkFBQTtBQ0NKOztBREdJO0VBQ0ksWUFBQTtBQ0FSOztBRElBO0VBQ0ksb0NBQUE7QUNESjs7QURJQTtFQUNJLGdDQUFBO0FDREo7O0FESUE7RUFDSSxlQUFBO0FDREo7O0FESUE7RUFDSSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FDREo7O0FESUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQ0RKOztBRElBO0VBQ0kseUJBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvcmVwb3J0LWZvcm0vcmVwb3J0LWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250ZW50IHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLmZpZWxkc2V0IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM2ODZhNmI7XHJcbiAgICB3aWR0aDogNTAwcHg7XHJcbn1cclxuICBcclxuLmZpZWxkc2V0PmxlZ2VuZCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xyXG4gICAgcGFkZGluZzogMCA1cHggMCA1cHg7XHJcbiAgICBjb2xvcjogcmdiKDE4NCwgMTgzLCAxODMpO1xyXG4gICAgbWFyZ2luOiAwIDAgMCAxMHB4O1xyXG59XHJcblxyXG5ociB7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2IoMTE0LCAxMTQsIDExNCk7XHJcbn1cclxuXHJcbi5hY3Rpb24tYnRuIHtcclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgd2lkdGg6IDIyNXB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uYnRuLXByaW1hcnl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA2OWQ5ICFpbXBvcnRhbnQ7XHJcbn1cclxuICBcclxuLmJ0bi1wcmltYXJ5LmFjdGl2ZXtcclxuICAgIGJvcmRlci1jb2xvcjogIzAwNjlkOSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucm93LWxpbWl0IHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLmxvYWRpbmctYXJlYSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ubG9hZGluZy1pY29uIHtcclxuICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4uYnV0dG9uLWJvcmRlciB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDI5NmZmO1xyXG59IiwiLmZvcm0tY29udGVudCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzY4NmE2YjtcbiAgd2lkdGg6IDUwMHB4O1xufVxuXG4uZmllbGRzZXQgPiBsZWdlbmQge1xuICBmb250LXNpemU6IDE2cHg7XG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgNXB4IDAgNXB4O1xuICBjb2xvcjogI2I4YjdiNztcbiAgbWFyZ2luOiAwIDAgMCAxMHB4O1xufVxuXG5ociB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjNzI3MjcyO1xufVxuXG4uYWN0aW9uLWJ0biBidXR0b24ge1xuICB3aWR0aDogMjI1cHg7XG59XG5cbi5idG4tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDY5ZDkgIWltcG9ydGFudDtcbn1cblxuLmJ0bi1wcmltYXJ5LmFjdGl2ZSB7XG4gIGJvcmRlci1jb2xvcjogIzAwNjlkOSAhaW1wb3J0YW50O1xufVxuXG4ucm93LWxpbWl0IHtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4ubG9hZGluZy1hcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNTAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubG9hZGluZy1pY29uIHtcbiAgd2lkdGg6IDc1cHg7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLmJ1dHRvbi1ib3JkZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCAjNDI5NmZmO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/report-form/report-form.component.ts":
/*!**********************************************************!*\
  !*** ./app/widgets/report-form/report-form.component.ts ***!
  \**********************************************************/
/*! exports provided: ReportFormComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportFormComponent", function() { return ReportFormComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../enums/building-level-type.enum */ "./enums/building-level-type.enum.ts");
/* harmony import */ var _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../enums/report-type.enum */ "./enums/report-type.enum.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../date-range-picker/public-api */ "./app/widgets/date-range-picker/public-api.ts");
/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/sortBy */ "../node_modules/lodash/sortBy.js");
/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_sortBy__WEBPACK_IMPORTED_MODULE_8__);









let ReportFormComponent = class ReportFormComponent {
    constructor(fb, datePipe, initialService) {
        this.fb = fb;
        this.datePipe = datePipe;
        this.initialService = initialService;
        this.years = [];
        this.months = [];
        this.dates = [];
        this.sites = [];
        this.buildingGroups = [];
        this.buildings = [];
        this.tariffReportType = _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Monthly;
        this.reGenerate = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.download = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.initialData = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.showBuildingGroup = false;
        this.showBuilding = false;
        this.showMonth = false;
        this.showDate = false;
    }
    ngOnInit() {
        this.selectedType = _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].SITE;
        this.selectedReportType = _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Yearly;
        this.getDates(1);
        this.getYears();
        this.getMonths();
        this.initialService.navigationStore.buildingGroups$.subscribe(() => {
            this.buildingGroups = this.initialService.navigationStore.buildingGroupsByServiceType(this.serviceType);
            this.buildingGroups = lodash_sortBy__WEBPACK_IMPORTED_MODULE_8___default()(this.buildingGroups, ['description']);
            this.selectedBuildingGroup = this.buildingGroups[0] ? this.buildingGroups[0].buildingGroupID : 1;
            this.initialService.navigationStore.buildings$.subscribe(() => {
                const buildingsList = this.initialService.navigationStore.getBuildingsByBuildingGroup(this.selectedBuildingGroup);
                this.buildings = buildingsList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
                this.buildings = lodash_sortBy__WEBPACK_IMPORTED_MODULE_8___default()(this.buildings, ['buildingName']);
                this.selectedBuilding = this.buildings[0] ? this.buildings[0].buildingID : 1;
                this.form = this.fb.group({
                    locationType: _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].SITE,
                    location: this.fb.group({
                        site: 1,
                        buildingGroup: this.buildingGroups[0] ? this.buildingGroups[0].buildingGroupID : '',
                        building: this.buildings[0] ? this.buildings[0].buildingID : ''
                    }),
                    reportType: `${_enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Yearly}`,
                    dateTime: this.fb.group({
                        year: 1,
                        month: 1,
                        date: 1
                    })
                });
                this.isAvailableReport();
            });
        });
    }
    submitForm() { }
    onChangedLocation(event) {
        if (event.target.value == _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].SITE) {
            this.showBuildingGroup = false;
            this.showBuilding = false;
            this.selectedType = _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].SITE;
        }
        else if (event.target.value == _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].BUILDING_GROUP) {
            this.showBuildingGroup = true;
            this.showBuilding = false;
            this.selectedType = _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].BUILDING_GROUP;
        }
        else {
            this.showBuilding = true;
            this.showBuildingGroup = true;
            this.selectedType = _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].BUILDING;
        }
        this.isAvailableReport();
    }
    onChangedType(value) {
        if (value == _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Yearly) {
            this.showMonth = false;
            this.showDate = false;
            this.selectedReportType = _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Yearly;
        }
        else if (value == _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Monthly) {
            this.showMonth = true;
            this.showDate = false;
            this.selectedReportType = _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Monthly;
        }
        else {
            this.showMonth = true;
            this.showDate = true;
            this.selectedReportType = _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].None;
        }
        this.isAvailableReport();
    }
    getYears() {
        const yearList = [];
        for (let year = 0; year < 10; year++) {
            yearList.push({ year: new Date().getFullYear() - year, value: year + 1 });
        }
        this.years = yearList;
    }
    getMonths() {
        const monthList = [];
        for (let i = 0; i < 12; i++) {
            monthList.push({ name: this.datePipe.transform(new Date(1).setMonth(i), 'MMMM'), value: i + 1 });
            // console.log(this.datePipe.transform(new Date(1).setMonth(i),'MMMM'))
            //console.log(this.datePipe.transform(new Date().setMonth(i), 'MMMM') + 'date')
        }
        this.months = monthList;
    }
    getDates(month) {
        let noOfDate;
        const dateList = [];
        noOfDate = new Date(new Date().getFullYear(), month, 0).getDate();
        for (let date = 1; date <= noOfDate; date++) {
            dateList.push(date);
        }
        this.dates = dateList;
    }
    onChangeYear() {
        this.isAvailableReport();
    }
    onChangeMonth() {
        this.isAvailableReport();
    }
    onChangeDate() {
        this.isAvailableReport();
    }
    onChangedSite(e) {
        this.isAvailableReport();
    }
    onChangedGroup(e) {
        this.selectedBuildingGroup = parseInt(e);
        const buildingsList = this.initialService.navigationStore.getBuildingsByBuildingGroup(this.selectedBuildingGroup);
        this.buildings = buildingsList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
        this.buildings = lodash_sortBy__WEBPACK_IMPORTED_MODULE_8___default()(this.buildings, ['buildingName']);
        this.selectedBuilding = this.buildings[0] ? this.buildings[0].buildingID : 1;
        this.form.patchValue({
            location: {
                building: this.selectedBuilding
            }
        });
        this.isAvailableReport();
    }
    onChangedBuilding(e) {
        this.selectedBuilding = parseInt(e);
        this.isAvailableReport();
    }
    currentFormData() {
        let categoryId;
        let year = this.years.find(x => x.value == this.form.value.dateTime.year).year;
        let month = this.months.find(x => x.value == this.form.value.dateTime.month).value - 1;
        let date = this.form.value.dateTime.date;
        let dateRange = new _date_range_picker_public_api__WEBPACK_IMPORTED_MODULE_7__["DateRange"]();
        dateRange.start = new Date(year, month, date);
        dateRange.end = new Date(year, month, date);
        switch (parseInt(this.form.value.locationType)) {
            case _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].SITE:
                categoryId = 1;
                break;
            case _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].BUILDING:
                categoryId = this.selectedBuilding;
                break;
            case _enums_building_level_type_enum__WEBPACK_IMPORTED_MODULE_4__["BuildingLevelType"].BUILDING_GROUP:
                categoryId = this.selectedBuildingGroup;
                break;
        }
        switch (parseInt(this.form.value.reportType)) {
            case _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Yearly:
                dateRange.start.setMonth(0);
                dateRange.start.setDate(1);
                dateRange.end.setFullYear(dateRange.end.getFullYear() + 1);
                dateRange.end.setMonth(0);
                dateRange.end.setDate(1);
                break;
            case _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Monthly:
                dateRange.start.setDate(1);
                dateRange.end.setMonth(dateRange.start.getMonth() + 1);
                dateRange.end.setDate(1);
                break;
            case _enums_report_type_enum__WEBPACK_IMPORTED_MODULE_5__["ReportType"].Daily:
                dateRange.end.setDate(dateRange.start.getDate() + 1);
                break;
        }
        return {
            categoryId,
            categoryName: parseInt(this.form.value.locationType),
            reportType: parseInt(this.form.value.reportType),
            dateRange
        };
    }
    isAvailableReport() {
        this.initialData.emit(this.currentFormData());
    }
    regenerate() {
        this.reGenerate.emit(this.currentFormData());
    }
    downloadAsExcel() {
        this.download.emit(this.currentFormData());
    }
};
ReportFormComponent.ctorParameters = () => [
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ReportFormComponent.prototype, "serviceType", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ReportFormComponent.prototype, "isLoading", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ReportFormComponent.prototype, "buttonText", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ReportFormComponent.prototype, "reGenerate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ReportFormComponent.prototype, "download", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ReportFormComponent.prototype, "initialData", void 0);
ReportFormComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-report-form',
        template: __webpack_require__(/*! raw-loader!./report-form.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/report-form/report-form.component.html"),
        styles: [__webpack_require__(/*! ./report-form.component.scss */ "./app/widgets/report-form/report-form.component.scss")]
    })
], ReportFormComponent);



/***/ }),

/***/ "./app/widgets/reports/reports.component.scss":
/*!****************************************************!*\
  !*** ./app/widgets/reports/reports.component.scss ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvcmVwb3J0cy9yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/reports/reports.component.ts":
/*!**************************************************!*\
  !*** ./app/widgets/reports/reports.component.ts ***!
  \**************************************************/
/*! exports provided: ReportsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportsComponent", function() { return ReportsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let ReportsComponent = class ReportsComponent {
    constructor() { }
    ngOnInit() {
    }
};
ReportsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-reports',
        template: __webpack_require__(/*! raw-loader!./reports.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/reports/reports.component.html"),
        styles: [__webpack_require__(/*! ./reports.component.scss */ "./app/widgets/reports/reports.component.scss")]
    })
], ReportsComponent);



/***/ }),

/***/ "./app/widgets/schedule-download/schedule-download.component.scss":
/*!************************************************************************!*\
  !*** ./app/widgets/schedule-download/schedule-download.component.scss ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".field-min-width {\n  min-width: 200px;\n}\n\n.loading-area {\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading-icon {\n  width: 75px;\n  height: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9zY2hlZHVsZS1kb3dubG9hZC9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxzY2hlZHVsZS1kb3dubG9hZFxcc2NoZWR1bGUtZG93bmxvYWQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvc2NoZWR1bGUtZG93bmxvYWQvc2NoZWR1bGUtZG93bmxvYWQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvc2NoZWR1bGUtZG93bmxvYWQvc2NoZWR1bGUtZG93bmxvYWQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmllbGQtbWluLXdpZHRoIHtcclxuICAgIG1pbi13aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcbi5sb2FkaW5nLWFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmxvYWRpbmctaWNvbiB7XHJcbiAgICB3aWR0aDogNzVweDtcclxuICAgIGhlaWdodDogYXV0bztcclxufSIsIi5maWVsZC1taW4td2lkdGgge1xuICBtaW4td2lkdGg6IDIwMHB4O1xufVxuXG4ubG9hZGluZy1hcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNTAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ubG9hZGluZy1pY29uIHtcbiAgd2lkdGg6IDc1cHg7XG4gIGhlaWdodDogYXV0bztcbn0iXX0= */"

/***/ }),

/***/ "./app/widgets/schedule-download/schedule-download.component.ts":
/*!**********************************************************************!*\
  !*** ./app/widgets/schedule-download/schedule-download.component.ts ***!
  \**********************************************************************/
/*! exports provided: ScheduleDownloadComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScheduleDownloadComponent", function() { return ScheduleDownloadComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _date_range_picker_lib_models_date_range__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../date-range-picker/lib/models/date-range */ "./app/widgets/date-range-picker/lib/models/date-range.ts");
/* harmony import */ var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swimlane/ngx-datatable */ "../node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/remove */ "../node_modules/lodash/remove.js");
/* harmony import */ var lodash_remove__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_remove__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash_findIndex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/findIndex */ "../node_modules/lodash/findIndex.js");
/* harmony import */ var lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_findIndex__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/filter */ "../node_modules/lodash/filter.js");
/* harmony import */ var lodash_filter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_filter__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var lodash_unionBy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/unionBy */ "../node_modules/lodash/unionBy.js");
/* harmony import */ var lodash_unionBy__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_unionBy__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/cloneDeep */ "../node_modules/lodash/cloneDeep.js");
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/enums/location-type.enum */ "./enums/location-type.enum.ts");
/* harmony import */ var src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/widgets/confirmation-box/confirmation-box.component */ "./app/widgets/confirmation-box/confirmation-box.component.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! lodash/sortBy */ "../node_modules/lodash/sortBy.js");
/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(lodash_sortBy__WEBPACK_IMPORTED_MODULE_18__);



















let ScheduleDownloadComponent = class ScheduleDownloadComponent {
    constructor(headerService, datePipe, initialService, fb, modalService) {
        this.headerService = headerService;
        this.datePipe = datePipe;
        this.initialService = initialService;
        this.fb = fb;
        this.modalService = modalService;
        this.sites = [];
        this.buildingGroups = [];
        this.buildings = [];
        this.tableWidth = new rxjs__WEBPACK_IMPORTED_MODULE_17__["BehaviorSubject"]('100%');
        this.searchTerm = '';
        this.loadingIndicator = true;
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["ColumnMode"];
        this.SortType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["SortType"];
        this.SelectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["SelectionType"];
        this.dateRange = new _date_range_picker_lib_models_date_range__WEBPACK_IMPORTED_MODULE_2__["DateRange"](new Date(), new Date());
        this.plusIcon = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_4__["faPlus"];
        this.selected = [];
        this.editRows = [];
        this.locationType = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.insertData = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.updateData = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.deleteData = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        if (this.initialService.getDemoConfig().isDemo) {
            this.today = new Date(this.initialService.getDemoConfig().demoDate);
        }
        else {
            this.today = new Date();
        }
    }
    ngOnInit() {
        this.initialService.navigationStore.sites$.subscribe(res => {
            this.sites = res;
            this.selectedSite = res[0].siteID;
        });
        this.initialService.navigationStore.buildingGroups$.subscribe(() => {
            this.buildingGroups = this.initialService.navigationStore.buildingGroupsByServiceType(this.serviceType);
            this.buildingGroups = lodash_sortBy__WEBPACK_IMPORTED_MODULE_18___default()(this.buildingGroups, ['description']);
            this.selectedBuildingGroup = this.buildingGroups[0].buildingGroupID;
            this.initialService.navigationStore.buildings$.subscribe(() => {
                const buildingList = this.initialService.navigationStore.getBuildingsByBuildingGroup(this.selectedBuildingGroup);
                this.buildings = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
                this.buildings = lodash_sortBy__WEBPACK_IMPORTED_MODULE_18___default()(this.buildings, ['buildingName']);
                this.selectedBuilding = this.buildings[0].buildingID;
            });
        });
        this.changeLocationType(src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__["LocationType"].Site);
        this.setInitialForm();
        this.disabledAddEdit = false;
    }
    ngOnChanges() {
    }
    changeLocationType(locationType) {
        this.searchTerm = '';
        this.headerService.getChartWidth().subscribe(res => {
            switch (Number(locationType)) {
                case src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__["LocationType"].Site:
                    this.tableWidth.next(res / 6);
                    break;
                case src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__["LocationType"].BuildingGroup:
                    this.tableWidth.next(res / 7);
                    break;
                case src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__["LocationType"].Building:
                    this.tableWidth.next(res / 8);
                    break;
                default:
                    this.tableWidth.next(res / 6);
                    break;
            }
        });
        this.selectedLocation = parseInt(locationType);
        this.locationType.emit(parseInt(locationType));
        this.disabledAddEdit = false;
    }
    onSelect({ selected }) {
        this.selected.splice(0, this.selected.length);
        this.selected.push(...selected);
    }
    addNewRow() {
        this.searchTerm = '';
        this.disabledAddEdit = true;
        this.setInitialForm();
        this.table.offset = 0;
        let row = {
            id: `${(+new Date).toString(36)}/insert`,
            scheduleName: null,
            reportType: 'Daily',
            site: {
                id: this.sites[0].siteID,
                name: this.sites[0].siteName
            },
            buildingGroup: {
                id: this.buildingGroups[0].buildingGroupID,
                name: this.buildingGroups[0].description
            },
            building: {
                id: this.buildings[0].buildingID,
                name: this.buildings[0].buildingName
            },
            startDate: this.datePipe.transform(new Date(), 'yyyy-MM-dd'),
            status: 'ACTIVE',
            action: 'insert'
        };
        this.rows.unshift(row);
        this.rows = [...this.rows];
    }
    changeScheduleName(row, event) {
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        if (event.target.value == null || event.target.value === '') {
            event.target.style.borderColor = 'red';
        }
        row.scheduleName = event.target.value;
        this.rows[index] = row;
        this.rows = [...this.rows];
    }
    changeReportType(row, event) {
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        row.reportType = event.target.value;
        this.rows[index] = row;
        this.rows = [...this.rows];
    }
    changeSite(row, id) {
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        row.site = id;
        this.rows[index] = row;
        this.rows = [...this.rows];
    }
    changeBuildingGroup(row, id) {
        this.selectedBuildingGroup = parseInt(id);
        const buildingList = this.initialService.navigationStore.getBuildingsByBuildingGroup(this.selectedBuildingGroup);
        this.buildings = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
        this.buildings = lodash_sortBy__WEBPACK_IMPORTED_MODULE_18___default()(this.buildings, ['buildingName']);
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        row.buildingGroup = this.buildingGroups.find(x => x.buildingGroupID == id).description;
        this.rows[index] = row;
        this.rows = [...this.rows];
    }
    changeBuilding(row, id) {
        this.selectedBuilding = id;
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        row.building = this.buildings.find(x => x.buildingID == id).buildingName;
        this.rows[index] = row;
        this.rows = [...this.rows];
    }
    changeStartingTime(row, event) {
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        row.startDate = event.target.value;
        this.rows[index] = row;
        this.rows = [...this.rows];
    }
    changeStatus(row, event) {
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        row.status = event.target.value;
        this.rows[index] = row;
        this.rows = [...this.rows];
    }
    editRowAction(row) {
        this.disabledAddEdit = true;
        const buildingList = this.initialService.navigationStore.getBuildingsByBuildingGroup(Number(row.buildingGroup.id));
        this.buildings = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
        this.buildings = lodash_sortBy__WEBPACK_IMPORTED_MODULE_18___default()(this.buildings, ['buildingName']);
        this.scheduleForm.patchValue({
            id: row.id,
            scheduleName: row.scheduleName,
            reportType: row.reportType,
            site: row.site.id,
            buildingGroup: row.buildingGroup.id,
            building: row.building.id,
            startDate: row.startDate,
            status: row.status,
        });
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        this.editRows.push(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_9___default()(row));
        row.action = 'update';
        this.rows[index] = row;
        this.rows = [...this.rows];
    }
    saveRow(row) {
        let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
            return `${row.id}` == `${item.id}`;
        });
        if (this.rows[index].scheduleName === null || this.rows[index].scheduleName === '') {
        }
        else {
            this.rows[index] = row;
            let editRowIndex = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.editRows, (item) => {
                return `${row.id}` == `${item.id}`;
            });
            this.editRows.splice(editRowIndex, 1);
            this.returnData = {
                categoryName: src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__["LocationType"][this.selectedLocation],
                name: this.scheduleForm.value.scheduleName,
                scheduleAttributes: {},
                reportType: this.scheduleForm.value.reportType,
                startDate: this.scheduleForm.value.startDate,
                status: this.scheduleForm.value.status
            };
            switch (this.selectedLocation) {
                case src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__["LocationType"].Site:
                    this.returnData.scheduleAttributes['siteId'] = Number(this.scheduleForm.value.site);
                    break;
                case src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__["LocationType"].BuildingGroup:
                    this.returnData.scheduleAttributes['siteId'] = Number(this.scheduleForm.value.site);
                    this.returnData.scheduleAttributes['buildingGroupId'] = Number(this.scheduleForm.value.buildingGroup);
                    break;
                case src_enums_location_type_enum__WEBPACK_IMPORTED_MODULE_13__["LocationType"].Building:
                    this.returnData.scheduleAttributes['siteId'] = Number(this.scheduleForm.value.site);
                    this.returnData.scheduleAttributes['buildingGroupId'] = Number(this.scheduleForm.value.buildingGroup);
                    this.returnData.scheduleAttributes['buildingId'] = Number(this.scheduleForm.value.building);
                    break;
            }
            if (row.action == 'insert') {
                lodash_remove__WEBPACK_IMPORTED_MODULE_5___default()(this.rows, (item) => {
                    return `${item.id}` === `${row.id}`;
                });
                this.insertData.emit(this.returnData);
            }
            else if (row.action == 'update') {
                this.updateData.emit({
                    scheduleId: row.id,
                    updatedDta: this.returnData
                });
            }
            row.action = 'NONE';
            this.rows = [...this.rows];
        }
        this.setInitialForm();
        this.scheduleForm.reset(this.scheduleForm.value);
        this.disabledAddEdit = false;
    }
    setInitialForm() {
        const buildingList = this.initialService.navigationStore.getBuildingsByBuildingGroup(this.buildingGroups[0].buildingGroupID);
        this.buildings = buildingList.filter(x => x.serviceTypes.some(y => y.serviceTypeID == this.serviceType));
        this.scheduleForm = this.fb.group({
            id: [`${(+new Date).toString(36)}/insert`, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["Validators"].required],
            scheduleName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_12__["Validators"].required],
            reportType: ['Daily', _angular_forms__WEBPACK_IMPORTED_MODULE_12__["Validators"].required],
            site: [this.sites[0].siteID, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["Validators"].required],
            buildingGroup: this.buildingGroups[0].buildingGroupID,
            building: this.buildings[0].buildingID,
            startDate: [this.datePipe.transform(new Date(), 'yyyy-MM-dd'), _angular_forms__WEBPACK_IMPORTED_MODULE_12__["Validators"].required],
            status: ['ACTIVE', _angular_forms__WEBPACK_IMPORTED_MODULE_12__["Validators"].required],
            action: ['insert', _angular_forms__WEBPACK_IMPORTED_MODULE_12__["Validators"].required],
        });
    }
    deleteRow(row) {
        const modalRef = this.modalService.open(src_app_widgets_confirmation_box_confirmation_box_component__WEBPACK_IMPORTED_MODULE_14__["ConfirmationBoxComponent"], { size: 'sm', centered: true });
        modalRef.componentInstance.massage = 'Are you sure you want to delete this schedule?';
        modalRef.result.then((result) => {
            if (result == 'Cross click') {
                lodash_remove__WEBPACK_IMPORTED_MODULE_5___default()(this.rows, (item) => {
                    return `${item.id}` === `${row.id}`;
                });
                this.rows = [...this.rows];
                this.deleteData.emit(row.id);
            }
        }, error => { });
    }
    searchByTermAction(data) {
        if (this.searchTerm == '') {
            return data;
        }
        else {
            let searchResults = [];
            searchResults.push(...lodash_filter__WEBPACK_IMPORTED_MODULE_7___default()(data, (item) => {
                return item.scheduleName.toUpperCase().includes(this.searchTerm.toUpperCase());
            }));
            searchResults.push(...lodash_filter__WEBPACK_IMPORTED_MODULE_7___default()(data, (item) => {
                return item.reportType.toUpperCase().includes(this.searchTerm.toUpperCase());
            }));
            searchResults.push(...lodash_filter__WEBPACK_IMPORTED_MODULE_7___default()(data, (item) => {
                return item.site.name.toUpperCase().includes(this.searchTerm.toUpperCase());
            }));
            searchResults.push(...lodash_filter__WEBPACK_IMPORTED_MODULE_7___default()(data, (item) => {
                return item.buildingGroup.name.toUpperCase().includes(this.searchTerm.toUpperCase());
            }));
            searchResults.push(...lodash_filter__WEBPACK_IMPORTED_MODULE_7___default()(data, (item) => {
                return item.building.name.toUpperCase().includes(this.searchTerm.toUpperCase());
            }));
            searchResults.push(...lodash_filter__WEBPACK_IMPORTED_MODULE_7___default()(data, (item) => {
                return item.startDate.includes(this.searchTerm);
            }));
            searchResults.push(...lodash_filter__WEBPACK_IMPORTED_MODULE_7___default()(data, (item) => {
                return item.status.toUpperCase().includes(this.searchTerm.toUpperCase());
            }));
            return lodash_unionBy__WEBPACK_IMPORTED_MODULE_8___default()(searchResults, 'id');
        }
    }
    cancelEditInsertAction(row) {
        if (`${row.id}`.includes('insert')) {
            lodash_remove__WEBPACK_IMPORTED_MODULE_5___default()(this.rows, (item) => {
                return `${item.id}` === `${row.id}`;
            });
        }
        else {
            let index = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.rows, (item) => {
                return `${row.id}` == `${item.id}`;
            });
            let editRowIndex = lodash_findIndex__WEBPACK_IMPORTED_MODULE_6___default()(this.editRows, (item) => {
                return `${row.id}` == `${item.id}`;
            });
            row.action = 'NONE';
            this.rows[index] = this.editRows[editRowIndex];
            this.editRows.splice(editRowIndex, 1);
        }
        this.rows = [...this.rows];
        this.disabledAddEdit = false;
    }
};
ScheduleDownloadComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_16__["HeaderService"] },
    { type: _angular_common__WEBPACK_IMPORTED_MODULE_10__["DatePipe"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_11__["InitialService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_12__["FormBuilder"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_15__["NgbModal"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ScheduleDownloadComponent.prototype, "isLoading", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ScheduleDownloadComponent.prototype, "serviceType", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ScheduleDownloadComponent.prototype, "rows", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ScheduleDownloadComponent.prototype, "locationType", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ScheduleDownloadComponent.prototype, "insertData", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ScheduleDownloadComponent.prototype, "updateData", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ScheduleDownloadComponent.prototype, "deleteData", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["DatatableComponent"], { static: false })
], ScheduleDownloadComponent.prototype, "table", void 0);
ScheduleDownloadComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-schedule-download',
        template: __webpack_require__(/*! raw-loader!./schedule-download.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/schedule-download/schedule-download.component.html"),
        styles: [__webpack_require__(/*! ./schedule-download.component.scss */ "./app/widgets/schedule-download/schedule-download.component.scss")]
    })
], ScheduleDownloadComponent);



/***/ }),

/***/ "./app/widgets/side-bar/side-bar.component.scss":
/*!******************************************************!*\
  !*** ./app/widgets/side-bar/side-bar.component.scss ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\nul.menu {\n  list-style-type: none;\n  -webkit-padding-start: 0px;\n          padding-inline-start: 0px;\n  position: relative;\n}\n\nul.menu li ul {\n  list-style-type: none;\n  -webkit-padding-start: 0px;\n          padding-inline-start: 0px;\n}\n\n.menu-item {\n  color: #ccc;\n  cursor: pointer;\n  font-size: 14px;\n  transition: all ease-in-out 0.3s;\n}\n\n.sub-menu-item {\n  color: #ccc;\n  font-size: 14px;\n}\n\n.menu-item:hover {\n  cursor: pointer;\n  background-color: #36556f;\n}\n\n.menu-item.active {\n  color: #ffffff;\n  background-color: #007bff;\n}\n\n.footer-version {\n  font-size: 12px;\n  color: #314554;\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  cursor: pointer;\n}\n\n.footer-version:hover {\n  color: #435e72;\n}\n\n.inactive:hover {\n  cursor: default;\n  background: none;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9zaWRlLWJhci9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxzaWRlLWJhclxcc2lkZS1iYXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvc2lkZS1iYXIvc2lkZS1iYXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvc2lkZS1iYXIvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNJLHFCQUFBO0VBQ0EsMEJBQUE7VUFBQSx5QkFBQTtFQUNBLGtCQUFBO0FER0o7O0FDQVE7RUFDSSxxQkFBQTtFQUNBLDBCQUFBO1VBQUEseUJBQUE7QURFWjs7QUNHQTtFQUNJLFdBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLGdDQUFBO0FEQUo7O0FDR0E7RUFDSSxXQUFBO0VBQ0EsZUFBQTtBREFKOztBQ0dBO0VBQ0ksZUFBQTtFQUNBLHlCRnJCVTtBQ3FCZDs7QUNHQTtFQUNJLGNBQUE7RUFDQSx5QkFBQTtBREFKOztBQ0dBO0VBQ0UsZUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtBREFGOztBQ0dBO0VBQ0UsY0FBQTtBREFGOztBQ0dBO0VBQ0ksZUFBQTtFQUNBLGdCQUFBO0FEQUoiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL3NpZGUtYmFyL3NpZGUtYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWF0ZXJpYWwgY29sb3JzXHJcbiRiZy1jb2xvcjogIzFlMWYyMTtcclxuJGhlYWRlci1jb2xvcjogIzI5Mzk0NjtcclxuJGJnLWNhcmQ6ICMyNDJjMzM7XHJcbiRiZy1wcmltYXJ5OiAjMDA3YmZmO1xyXG4kYmctc2Vjb25kYXJ5OiAjMjkzOTQ2O1xyXG4kYmctb3B0LW9uZTogIzJmNDI1MTtcclxuJGJnLW9wdC10d286ICMzYzYxN2Q7XHJcbiRiZy1vcHQtZm91cjogIzM2NTU2ZjtcclxuJGJnLXRhYmxlLWhlYWRlcjogIzFjMjMyODtcclxuJGJnLXRhYmxlLWJvZHk6ICMzNDNmNDk7XHJcblxyXG4vLyBib3JkZXIgY29sb3JzXHJcbiRjb2xvci1ib3JkZXItcHJpbWFyeTogIzM1NDk1ODtcclxuXHJcbi8vIGNvbW1vbiBjb2xvcnNcclxuJHRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcclxuXHJcbi8vIHR5cG8gY29sb3JzXHJcbiRmb250LWNvbG9yOiAjZmZmZmZmO1xyXG4kY29sb3ItZm9udC1zZWNvbmRhcnk6ICNmZmY7XHJcbiRjb2xvci1mb250LXRlcm5hcnk6ICNiOWJhYmI7XHJcbiRmb250LWRhbmdlcjogI2U3NDgzYztcclxuJGZvbnQtbmV1dHJhbDogIzExYjcyYztcclxuJGZvbnQtd2FybmluZzogI2U3OGMzYztcclxuXHJcbi8vIHR5cG8gc2l6ZXNcclxuJHNpemUtZm9udC1wcmltYXJ5OiAuOHJlbTtcclxuJHNpemUtZm9udC1zZWNvbmRhcnk6IDFyZW07XHJcbiRzaXplLWZvbnQtbGFyZ2U6IDNyZW07XHJcbiRzaXplLWZvbnQtaGVhZGVyLWJ0bjogMC45cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXI6IDEuN3JlbTtcclxuJHNpemUtZm9udC1wb2ludGVyLXVuaXQ6IDEuNXJlbTtcclxuJHNpemUtZm9udC1taWQ6IDIuMXJlbTtcclxuJHNpemUtZm9udC1sb3c6IDAuOHJlbTtcclxuXHJcbi8vIGNvbXBvbmVudCBzaXplc1xyXG4kaGVhZGVyLWhlaWdodDogNzBweDtcclxuJGhlaWdodC1jaGFydC1oZWFkZXI6IDQ3Ljc4cHg7XHJcbiRzaWRlLWJhci13aWR0aDogMjUwcHg7XHJcblxyXG4uZGF0ZS1waWNrZXItaW5wdXR7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iLCIuZGF0ZS1waWNrZXItaW5wdXQge1xuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcbn1cblxudWwubWVudSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxudWwubWVudSBsaSB1bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDBweDtcbn1cblxuLm1lbnUtaXRlbSB7XG4gIGNvbG9yOiAjY2NjO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4tb3V0IDAuM3M7XG59XG5cbi5zdWItbWVudS1pdGVtIHtcbiAgY29sb3I6ICNjY2M7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLm1lbnUtaXRlbTpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM2NTU2Zjtcbn1cblxuLm1lbnUtaXRlbS5hY3RpdmUge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbn1cblxuLmZvb3Rlci12ZXJzaW9uIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogIzMxNDU1NDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5mb290ZXItdmVyc2lvbjpob3ZlciB7XG4gIGNvbG9yOiAjNDM1ZTcyO1xufVxuXG4uaW5hY3RpdmU6aG92ZXIge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59IiwiQGltcG9ydCAnc3JjL3Njc3MvX3ZhcmlhYmxlcy5zY3NzJztcclxuXHJcbnVsLm1lbnV7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBwYWRkaW5nLWlubGluZS1zdGFydDogMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgIGxpIHtcclxuICAgICAgICB1bCB7XHJcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgICAgICAgICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tZW51LWl0ZW17XHJcbiAgICBjb2xvcjogI2NjYztcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHRyYW5zaXRpb246IGFsbCBlYXNlLWluLW91dCAwLjNzO1xyXG59XHJcblxyXG4uc3ViLW1lbnUtaXRlbSB7XHJcbiAgICBjb2xvcjogI2NjYztcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLm1lbnUtaXRlbTpob3ZlcntcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRiZy1vcHQtZm91cjtcclxufVxyXG5cclxuLm1lbnUtaXRlbS5hY3RpdmV7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbn1cclxuXHJcbi5mb290ZXItdmVyc2lvbiB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGNvbG9yOiAjMzE0NTU0O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBib3R0b206IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uZm9vdGVyLXZlcnNpb246aG92ZXIge1xyXG4gIGNvbG9yOiAjNDM1ZTcyO1xyXG59XHJcblxyXG4uaW5hY3RpdmU6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgYmFja2dyb3VuZDogbm9uZTtcclxufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/side-bar/side-bar.component.ts":
/*!****************************************************!*\
  !*** ./app/widgets/side-bar/side-bar.component.ts ***!
  \****************************************************/
/*! exports provided: SideBarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SideBarComponent", function() { return SideBarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var _services_header_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _version_version_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../version/version.component */ "./app/widgets/version/version.component.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");










let SideBarComponent = class SideBarComponent {
    constructor(initialService, dataService, endPoints, headerService, modalService, router) {
        this.initialService = initialService;
        this.dataService = dataService;
        this.endPoints = endPoints;
        this.headerService = headerService;
        this.modalService = modalService;
        this.router = router;
        this.menuItems = [];
        this.backArrow = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faArrowLeft"];
        this.arrowDown = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faChevronCircleDown"];
        this.arrowUp = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faChevronCircleUp"];
        this.headerService.isSideBarActive.subscribe(isActive => {
            this.isSideMenuActive = isActive;
        });
        this.version = this.initialService.getVersion();
    }
    ngOnInit() {
        this.dataService.get(this.endPoints.endPoints["side-menu"], {}).subscribe(items => {
            this.menuItems = [];
            for (let i = 0; i < items.length; i++) {
                if (items[i].item != "Configuration") {
                    this.menuItems.push(items[i]);
                }
            }
            const url = this.menuItems.find(x => x.url == this.router.url);
            if (url) {
                this.mainItemURL = this.router.url;
            }
            else if (this.router.url == '/electrical-report') {
                this.subItemURL = '/electrical-report';
            }
            else if (this.router.url == '/water-report') {
                this.subItemURL = '/water-report';
            }
            else if (this.router.url.substring(1, 11) == 'electrical') {
                this.mainItemURL = '/site-electrical';
            }
            else if (this.router.url.substring(1, 6) == 'water') {
                this.mainItemURL = '/site-water';
            }
            else if (this.router.url.substring(1, 3) == 'ht') {
                this.mainItemURL = '/ht-site-electrical';
            }
            else if (this.router.url.substring(1, 16) == 'map/electricity') {
                this.subItemURL = '/map/electricity/main-map';
            }
            else if (this.router.url.substring(1, 10) == 'map/water') {
                this.subItemURL = '/map/water/main-map';
            }
            else {
                this.subItemURL = this.router.url;
            }
            this.router.events.subscribe((event) => {
                if (event.navigationTrigger === 'popstate') {
                    const newUrl = this.menuItems.find(x => x.url == event.url);
                    this.subItemURL = '';
                    this.mainItemURL = '';
                    if (newUrl) {
                        this.mainItemURL = event.url;
                    }
                    else if (event.url == '/electrical-report') {
                        this.subItemURL = '/electrical-report';
                    }
                    else if (event.url == '/water-report') {
                        this.subItemURL = '/water-report';
                    }
                    else if (event.url.substring(1, 11) == 'electrical') {
                        this.mainItemURL = '/site-electrical';
                    }
                    else if (event.url.substring(1, 6) == 'water') {
                        this.mainItemURL = '/site-water';
                    }
                    else if (event.url.substring(1, 3) == 'ht') {
                        this.mainItemURL = '/ht-site-electrical';
                    }
                    else if (event.url.substring(1, 16) == 'map/electricity') {
                        this.subItemURL = '/map/electricity/main-map';
                    }
                    else if (event.url.substring(1, 10) == 'map/water') {
                        this.subItemURL = '/map/water/main-map';
                    }
                    else {
                        this.subItemURL = event.url;
                    }
                }
            });
        });
    }
    onMainItemSelected(item) {
        this.subItemURL = '';
        if (item != '#') {
            this.mainItemURL = item;
        }
    }
    onSubItemSelected(item) {
        this.mainItemURL = '';
        if (item != '#') {
            this.subItemURL = item;
        }
    }
    toggleSideBar() {
        this.headerService.toggleSideBar();
    }
    showProgress(item) {
        switch (item) {
            default:
                return item;
        }
    }
    openVersionModel() {
        const modal = this.modalService.open(_version_version_component__WEBPACK_IMPORTED_MODULE_6__["VersionComponent"], { size: 'lg', scrollable: true });
        modal.componentInstance.title = "Locations";
    }
};
SideBarComponent.ctorParameters = () => [
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_7__["InitialService"] },
    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_7__["InitialService"] },
    { type: _services_header_service__WEBPACK_IMPORTED_MODULE_4__["HeaderService"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_5__["NgbModal"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }
];
SideBarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-side-bar',
        template: __webpack_require__(/*! raw-loader!./side-bar.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/side-bar/side-bar.component.html"),
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].None,
        styles: [__webpack_require__(/*! ./side-bar.component.scss */ "./app/widgets/side-bar/side-bar.component.scss")]
    })
], SideBarComponent);



/***/ }),

/***/ "./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.scss":
/*!****************************************************************************!*\
  !*** ./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvc3RhY2tlZGNvbHVtbjNkbGluZS9zdGFja2VkY29sdW1uM2RsaW5lLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.ts":
/*!**************************************************************************!*\
  !*** ./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.ts ***!
  \**************************************************************************/
/*! exports provided: Stackedcolumn3dlineComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Stackedcolumn3dlineComponent", function() { return Stackedcolumn3dlineComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let Stackedcolumn3dlineComponent = class Stackedcolumn3dlineComponent {
    constructor() {
        this.dataSource = [];
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], Stackedcolumn3dlineComponent.prototype, "dataSource", void 0);
Stackedcolumn3dlineComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-stackedcolumn3dline',
        template: __webpack_require__(/*! raw-loader!./stackedcolumn3dline.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./stackedcolumn3dline.component.scss */ "./app/widgets/stackedcolumn3dline/stackedcolumn3dline.component.scss")]
    })
], Stackedcolumn3dlineComponent);



/***/ }),

/***/ "./app/widgets/substation-navigator/substation-navigator.component.scss":
/*!******************************************************************************!*\
  !*** ./app/widgets/substation-navigator/substation-navigator.component.scss ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\n.item {\n  border-left: 2px solid #354958;\n}\n\n.item:hover {\n  background-color: #3c617d;\n  border-left: 2px solid #007bff;\n}\n\n.top-level {\n  padding-left: 0rem;\n  background-color: #2f4251;\n}\n\n.second-level {\n  padding-left: 2.5rem;\n}\n\n.third-level {\n  padding-left: 4.5rem;\n}\n\n.active-item {\n  cursor: pointer;\n  background-color: #3c617d;\n  border-left: 4px solid #007bff;\n  border-bottom: 1px solid #536b7c;\n}\n\n.active-item:hover {\n  border-left: 8px solid #007bff;\n}\n\n.app-navigator .chart-card-header {\n  background-color: #22303c;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy9zdWJzdGF0aW9uLW5hdmlnYXRvci9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFxzdWJzdGF0aW9uLW5hdmlnYXRvclxcc3Vic3RhdGlvbi1uYXZpZ2F0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvc3Vic3RhdGlvbi1uYXZpZ2F0b3Ivc3Vic3RhdGlvbi1uYXZpZ2F0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvc3Vic3RhdGlvbi1uYXZpZ2F0b3IvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNJLDhCQUFBO0FER0o7O0FDQUE7RUFDSSx5QkFBQTtFQUNBLDhCQUFBO0FER0o7O0FDQUE7RUFDSSxrQkFBQTtFQUNBLHlCRlBTO0FDVWI7O0FDQUE7RUFDSSxvQkFBQTtBREdKOztBQ0FBO0VBQ0ksb0JBQUE7QURHSjs7QUNBQTtFQUNFLGVBQUE7RUFDQSx5QkZuQlc7RUVvQlgsOEJBQUE7RUFDQSxnQ0FBQTtBREdGOztBQ0FBO0VBQ0UsOEJBQUE7QURHRjs7QUNDSTtFQUNJLHlCQUFBO0FERVIiLCJmaWxlIjoic3JjL2FwcC93aWRnZXRzL3N1YnN0YXRpb24tbmF2aWdhdG9yL3N1YnN0YXRpb24tbmF2aWdhdG9yLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWF0ZXJpYWwgY29sb3JzXHJcbiRiZy1jb2xvcjogIzFlMWYyMTtcclxuJGhlYWRlci1jb2xvcjogIzI5Mzk0NjtcclxuJGJnLWNhcmQ6ICMyNDJjMzM7XHJcbiRiZy1wcmltYXJ5OiAjMDA3YmZmO1xyXG4kYmctc2Vjb25kYXJ5OiAjMjkzOTQ2O1xyXG4kYmctb3B0LW9uZTogIzJmNDI1MTtcclxuJGJnLW9wdC10d286ICMzYzYxN2Q7XHJcbiRiZy1vcHQtZm91cjogIzM2NTU2ZjtcclxuJGJnLXRhYmxlLWhlYWRlcjogIzFjMjMyODtcclxuJGJnLXRhYmxlLWJvZHk6ICMzNDNmNDk7XHJcblxyXG4vLyBib3JkZXIgY29sb3JzXHJcbiRjb2xvci1ib3JkZXItcHJpbWFyeTogIzM1NDk1ODtcclxuXHJcbi8vIGNvbW1vbiBjb2xvcnNcclxuJHRyYW5zcGFyZW50OiB0cmFuc3BhcmVudDtcclxuXHJcbi8vIHR5cG8gY29sb3JzXHJcbiRmb250LWNvbG9yOiAjZmZmZmZmO1xyXG4kY29sb3ItZm9udC1zZWNvbmRhcnk6ICNmZmY7XHJcbiRjb2xvci1mb250LXRlcm5hcnk6ICNiOWJhYmI7XHJcbiRmb250LWRhbmdlcjogI2U3NDgzYztcclxuJGZvbnQtbmV1dHJhbDogIzExYjcyYztcclxuJGZvbnQtd2FybmluZzogI2U3OGMzYztcclxuXHJcbi8vIHR5cG8gc2l6ZXNcclxuJHNpemUtZm9udC1wcmltYXJ5OiAuOHJlbTtcclxuJHNpemUtZm9udC1zZWNvbmRhcnk6IDFyZW07XHJcbiRzaXplLWZvbnQtbGFyZ2U6IDNyZW07XHJcbiRzaXplLWZvbnQtaGVhZGVyLWJ0bjogMC45cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXI6IDEuN3JlbTtcclxuJHNpemUtZm9udC1wb2ludGVyLXVuaXQ6IDEuNXJlbTtcclxuJHNpemUtZm9udC1taWQ6IDIuMXJlbTtcclxuJHNpemUtZm9udC1sb3c6IDAuOHJlbTtcclxuXHJcbi8vIGNvbXBvbmVudCBzaXplc1xyXG4kaGVhZGVyLWhlaWdodDogNzBweDtcclxuJGhlaWdodC1jaGFydC1oZWFkZXI6IDQ3Ljc4cHg7XHJcbiRzaWRlLWJhci13aWR0aDogMjUwcHg7XHJcblxyXG4uZGF0ZS1waWNrZXItaW5wdXR7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iLCIuZGF0ZS1waWNrZXItaW5wdXQge1xuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLml0ZW0ge1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICMzNTQ5NTg7XG59XG5cbi5pdGVtOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNjNjE3ZDtcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjMDA3YmZmO1xufVxuXG4udG9wLWxldmVsIHtcbiAgcGFkZGluZy1sZWZ0OiAwcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmY0MjUxO1xufVxuXG4uc2Vjb25kLWxldmVsIHtcbiAgcGFkZGluZy1sZWZ0OiAyLjVyZW07XG59XG5cbi50aGlyZC1sZXZlbCB7XG4gIHBhZGRpbmctbGVmdDogNC41cmVtO1xufVxuXG4uYWN0aXZlLWl0ZW0ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzYzYxN2Q7XG4gIGJvcmRlci1sZWZ0OiA0cHggc29saWQgIzAwN2JmZjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1MzZiN2M7XG59XG5cbi5hY3RpdmUtaXRlbTpob3ZlciB7XG4gIGJvcmRlci1sZWZ0OiA4cHggc29saWQgIzAwN2JmZjtcbn1cblxuLmFwcC1uYXZpZ2F0b3IgLmNoYXJ0LWNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIyMzAzYztcbn0iLCJAaW1wb3J0ICdzcmMvc2Nzcy9fdmFyaWFibGVzLnNjc3MnO1xyXG5cclxuLml0ZW17XHJcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICRjb2xvci1ib3JkZXItcHJpbWFyeTtcclxufVxyXG5cclxuLml0ZW06aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmctb3B0LXR3bztcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgJGJnLXByaW1hcnk7XHJcbn1cclxuXHJcbi50b3AtbGV2ZWx7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDByZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmctb3B0LW9uZTtcclxufVxyXG5cclxuLnNlY29uZC1sZXZlbHtcclxuICAgIHBhZGRpbmctbGVmdDogMi41cmVtO1xyXG59XHJcblxyXG4udGhpcmQtbGV2ZWx7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDQuNXJlbTtcclxufVxyXG5cclxuLmFjdGl2ZS1pdGVtIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJnLW9wdC10d287XHJcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAkYmctcHJpbWFyeTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzUzNmI3YztcclxufVxyXG5cclxuLmFjdGl2ZS1pdGVtOmhvdmVyIHtcclxuICBib3JkZXItbGVmdDogOHB4IHNvbGlkICRiZy1wcmltYXJ5O1xyXG59XHJcblxyXG4uYXBwLW5hdmlnYXRvcntcclxuICAgIC5jaGFydC1jYXJkLWhlYWRlcntcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjIzMDNjO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbiJdfQ== */"

/***/ }),

/***/ "./app/widgets/substation-navigator/substation-navigator.component.ts":
/*!****************************************************************************!*\
  !*** ./app/widgets/substation-navigator/substation-navigator.component.ts ***!
  \****************************************************************************/
/*! exports provided: SubstationNavigatorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubstationNavigatorComponent", function() { return SubstationNavigatorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "../node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _app_services_header_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var _app_services_http_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../..//app/services/http.service */ "./app/services/http.service.ts");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");







let SubstationNavigatorComponent = class SubstationNavigatorComponent {
    constructor(router, modalService, headerService, httpService, configs) {
        this.router = router;
        this.modalService = modalService;
        this.headerService = headerService;
        this.httpService = httpService;
        this.configs = configs;
        this.getHtLoops();
    }
    ngOnInit() {
        this.siteId = this.configs.siteConfigurations.siteId;
        this.siteName = this.configs.siteConfigurations.siteName;
    }
    getHtLoops() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            this.httpService.get(this.configs.endPoints['ht-loops'], {
                siteId: 1
            }).subscribe(data => {
                this.loops = data;
            }, error => {
                this.loops = null;
            });
        });
    }
    navigate(loopId, loopName) {
        this.router.navigateByUrl(`/ht-electrical-loop/${loopId}`);
        this.headerService.fireNavigationChanged();
        this.headerService.setItem(loopName);
        this.modalService.dismissAll();
    }
};
SubstationNavigatorComponent.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__["NgbModal"] },
    { type: _app_services_header_service__WEBPACK_IMPORTED_MODULE_4__["HeaderService"] },
    { type: _app_services_http_service__WEBPACK_IMPORTED_MODULE_5__["HttpService"] },
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_6__["InitialService"] }
];
SubstationNavigatorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-substation-navigator',
        template: __webpack_require__(/*! raw-loader!./substation-navigator.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/substation-navigator/substation-navigator.component.html"),
        styles: [__webpack_require__(/*! ./substation-navigator.component.scss */ "./app/widgets/substation-navigator/substation-navigator.component.scss")]
    })
], SubstationNavigatorComponent);



/***/ }),

/***/ "./app/widgets/table/table.component.scss":
/*!************************************************!*\
  !*** ./app/widgets/table/table.component.scss ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".date-picker-input {\n  border-style: none !important;\n}\n\ntable {\n  border: 1px solid #2f4251;\n  border-radius: 3px;\n  table-layout: fixed !important;\n}\n\ntable th {\n  background-color: #2f4251;\n  font-weight: 400;\n  min-height: 100%;\n}\n\n.scroll-tbody {\n  overflow-y: auto;\n}\n\n@media all and (min-width: 1200px) {\n  .table-width {\n    width: 100%;\n  }\n}\n\n@media all and (max-width: 1199px) {\n  .table-width {\n    width: 1140px;\n  }\n\n  .table-content {\n    width: 100%;\n    overflow-x: auto;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy90YWJsZS9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFx0YWJsZVxcdGFibGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvdGFibGUvdGFibGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvdGFibGUvRDpcXFNFUlZFUlxcdW1zX29sZC9zdGRpbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q0E7RUFDRSw2QkFBQTtBQ3hDRjs7QUNBQTtFQUNJLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSw4QkFBQTtBREdKOztBQ0ZJO0VBQ0kseUJGREs7RUVFTCxnQkFBQTtFQUNBLGdCQUFBO0FESVI7O0FDQUE7RUFDRSxnQkFBQTtBREdGOztBQ0FBO0VBQ0U7SUFDRSxXQUFBO0VER0Y7QUFDRjs7QUNBQTtFQUNFO0lBQ0UsYUFBQTtFREVGOztFQ0NBO0lBQ0UsV0FBQTtJQUNBLGdCQUFBO0VERUY7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvdGFibGUvdGFibGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtYXRlcmlhbCBjb2xvcnNcclxuJGJnLWNvbG9yOiAjMWUxZjIxO1xyXG4kaGVhZGVyLWNvbG9yOiAjMjkzOTQ2O1xyXG4kYmctY2FyZDogIzI0MmMzMztcclxuJGJnLXByaW1hcnk6ICMwMDdiZmY7XHJcbiRiZy1zZWNvbmRhcnk6ICMyOTM5NDY7XHJcbiRiZy1vcHQtb25lOiAjMmY0MjUxO1xyXG4kYmctb3B0LXR3bzogIzNjNjE3ZDtcclxuJGJnLW9wdC1mb3VyOiAjMzY1NTZmO1xyXG4kYmctdGFibGUtaGVhZGVyOiAjMWMyMzI4O1xyXG4kYmctdGFibGUtYm9keTogIzM0M2Y0OTtcclxuXHJcbi8vIGJvcmRlciBjb2xvcnNcclxuJGNvbG9yLWJvcmRlci1wcmltYXJ5OiAjMzU0OTU4O1xyXG5cclxuLy8gY29tbW9uIGNvbG9yc1xyXG4kdHJhbnNwYXJlbnQ6IHRyYW5zcGFyZW50O1xyXG5cclxuLy8gdHlwbyBjb2xvcnNcclxuJGZvbnQtY29sb3I6ICNmZmZmZmY7XHJcbiRjb2xvci1mb250LXNlY29uZGFyeTogI2ZmZjtcclxuJGNvbG9yLWZvbnQtdGVybmFyeTogI2I5YmFiYjtcclxuJGZvbnQtZGFuZ2VyOiAjZTc0ODNjO1xyXG4kZm9udC1uZXV0cmFsOiAjMTFiNzJjO1xyXG4kZm9udC13YXJuaW5nOiAjZTc4YzNjO1xyXG5cclxuLy8gdHlwbyBzaXplc1xyXG4kc2l6ZS1mb250LXByaW1hcnk6IC44cmVtO1xyXG4kc2l6ZS1mb250LXNlY29uZGFyeTogMXJlbTtcclxuJHNpemUtZm9udC1sYXJnZTogM3JlbTtcclxuJHNpemUtZm9udC1oZWFkZXItYnRuOiAwLjlyZW07XHJcbiRzaXplLWZvbnQtcG9pbnRlcjogMS43cmVtO1xyXG4kc2l6ZS1mb250LXBvaW50ZXItdW5pdDogMS41cmVtO1xyXG4kc2l6ZS1mb250LW1pZDogMi4xcmVtO1xyXG4kc2l6ZS1mb250LWxvdzogMC44cmVtO1xyXG5cclxuLy8gY29tcG9uZW50IHNpemVzXHJcbiRoZWFkZXItaGVpZ2h0OiA3MHB4O1xyXG4kaGVpZ2h0LWNoYXJ0LWhlYWRlcjogNDcuNzhweDtcclxuJHNpZGUtYmFyLXdpZHRoOiAyNTBweDtcclxuXHJcbi5kYXRlLXBpY2tlci1pbnB1dHtcclxuICBib3JkZXItc3R5bGU6IG5vbmUgIWltcG9ydGFudDtcclxufSIsIi5kYXRlLXBpY2tlci1pbnB1dCB7XG4gIGJvcmRlci1zdHlsZTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG50YWJsZSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMyZjQyNTE7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgdGFibGUtbGF5b3V0OiBmaXhlZCAhaW1wb3J0YW50O1xufVxudGFibGUgdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmY0MjUxO1xuICBmb250LXdlaWdodDogNDAwO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xufVxuXG4uc2Nyb2xsLXRib2R5IHtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC50YWJsZS13aWR0aCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDExOTlweCkge1xuICAudGFibGUtd2lkdGgge1xuICAgIHdpZHRoOiAxMTQwcHg7XG4gIH1cblxuICAudGFibGUtY29udGVudCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgfVxufSIsIkBpbXBvcnQgJ3NyYy9zY3NzL192YXJpYWJsZXMuc2Nzcyc7XHJcblxyXG50YWJsZXtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRiZy1vcHQtb25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZCAhaW1wb3J0YW50O1xyXG4gICAgdGh7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJnLW9wdC1vbmU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2Nyb2xsLXRib2R5IHtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIHtcclxuICAudGFibGUtd2lkdGh7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDExOTlweCkge1xyXG4gIC50YWJsZS13aWR0aHtcclxuICAgIHdpZHRoOiAxMTQwcHg7XHJcbiAgfVxyXG5cclxuICAudGFibGUtY29udGVudHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb3ZlcmZsb3cteDogYXV0bztcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */"

/***/ }),

/***/ "./app/widgets/table/table.component.ts":
/*!**********************************************!*\
  !*** ./app/widgets/table/table.component.ts ***!
  \**********************************************/
/*! exports provided: TableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TableComponent", function() { return TableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");



let TableComponent = class TableComponent {
    constructor(config) {
        this.config = config;
        this.tableData = { data: null, columns: [] };
        this.isSite = false;
    }
    getValue(data) {
        if (!isNaN(data)) {
            if (Number(data) === data && data % 1 === 0) {
                return data;
            }
            else if (data === null) {
                return 'N/A';
            }
            else {
                return data.toFixed(this.config.siteConfigurations.decimalNumPrecision);
            }
        }
        else {
            return data;
        }
    }
    ngOnInit() { }
};
TableComponent.ctorParameters = () => [
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TableComponent.prototype, "tableData", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TableComponent.prototype, "isSite", void 0);
TableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-table',
        template: __webpack_require__(/*! raw-loader!./table.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/table/table.component.html"),
        styles: [__webpack_require__(/*! ./table.component.scss */ "./app/widgets/table/table.component.scss")]
    })
], TableComponent);



/***/ }),

/***/ "./app/widgets/tariff/tariff.component.scss":
/*!**************************************************!*\
  !*** ./app/widgets/tariff/tariff.component.scss ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".info {\n  color: #9c9c9c;\n  vertical-align: middle;\n}\n\ninput[type=checkbox] {\n  transform: scale(1.5);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy90YXJpZmYvRDpcXFNFUlZFUlxcdW1zX29sZC9zcmNcXGFwcFxcd2lkZ2V0c1xcdGFyaWZmXFx0YXJpZmYuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvdGFyaWZmL3RhcmlmZi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7RUFDQSxzQkFBQTtBQ0NKOztBREVBO0VBTUUscUJBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvdGFyaWZmL3RhcmlmZi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbmZvIHtcclxuICAgIGNvbG9yOiAjOWM5YzljO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1jaGVja2JveF1cclxue1xyXG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuNSk7XHJcbiAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEuNSk7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuNSk7XHJcbiAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxLjUpO1xyXG4gIHRyYW5zZm9ybTogc2NhbGUoMS41KTtcclxufSIsIi5pbmZvIHtcbiAgY29sb3I6ICM5YzljOWM7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbmlucHV0W3R5cGU9Y2hlY2tib3hdIHtcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMS41KTtcbiAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEuNSk7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjUpO1xuICAtby10cmFuc2Zvcm06IHNjYWxlKDEuNSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS41KTtcbn0iXX0= */"

/***/ }),

/***/ "./app/widgets/tariff/tariff.component.ts":
/*!************************************************!*\
  !*** ./app/widgets/tariff/tariff.component.ts ***!
  \************************************************/
/*! exports provided: TariffComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TariffComponent", function() { return TariffComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_tariff_tariff_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/tariff/tariff.service */ "./app/services/tariff/tariff.service.ts");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sweetalert2 */ "../node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_3__);




let TariffComponent = class TariffComponent {
    constructor(tariffService) {
        this.tariffService = tariffService;
        this.currentTariff = 0;
        this.currentEffectiveFrom = new Date();
        this.tariff = 0;
        this.effectiveFrom = new Date();
        this.isEdit = false;
        this.siteId = 1;
        this.buildingGroupId = 0;
        this.buildingId = 0;
    }
    ngOnInit() {
    }
    updateTariff() {
        sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire({
            title: '',
            text: 'Are you sure you want to update?',
            icon: 'warning',
            confirmButtonText: 'Yes',
            showCancelButton: true
        }).then(result => {
            if (result.isConfirmed) {
                let tariff = {
                    siteId: this.siteId,
                    type: this.type,
                    buildingGroupId: this.buildingGroupId,
                    buildingId: this.buildingId,
                    rate: this.tariff
                };
                this.tariffService.updateTariff(tariff).then(res => {
                    if (res == true) {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire('', 'Successfully updated Tariff!', 'success');
                    }
                    else {
                        sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire('', 'Something went wrong. Please try again later!', 'error');
                    }
                }).catch(error => {
                    sweetalert2__WEBPACK_IMPORTED_MODULE_3___default.a.fire('', 'Something went wrong. Please try again later!', 'error');
                });
            }
        });
    }
};
TariffComponent.ctorParameters = () => [
    { type: src_app_services_tariff_tariff_service__WEBPACK_IMPORTED_MODULE_2__["TariffService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TariffComponent.prototype, "type", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TariffComponent.prototype, "buildingGroupId", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TariffComponent.prototype, "buildingId", void 0);
TariffComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'ums-tariff',
        template: __webpack_require__(/*! raw-loader!./tariff.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/tariff/tariff.component.html"),
        styles: [__webpack_require__(/*! ./tariff.component.scss */ "./app/widgets/tariff/tariff.component.scss")]
    })
], TariffComponent);



/***/ }),

/***/ "./app/widgets/toggle-button/toggle-button.component.scss":
/*!****************************************************************!*\
  !*** ./app/widgets/toggle-button/toggle-button.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host {\n  display: block;\n  position: relative;\n  width: 44px;\n  height: 20px;\n}\n\ninput[type=checkbox] {\n  display: none;\n}\n\n.toggle-button-switch {\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 16px;\n  height: 16px;\n  background-color: #fff;\n  border-radius: 100%;\n  cursor: pointer;\n  z-index: 100;\n  box-shadow: 0px 0px 2px 1px rgba(140, 140, 140, 0.75);\n  transition: left 0.3s;\n}\n\n.toggle-button-text {\n  overflow: hidden;\n  background-color: #C6C6C6;\n  border-radius: 25px;\n  box-shadow: 2px 2px 5px 0 rgba(50, 50, 50, 0.75);\n  transition: background-color 0.3s;\n  width: 44px;\n  cursor: pointer;\n}\n\n.toggle-button-text-on,\n.toggle-button-text-off {\n  float: left;\n  width: 50%;\n  height: 100%;\n  line-height: 20px;\n  font-family: Lato, sans-serif;\n  font-weight: bold;\n  color: #C6C6C6;\n  text-align: center;\n  transition: color 0.3s;\n}\n\ninput[type=checkbox]:checked ~ .toggle-button-switch {\n  left: 26px;\n  box-shadow: 0px 0px 2px 1px rgba(100, 100, 100, 0.75);\n}\n\ninput[type=checkbox]:checked ~ .toggle-button-text {\n  background-color: #007bff;\n}\n\ninput[type=checkbox]:checked ~ .toggle-button-text .toggle-button-text-on,\ninput[type=checkbox]:checked ~ .toggle-button-text .toggle-button-text-off {\n  color: #007bff;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy90b2dnbGUtYnV0dG9uL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXHRvZ2dsZS1idXR0b25cXHRvZ2dsZS1idXR0b24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvdG9nZ2xlLWJ1dHRvbi90b2dnbGUtYnV0dG9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFRTtFQUNFLGFBQUE7QUNDSjs7QURFRTtFQUNFLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLHFEQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFRTtFQUNFLGdCQUFBO0VBQ0EseUJBQUE7RUFDQSxtQkFBQTtFQUNBLGdEQUFBO0VBQ0EsaUNBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVFOztFQUVFLFdBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsNkJBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0FDQ0o7O0FERUU7RUFDRSxVQUFBO0VBQ0EscURBQUE7QUNDSjs7QURFRTtFQUNFLHlCQUFBO0FDQ0o7O0FEQUk7O0VBRUksY0FBQTtBQ0VSIiwiZmlsZSI6InNyYy9hcHAvd2lkZ2V0cy90b2dnbGUtYnV0dG9uL3RvZ2dsZS1idXR0b24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiA0NHB4O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xyXG4gICAgZGlzcGxheTogbm9uZTsgXHJcbiAgfVxyXG5cclxuICAudG9nZ2xlLWJ1dHRvbi1zd2l0Y2gge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAycHg7XHJcbiAgICBsZWZ0OiAycHg7XHJcbiAgICB3aWR0aDogMTZweDtcclxuICAgIGhlaWdodDogMTZweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAycHggMXB4IHJnYmEoMTQwLCAxNDAsIDE0MCwgMC43NSk7XHJcbiAgICB0cmFuc2l0aW9uOiBsZWZ0IDAuM3M7XHJcbiAgfVxyXG5cclxuICAudG9nZ2xlLWJ1dHRvbi10ZXh0IHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZDNkM2O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcclxuICAgIGJveC1zaGFkb3c6IDJweCAycHggNXB4IDAgcmdiYSg1MCwgNTAsIDUwLCAwLjc1KTtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxuICAgIHdpZHRoOiA0NHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuXHJcbiAgLnRvZ2dsZS1idXR0b24tdGV4dC1vbixcclxuICAudG9nZ2xlLWJ1dHRvbi10ZXh0LW9mZiB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDogMjBweDtcclxuICAgIGZvbnQtZmFtaWx5OiBMYXRvLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBjb2xvcjogI0M2QzZDNjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3M7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCB+IC50b2dnbGUtYnV0dG9uLXN3aXRjaCB7XHJcbiAgICBsZWZ0OiAyNnB4O1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAycHggMXB4IHJnYmEoMTAwLCAxMDAsIDEwMCwgMC43NSk7XHJcbiAgfVxyXG5cclxuICBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCB+IC50b2dnbGUtYnV0dG9uLXRleHQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIC50b2dnbGUtYnV0dG9uLXRleHQtb24sXHJcbiAgICAudG9nZ2xlLWJ1dHRvbi10ZXh0LW9mZiB7XHJcbiAgICAgICAgY29sb3I6ICMwMDdiZmY7XHJcbiAgICB9XHJcbiAgfSIsIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDQ0cHg7XG4gIGhlaWdodDogMjBweDtcbn1cblxuaW5wdXRbdHlwZT1jaGVja2JveF0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4udG9nZ2xlLWJ1dHRvbi1zd2l0Y2gge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMnB4O1xuICBsZWZ0OiAycHg7XG4gIHdpZHRoOiAxNnB4O1xuICBoZWlnaHQ6IDE2cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgei1pbmRleDogMTAwO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDJweCAxcHggcmdiYSgxNDAsIDE0MCwgMTQwLCAwLjc1KTtcbiAgdHJhbnNpdGlvbjogbGVmdCAwLjNzO1xufVxuXG4udG9nZ2xlLWJ1dHRvbi10ZXh0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0M2QzZDNjtcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgYm94LXNoYWRvdzogMnB4IDJweCA1cHggMCByZ2JhKDUwLCA1MCwgNTAsIDAuNzUpO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG4gIHdpZHRoOiA0NHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi50b2dnbGUtYnV0dG9uLXRleHQtb24sXG4udG9nZ2xlLWJ1dHRvbi10ZXh0LW9mZiB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBmb250LWZhbWlseTogTGF0bywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjQzZDNkM2O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3M7XG59XG5cbmlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQgfiAudG9nZ2xlLWJ1dHRvbi1zd2l0Y2gge1xuICBsZWZ0OiAyNnB4O1xuICBib3gtc2hhZG93OiAwcHggMHB4IDJweCAxcHggcmdiYSgxMDAsIDEwMCwgMTAwLCAwLjc1KTtcbn1cblxuaW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZCB+IC50b2dnbGUtYnV0dG9uLXRleHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xufVxuaW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZCB+IC50b2dnbGUtYnV0dG9uLXRleHQgLnRvZ2dsZS1idXR0b24tdGV4dC1vbixcbmlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQgfiAudG9nZ2xlLWJ1dHRvbi10ZXh0IC50b2dnbGUtYnV0dG9uLXRleHQtb2ZmIHtcbiAgY29sb3I6ICMwMDdiZmY7XG59Il19 */"

/***/ }),

/***/ "./app/widgets/toggle-button/toggle-button.component.ts":
/*!**************************************************************!*\
  !*** ./app/widgets/toggle-button/toggle-button.component.ts ***!
  \**************************************************************/
/*! exports provided: ToggleButtonComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToggleButtonComponent", function() { return ToggleButtonComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let ToggleButtonComponent = class ToggleButtonComponent {
    constructor() {
        this.switch = false;
        this.switchChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.key = Math.random();
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ToggleButtonComponent.prototype, "switch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ToggleButtonComponent.prototype, "switchChange", void 0);
ToggleButtonComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-toggle-button',
        template: __webpack_require__(/*! raw-loader!./toggle-button.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/toggle-button/toggle-button.component.html"),
        styles: [__webpack_require__(/*! ./toggle-button.component.scss */ "./app/widgets/toggle-button/toggle-button.component.scss")]
    })
], ToggleButtonComponent);



/***/ }),

/***/ "./app/widgets/toggle-switch/toggle-switch.component.scss":
/*!****************************************************************!*\
  !*** ./app/widgets/toggle-switch/toggle-switch.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".switch {\n  position: relative;\n  display: inline-block;\n  width: 35px;\n  height: 15px;\n  margin: 0px 5px 0 5px;\n}\n\n.switch input {\n  display: none;\n  background-color: #ccc;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  transition: 0.4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 20px;\n  width: 20px;\n  left: 0px;\n  right: 0px;\n  bottom: -3px;\n  background-color: #151d24;\n  transition: 0.4s;\n}\n\ninput:checked + .slider:before {\n  transform: translateX(20px);\n}\n\n/* Rounded sliders */\n\n.slider.round {\n  border-radius: 20px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n\n.label-text {\n  margin: 4px 5px 5px 5px;\n  font-size: 13px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy90b2dnbGUtc3dpdGNoL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXHRvZ2dsZS1zd2l0Y2hcXHRvZ2dsZS1zd2l0Y2guY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvdG9nZ2xlLXN3aXRjaC90b2dnbGUtc3dpdGNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EscUJBQUE7QUNDRjs7QURFQTtFQUFlLGFBQUE7RUFBYyxzQkFBQTtBQ0c3Qjs7QUREQTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLFFBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQyxzQkFBQTtFQUVELGdCQUFBO0FDSUY7O0FEREE7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFNBQUE7RUFDQyxVQUFBO0VBQ0QsWUFBQTtFQUNBLHlCQUFBO0VBRUEsZ0JBQUE7QUNJRjs7QUREQTtFQUdFLDJCQUFBO0FDSUY7O0FEREEsb0JBQUE7O0FBQ0E7RUFDRSxtQkFBQTtBQ0lGOztBRERBO0VBQ0ksa0JBQUE7QUNJSjs7QUREQTtFQUNFLHVCQUFBO0VBQ0EsZUFBQTtBQ0lGIiwiZmlsZSI6InNyYy9hcHAvd2lkZ2V0cy90b2dnbGUtc3dpdGNoL3RvZ2dsZS1zd2l0Y2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3dpdGNoIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHdpZHRoOiAzNXB4O1xyXG4gIGhlaWdodDogMTVweDtcclxuICBtYXJnaW46IDBweCA1cHggMCA1cHg7XHJcbn1cclxuXHJcbi5zd2l0Y2ggaW5wdXQge2Rpc3BsYXk6bm9uZTsgYmFja2dyb3VuZC1jb2xvcjogI2NjYzt9XHJcblxyXG4uc2xpZGVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRvcDogMHB4O1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLjRzO1xyXG4gIHRyYW5zaXRpb246IC40cztcclxufVxyXG5cclxuLnNsaWRlcjpiZWZvcmUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGhlaWdodDogMjBweDtcclxuICB3aWR0aDogMjBweDtcclxuICBsZWZ0OiAwcHg7XHJcbiAgIHJpZ2h0OiAwcHg7XHJcbiAgYm90dG9tOiAtM3B4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxNTFkMjQ7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7XHJcbiAgdHJhbnNpdGlvbjogLjRzO1xyXG59XHJcblxyXG5pbnB1dDpjaGVja2VkICsgLnNsaWRlcjpiZWZvcmUge1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xyXG59XHJcblxyXG4vKiBSb3VuZGVkIHNsaWRlcnMgKi9cclxuLnNsaWRlci5yb3VuZCB7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxufVxyXG5cclxuLnNsaWRlci5yb3VuZDpiZWZvcmUge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIH1cclxuXHJcbi5sYWJlbC10ZXh0e1xyXG4gIG1hcmdpbjogNHB4IDVweCA1cHggNXB4O1xyXG4gIGZvbnQtc2l6ZTogMTNweDtcclxufVxyXG4iLCIuc3dpdGNoIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAzNXB4O1xuICBoZWlnaHQ6IDE1cHg7XG4gIG1hcmdpbjogMHB4IDVweCAwIDVweDtcbn1cblxuLnN3aXRjaCBpbnB1dCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XG59XG5cbi5zbGlkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogMC40cztcbiAgdHJhbnNpdGlvbjogMC40cztcbn1cblxuLnNsaWRlcjpiZWZvcmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMjBweDtcbiAgd2lkdGg6IDIwcHg7XG4gIGxlZnQ6IDBweDtcbiAgcmlnaHQ6IDBweDtcbiAgYm90dG9tOiAtM3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxZDI0O1xuICAtd2Via2l0LXRyYW5zaXRpb246IDAuNHM7XG4gIHRyYW5zaXRpb246IDAuNHM7XG59XG5cbmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XG59XG5cbi8qIFJvdW5kZWQgc2xpZGVycyAqL1xuLnNsaWRlci5yb3VuZCB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG5cbi5zbGlkZXIucm91bmQ6YmVmb3JlIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4ubGFiZWwtdGV4dCB7XG4gIG1hcmdpbjogNHB4IDVweCA1cHggNXB4O1xuICBmb250LXNpemU6IDEzcHg7XG59Il19 */"

/***/ }),

/***/ "./app/widgets/toggle-switch/toggle-switch.component.ts":
/*!**************************************************************!*\
  !*** ./app/widgets/toggle-switch/toggle-switch.component.ts ***!
  \**************************************************************/
/*! exports provided: ToggleSwitchComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToggleSwitchComponent", function() { return ToggleSwitchComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let ToggleSwitchComponent = class ToggleSwitchComponent {
    constructor() {
        this.toggle = false;
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.size = "lg";
        this.disabled = false;
    }
    ngOnInit() {
    }
    toggleChanged() {
        this.onChange.emit(this.toggle);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()
], ToggleSwitchComponent.prototype, "onChange", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ToggleSwitchComponent.prototype, "size", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ToggleSwitchComponent.prototype, "disabled", void 0);
ToggleSwitchComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-toggle-switch',
        template: __webpack_require__(/*! raw-loader!./toggle-switch.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/toggle-switch/toggle-switch.component.html"),
        styles: [__webpack_require__(/*! ./toggle-switch.component.scss */ "./app/widgets/toggle-switch/toggle-switch.component.scss")]
    })
], ToggleSwitchComponent);



/***/ }),

/***/ "./app/widgets/total-comsumption/total-comsumption.component.scss":
/*!************************************************************************!*\
  !*** ./app/widgets/total-comsumption/total-comsumption.component.scss ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".total-consumption {\n  margin-bottom: 15px;\n}\n.total-consumption .label-total {\n  margin-left: 15px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy90b3RhbC1jb21zdW1wdGlvbi9EOlxcU0VSVkVSXFx1bXNfb2xkL3NyY1xcYXBwXFx3aWRnZXRzXFx0b3RhbC1jb21zdW1wdGlvblxcdG90YWwtY29tc3VtcHRpb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvdG90YWwtY29tc3VtcHRpb24vdG90YWwtY29tc3VtcHRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxtQkFBQTtBQ0FGO0FESUU7RUFDRSxpQkFBQTtBQ0ZKIiwiZmlsZSI6InNyYy9hcHAvd2lkZ2V0cy90b3RhbC1jb21zdW1wdGlvbi90b3RhbC1jb21zdW1wdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b3RhbC1jb25zdW1wdGlvbntcclxuICAvLyBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAubGFiZWx7XHJcblxyXG4gIH1cclxuICAubGFiZWwtdG90YWx7XHJcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuICB9XHJcbn0iLCIudG90YWwtY29uc3VtcHRpb24ge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuLnRvdGFsLWNvbnN1bXB0aW9uIC5sYWJlbC10b3RhbCB7XG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/total-comsumption/total-comsumption.component.ts":
/*!**********************************************************************!*\
  !*** ./app/widgets/total-comsumption/total-comsumption.component.ts ***!
  \**********************************************************************/
/*! exports provided: TotalConsumptionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TotalConsumptionComponent", function() { return TotalConsumptionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/initial.service */ "./app/services/initial.service.ts");
/* harmony import */ var src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/enums/chart-color-map */ "./enums/chart-color-map.ts");
/* harmony import */ var src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/enums/chart-config-map */ "./enums/chart-config-map.ts");
/* harmony import */ var src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/util/ChartHelper */ "./util/ChartHelper.ts");







let TotalConsumptionComponent = class TotalConsumptionComponent {
    constructor(config) {
        this.config = config;
        this.value = "N/A";
        this.unit = "N/A";
        this.type = "N/A";
        this.suffix = '';
        this.color = null;
    }
    convertNumberAndSuffic(number) {
        if (this.value === null || this.value === undefined || this.value == 0) {
            this.value = 'N/A';
        }
        const { scalledNumber, suffix, unit } = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_5__["abbreviateNumber"])(number);
        if (!scalledNumber)
            return null;
        this.value = scalledNumber;
        this.unit = this.unit ? this.unit : 'kWh';
        const type = this.type ? this.type.toString().toLowerCase() : '';
        if (type == 'wh' || type == 'kwh' || type == 'kgco2' || type == 'kwhm2') {
            this.suffix = '';
            this.value = Object(src_util_ChartHelper__WEBPACK_IMPORTED_MODULE_5__["moneyFormat"])((number / 1000).toFixed(src_enums_chart_config_map__WEBPACK_IMPORTED_MODULE_4__["DECIMAL_MAP"].electricalTodayConsumption));
            this.color = this.color ? this.color : src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_3__["ChartColorMap"].electric.primary;
        }
        else {
            this.unit = this.unit;
            this.suffix = suffix;
            this.color = this.color ? this.color : src_enums_chart_color_map__WEBPACK_IMPORTED_MODULE_3__["ChartColorMap"].water.secondary;
        }
    }
    ngOnChanges(changes) {
        this.convertNumberAndSuffic(Number(this.value));
    }
    ngOnInit() {
        this.convertNumberAndSuffic(Number(this.value));
    }
};
TotalConsumptionComponent.ctorParameters = () => [
    { type: src_app_services_initial_service__WEBPACK_IMPORTED_MODULE_2__["InitialService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TotalConsumptionComponent.prototype, "value", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TotalConsumptionComponent.prototype, "unit", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TotalConsumptionComponent.prototype, "type", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TotalConsumptionComponent.prototype, "color", void 0);
TotalConsumptionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-total-comsumption',
        template: __webpack_require__(/*! raw-loader!./total-comsumption.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/total-comsumption/total-comsumption.component.html"),
        styles: [__webpack_require__(/*! ./total-comsumption.component.scss */ "./app/widgets/total-comsumption/total-comsumption.component.scss")]
    })
], TotalConsumptionComponent);



/***/ }),

/***/ "./app/widgets/trend/trend.component.scss":
/*!************************************************!*\
  !*** ./app/widgets/trend/trend.component.scss ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvdHJlbmQvdHJlbmQuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/widgets/trend/trend.component.ts":
/*!**********************************************!*\
  !*** ./app/widgets/trend/trend.component.ts ***!
  \**********************************************/
/*! exports provided: TrendComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrendComponent", function() { return TrendComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let TrendComponent = class TrendComponent {
    constructor() {
        this.dataSource = {};
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], TrendComponent.prototype, "dataSource", void 0);
TrendComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-trend',
        template: __webpack_require__(/*! raw-loader!./trend.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/trend/trend.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./trend.component.scss */ "./app/widgets/trend/trend.component.scss")]
    })
], TrendComponent);



/***/ }),

/***/ "./app/widgets/trend3d/trend3d.component.scss":
/*!****************************************************!*\
  !*** ./app/widgets/trend3d/trend3d.component.scss ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvdHJlbmQzZC90cmVuZDNkLmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/trend3d/trend3d.component.ts":
/*!**************************************************!*\
  !*** ./app/widgets/trend3d/trend3d.component.ts ***!
  \**************************************************/
/*! exports provided: Trend3dComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Trend3dComponent", function() { return Trend3dComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let Trend3dComponent = class Trend3dComponent {
    constructor() {
        this.dataSource = {};
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], Trend3dComponent.prototype, "dataSource", void 0);
Trend3dComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-trend3d',
        template: __webpack_require__(/*! raw-loader!./trend3d.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/trend3d/trend3d.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./trend3d.component.scss */ "./app/widgets/trend3d/trend3d.component.scss")]
    })
], Trend3dComponent);



/***/ }),

/***/ "./app/widgets/version/version.component.scss":
/*!****************************************************!*\
  !*** ./app/widgets/version/version.component.scss ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".pdf {\n  position: relative;\n}\n\n.pdf::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1;\n  background: rgba(0, 0, 0, 0.3);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2lkZ2V0cy92ZXJzaW9uL0Q6XFxTRVJWRVJcXHVtc19vbGQvc3JjXFxhcHBcXHdpZGdldHNcXHZlcnNpb25cXHZlcnNpb24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3dpZGdldHMvdmVyc2lvbi92ZXJzaW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7QUNDRjs7QURFQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxRQUFBO0VBQ0EsT0FBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsOEJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvdmVyc2lvbi92ZXJzaW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBkZiB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ucGRmOjpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6ICcnO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgbGVmdDogMDtcclxuICBib3R0b206IDA7XHJcbiAgei1pbmRleDogMTtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIC4zKTtcclxufVxyXG4iLCIucGRmIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ucGRmOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgei1pbmRleDogMTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjMpO1xufSJdfQ== */"

/***/ }),

/***/ "./app/widgets/version/version.component.ts":
/*!**************************************************!*\
  !*** ./app/widgets/version/version.component.ts ***!
  \**************************************************/
/*! exports provided: VersionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VersionComponent", function() { return VersionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let VersionComponent = class VersionComponent {
    constructor() { }
    ngOnInit() {
    }
};
VersionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-version',
        template: __webpack_require__(/*! raw-loader!./version.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/version/version.component.html"),
        styles: [__webpack_require__(/*! ./version.component.scss */ "./app/widgets/version/version.component.scss")]
    })
], VersionComponent);



/***/ }),

/***/ "./app/widgets/zoomline/zoomline.component.scss":
/*!******************************************************!*\
  !*** ./app/widgets/zoomline/zoomline.component.scss ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvem9vbWxpbmUvem9vbWxpbmUuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/widgets/zoomline/zoomline.component.ts":
/*!****************************************************!*\
  !*** ./app/widgets/zoomline/zoomline.component.ts ***!
  \****************************************************/
/*! exports provided: ZoomlineComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoomlineComponent", function() { return ZoomlineComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");




let ZoomlineComponent = class ZoomlineComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.dataSource = {};
        this.fixedWidth = false;
        this.height = '100%';
        this.chartWidth = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]('100%');
    }
    ngOnInit() {
        if (this.fixedWidth) {
            this.headerService.getChartWidth().subscribe(res => {
                this.chartWidth.next(res);
            });
        }
    }
};
ZoomlineComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_3__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ZoomlineComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ZoomlineComponent.prototype, "fixedWidth", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ZoomlineComponent.prototype, "height", void 0);
ZoomlineComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-zoomline',
        template: __webpack_require__(/*! raw-loader!./zoomline.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/zoomline/zoomline.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./zoomline.component.scss */ "./app/widgets/zoomline/zoomline.component.scss")]
    })
], ZoomlineComponent);



/***/ }),

/***/ "./app/widgets/zoomlinedy/zoomlinedy.component.scss":
/*!**********************************************************!*\
  !*** ./app/widgets/zoomlinedy/zoomlinedy.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvem9vbWxpbmVkeS96b29tbGluZWR5LmNvbXBvbmVudC5zY3NzIn0= */"

/***/ }),

/***/ "./app/widgets/zoomlinedy/zoomlinedy.component.ts":
/*!********************************************************!*\
  !*** ./app/widgets/zoomlinedy/zoomlinedy.component.ts ***!
  \********************************************************/
/*! exports provided: ZoomlinedyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoomlinedyComponent", function() { return ZoomlinedyComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");




let ZoomlinedyComponent = class ZoomlinedyComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.dataSource = {};
        this.fixedWidth = false;
        this.chartWidth = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]('100%');
    }
    ngOnInit() {
        if (this.fixedWidth) {
            this.headerService.getChartWidth().subscribe(res => {
                this.chartWidth.next(res);
            });
        }
    }
};
ZoomlinedyComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_3__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ZoomlinedyComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ZoomlinedyComponent.prototype, "fixedWidth", void 0);
ZoomlinedyComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-zoomlinedy',
        template: __webpack_require__(/*! raw-loader!./zoomlinedy.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/zoomlinedy/zoomlinedy.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./zoomlinedy.component.scss */ "./app/widgets/zoomlinedy/zoomlinedy.component.scss")]
    })
], ZoomlinedyComponent);



/***/ }),

/***/ "./app/widgets/zoomscatter/zoomscatter.component.scss":
/*!************************************************************!*\
  !*** ./app/widgets/zoomscatter/zoomscatter.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dpZGdldHMvem9vbXNjYXR0ZXIvem9vbXNjYXR0ZXIuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./app/widgets/zoomscatter/zoomscatter.component.ts":
/*!**********************************************************!*\
  !*** ./app/widgets/zoomscatter/zoomscatter.component.ts ***!
  \**********************************************************/
/*! exports provided: ZoomscatterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoomscatterComponent", function() { return ZoomscatterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/header.service */ "./app/services/header.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm2015/index.js");




let ZoomscatterComponent = class ZoomscatterComponent {
    constructor(headerService) {
        this.headerService = headerService;
        this.dataSource = {};
        this.fixedWidth = false;
        this.chartWidth = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"]('100%');
    }
    ngOnInit() {
        if (this.fixedWidth) {
            this.headerService.getChartWidth().subscribe(res => {
                this.chartWidth.next(res);
            });
        }
    }
};
ZoomscatterComponent.ctorParameters = () => [
    { type: src_app_services_header_service__WEBPACK_IMPORTED_MODULE_2__["HeaderService"] }
];
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ZoomscatterComponent.prototype, "dataSource", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()
], ZoomscatterComponent.prototype, "fixedWidth", void 0);
ZoomscatterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-zoomscatter',
        template: __webpack_require__(/*! raw-loader!./zoomscatter.component.html */ "../node_modules/raw-loader/index.js!./app/widgets/zoomscatter/zoomscatter.component.html"),
        host: { 'class': 'w-100' },
        styles: [__webpack_require__(/*! ./zoomscatter.component.scss */ "./app/widgets/zoomscatter/zoomscatter.component.scss")]
    })
], ZoomscatterComponent);



/***/ }),

/***/ "./assets/configs/meter-tree.json":
/*!****************************************!*\
  !*** ./assets/configs/meter-tree.json ***!
  \****************************************/
/*! exports provided: colors, stroke, text, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"colors\":{\"green\":\"#11b72c\",\"red\":\"red\",\"background\":\"#242C33\"},\"stroke\":{\"width\":\"1px\"},\"text\":{\"size\":\"13\",\"fill\":\"#FFFFFF\"}}");

/***/ }),

/***/ "./assets/configs/site-configs.json":
/*!******************************************!*\
  !*** ./assets/configs/site-configs.json ***!
  \******************************************/
/*! exports provided: siteId, siteName, decimalNumPrecision, RealTimeConsumptiondecimalNumPrecision, chillerData, chillerEfficiencyBaseLineValue, maxAllowDateRange, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"siteId\":1,\"siteName\":\"Nanyang Technological Univerisity\",\"decimalNumPrecision\":2,\"RealTimeConsumptiondecimalNumPrecision\":1,\"chillerData\":{\"chiller\":\"Chiller kW\",\"header\":\"Condenser Header\"},\"chillerEfficiencyBaseLineValue\":0.65,\"maxAllowDateRange\":31}");

/***/ }),

/***/ "./enums/ChartDashboardType.ts":
/*!*************************************!*\
  !*** ./enums/ChartDashboardType.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var ChartDashboardType;
(function (ChartDashboardType) {
    ChartDashboardType["SITE_WATER"] = "site-water";
    ChartDashboardType["SITE_ELECTRICAL"] = "site-electrical";
    ChartDashboardType["BUILDING_ELECTRICAL"] = "building-electrical";
    ChartDashboardType["BUILDING_WATER"] = "building-water";
})(ChartDashboardType || (ChartDashboardType = {}));
/* harmony default export */ __webpack_exports__["default"] = (ChartDashboardType);


/***/ }),

/***/ "./enums/ChartGroupType.ts":
/*!*********************************!*\
  !*** ./enums/ChartGroupType.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var ChartGroupType;
(function (ChartGroupType) {
    ChartGroupType[ChartGroupType["NONE"] = 0] = "NONE";
    ChartGroupType[ChartGroupType["METER"] = 1] = "METER";
    ChartGroupType[ChartGroupType["BUILDING_CATEGORY"] = 2] = "BUILDING_CATEGORY";
    ChartGroupType[ChartGroupType["METER_TYPES"] = 3] = "METER_TYPES";
    ChartGroupType[ChartGroupType["HT_LOOPS"] = 4] = "HT_LOOPS";
    ChartGroupType[ChartGroupType["SUB_STATIONS"] = 5] = "SUB_STATIONS";
})(ChartGroupType || (ChartGroupType = {}));
/* harmony default export */ __webpack_exports__["default"] = (ChartGroupType);


/***/ }),

/***/ "./enums/DashboardLevel.ts":
/*!*********************************!*\
  !*** ./enums/DashboardLevel.ts ***!
  \*********************************/
/*! exports provided: DashboardLevel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardLevel", function() { return DashboardLevel; });
var DashboardLevel;
(function (DashboardLevel) {
    DashboardLevel[DashboardLevel["BUILDING"] = 0] = "BUILDING";
    DashboardLevel[DashboardLevel["BUILDING_GROUP"] = 1] = "BUILDING_GROUP";
})(DashboardLevel || (DashboardLevel = {}));


/***/ }),

/***/ "./enums/DashboardType.ts":
/*!********************************!*\
  !*** ./enums/DashboardType.ts ***!
  \********************************/
/*! exports provided: DashboardType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardType", function() { return DashboardType; });
var DashboardType;
(function (DashboardType) {
    DashboardType[DashboardType["LOW_TENSION"] = 0] = "LOW_TENSION";
    DashboardType[DashboardType["HIGH_TENSION"] = 1] = "HIGH_TENSION";
    DashboardType[DashboardType["WATER"] = 2] = "WATER";
})(DashboardType || (DashboardType = {}));


/***/ }),

/***/ "./enums/DataMode.ts":
/*!***************************!*\
  !*** ./enums/DataMode.ts ***!
  \***************************/
/*! exports provided: DataMode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataMode", function() { return DataMode; });
var DataMode;
(function (DataMode) {
    DataMode[DataMode["None"] = 0] = "None";
    DataMode[DataMode["OverallSum"] = 1] = "OverallSum";
    DataMode[DataMode["CategorySum"] = 2] = "CategorySum";
    DataMode[DataMode["GroupByDateTime"] = 3] = "GroupByDateTime";
})(DataMode || (DataMode = {}));


/***/ }),

/***/ "./enums/DateTypes.ts":
/*!****************************!*\
  !*** ./enums/DateTypes.ts ***!
  \****************************/
/*! exports provided: DateTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateTypes", function() { return DateTypes; });
var DateTypes;
(function (DateTypes) {
    DateTypes[DateTypes["DATE"] = 0] = "DATE";
    DateTypes[DateTypes["MONTH"] = 1] = "MONTH";
    DateTypes[DateTypes["YEAR"] = 2] = "YEAR";
})(DateTypes || (DateTypes = {}));


/***/ }),

/***/ "./enums/DustributionChartType.ts":
/*!****************************************!*\
  !*** ./enums/DustributionChartType.ts ***!
  \****************************************/
/*! exports provided: DistributionChartType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistributionChartType", function() { return DistributionChartType; });
var DistributionChartType;
(function (DistributionChartType) {
    DistributionChartType[DistributionChartType["SMALL"] = 1] = "SMALL";
    DistributionChartType[DistributionChartType["LARGE"] = 2] = "LARGE";
})(DistributionChartType || (DistributionChartType = {}));


/***/ }),

/***/ "./enums/FormulaFrequency.ts":
/*!***********************************!*\
  !*** ./enums/FormulaFrequency.ts ***!
  \***********************************/
/*! exports provided: FormulaFrequency */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormulaFrequency", function() { return FormulaFrequency; });
var FormulaFrequency;
(function (FormulaFrequency) {
    FormulaFrequency[FormulaFrequency["OneMinute"] = 0] = "OneMinute";
    FormulaFrequency[FormulaFrequency["ThirtyMinute"] = 1] = "ThirtyMinute";
    FormulaFrequency[FormulaFrequency["Hour"] = 2] = "Hour";
    FormulaFrequency[FormulaFrequency["Day"] = 3] = "Day";
    FormulaFrequency[FormulaFrequency["Month"] = 4] = "Month";
    FormulaFrequency[FormulaFrequency["Year"] = 5] = "Year";
})(FormulaFrequency || (FormulaFrequency = {}));


/***/ }),

/***/ "./enums/HTApiType.ts":
/*!****************************!*\
  !*** ./enums/HTApiType.ts ***!
  \****************************/
/*! exports provided: HTApiType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HTApiType", function() { return HTApiType; });
var HTApiType;
(function (HTApiType) {
    HTApiType["SITE"] = "site";
    HTApiType["LOOP"] = "loop";
})(HTApiType || (HTApiType = {}));


/***/ }),

/***/ "./enums/HtCategory.ts":
/*!*****************************!*\
  !*** ./enums/HtCategory.ts ***!
  \*****************************/
/*! exports provided: HtCategory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtCategory", function() { return HtCategory; });
var HtCategory;
(function (HtCategory) {
    HtCategory[HtCategory["NONE"] = 0] = "NONE";
    HtCategory[HtCategory["Site"] = 1] = "Site";
    HtCategory[HtCategory["HTLoop"] = 2] = "HTLoop";
    HtCategory[HtCategory["SubStation"] = 3] = "SubStation";
    HtCategory[HtCategory["Meter"] = 4] = "Meter";
})(HtCategory || (HtCategory = {}));


/***/ }),

/***/ "./enums/ServiceType.ts":
/*!******************************!*\
  !*** ./enums/ServiceType.ts ***!
  \******************************/
/*! exports provided: ServiceType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServiceType", function() { return ServiceType; });
var ServiceType;
(function (ServiceType) {
    ServiceType[ServiceType["ELECTRICAL"] = 1] = "ELECTRICAL";
    ServiceType[ServiceType["WATER"] = 2] = "WATER";
    ServiceType[ServiceType["HT_ELECTRICAL"] = 3] = "HT_ELECTRICAL";
    ServiceType[ServiceType["CHILLER"] = 4] = "CHILLER";
    ServiceType[ServiceType["MAIN_INCOMER"] = 5] = "MAIN_INCOMER";
    ServiceType[ServiceType["LD_WATER"] = 6] = "LD_WATER";
    ServiceType[ServiceType["MAIN_WATER"] = 7] = "MAIN_WATER";
    ServiceType[ServiceType["MAIN_HT_ELECTRICAL"] = 5] = "MAIN_HT_ELECTRICAL";
})(ServiceType || (ServiceType = {}));


/***/ }),

/***/ "./enums/bench-mark-type.enum.ts":
/*!***************************************!*\
  !*** ./enums/bench-mark-type.enum.ts ***!
  \***************************************/
/*! exports provided: BenchMarkType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BenchMarkType", function() { return BenchMarkType; });
var BenchMarkType;
(function (BenchMarkType) {
    BenchMarkType[BenchMarkType["None"] = 0] = "None";
    BenchMarkType[BenchMarkType["Manual"] = 1] = "Manual";
    BenchMarkType[BenchMarkType["Auto"] = 2] = "Auto";
})(BenchMarkType || (BenchMarkType = {}));


/***/ }),

/***/ "./enums/building-level-type.enum.ts":
/*!*******************************************!*\
  !*** ./enums/building-level-type.enum.ts ***!
  \*******************************************/
/*! exports provided: BuildingLevelType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BuildingLevelType", function() { return BuildingLevelType; });
var BuildingLevelType;
(function (BuildingLevelType) {
    BuildingLevelType[BuildingLevelType["NONE"] = 0] = "NONE";
    BuildingLevelType[BuildingLevelType["SITE"] = 1] = "SITE";
    BuildingLevelType[BuildingLevelType["BUILDING_GROUP"] = 2] = "BUILDING_GROUP";
    BuildingLevelType[BuildingLevelType["BUILDING"] = 3] = "BUILDING";
})(BuildingLevelType || (BuildingLevelType = {}));


/***/ }),

/***/ "./enums/chart-color-map.ts":
/*!**********************************!*\
  !*** ./enums/chart-color-map.ts ***!
  \**********************************/
/*! exports provided: ChartColorMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartColorMap", function() { return ChartColorMap; });
const ChartColorMap = {
    electric: {
        primary: '#ffa500',
        secondary: '#c07604'
    },
    water: {
        primary: '#007bff',
        secondary: '#0462c6'
    },
    cooling: {
        primary: '#11b72c',
        secondary: '#0b871f'
    },
    carboon: {
        primary: '#25e255',
        secondary: '#25e255'
    },
};


/***/ }),

/***/ "./enums/chart-config-map.ts":
/*!***********************************!*\
  !*** ./enums/chart-config-map.ts ***!
  \***********************************/
/*! exports provided: LIST_DAY_CONSUMPTION, DECIMAL_MAP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LIST_DAY_CONSUMPTION", function() { return LIST_DAY_CONSUMPTION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DECIMAL_MAP", function() { return DECIMAL_MAP; });
// interface ColorMap {
//   primary: string,
//   secondary: string
// }
// export interface ChartColorMapType {
//   electric: ColorMap,
//   water: ColorMap,
//   cooling: ColorMap,
//   carboon:  ColorMap
// }
const LIST_DAY_CONSUMPTION = [
    { date: 6, label: '7D', value: 0, target: 'day' },
    { date: 30, label: '31D', value: 1, target: 'day' },
    { month: 12, label: '12M', value: 2, target: 'month' },
    { year: 5, label: '5Y', value: 3, target: 'year' }
];
const DECIMAL_MAP = {
    electricalTodayConsumption: 3,
    trendLogs: 0,
    electricalBreakDown: 3,
    equipDistributionLg: 3,
};


/***/ }),

/***/ "./enums/green-mark-chart-type.enum.ts":
/*!*********************************************!*\
  !*** ./enums/green-mark-chart-type.enum.ts ***!
  \*********************************************/
/*! exports provided: GreenMarkChartType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GreenMarkChartType", function() { return GreenMarkChartType; });
var GreenMarkChartType;
(function (GreenMarkChartType) {
    GreenMarkChartType["HeatBalance"] = "heatBalance";
    GreenMarkChartType["ChillerEfficiency"] = "chillerEfficiency";
    GreenMarkChartType["CarbonFootPrint"] = "carbonFootPrint";
    GreenMarkChartType["CondenserPerformance"] = "condenserPerformance";
})(GreenMarkChartType || (GreenMarkChartType = {}));


/***/ }),

/***/ "./enums/green-mark-frequency.enum.ts":
/*!********************************************!*\
  !*** ./enums/green-mark-frequency.enum.ts ***!
  \********************************************/
/*! exports provided: GreenMarkFrequency */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GreenMarkFrequency", function() { return GreenMarkFrequency; });
var GreenMarkFrequency;
(function (GreenMarkFrequency) {
    GreenMarkFrequency["OneMinute"] = "oneminute";
    GreenMarkFrequency["FifteenMinute"] = "fifteenMinute";
    GreenMarkFrequency["ThirtyMinute"] = "thirtyMinute";
    GreenMarkFrequency["Hour"] = "hour";
    GreenMarkFrequency["Day"] = "day";
    GreenMarkFrequency["Month"] = "month";
    GreenMarkFrequency["Year"] = "year";
    GreenMarkFrequency["DayOfWeek"] = "dayOfWeek";
})(GreenMarkFrequency || (GreenMarkFrequency = {}));


/***/ }),

/***/ "./enums/group-by.ts":
/*!***************************!*\
  !*** ./enums/group-by.ts ***!
  \***************************/
/*! exports provided: GroupBy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupBy", function() { return GroupBy; });
var GroupBy;
(function (GroupBy) {
    GroupBy[GroupBy["None"] = 0] = "None";
    GroupBy[GroupBy["BuildingCategory"] = 1] = "BuildingCategory";
    GroupBy[GroupBy["MeterType"] = 2] = "MeterType";
    GroupBy[GroupBy["Meter"] = 3] = "Meter";
    GroupBy[GroupBy["Week"] = 4] = "Week";
    GroupBy[GroupBy["Holiday"] = 5] = "Holiday";
    GroupBy[GroupBy["HT"] = 6] = "HT";
    GroupBy[GroupBy["Building"] = 7] = "Building";
})(GroupBy || (GroupBy = {}));


/***/ }),

/***/ "./enums/group-name.enum.ts":
/*!**********************************!*\
  !*** ./enums/group-name.enum.ts ***!
  \**********************************/
/*! exports provided: GroupName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupName", function() { return GroupName; });
var GroupName;
(function (GroupName) {
    GroupName["Site"] = "site";
    GroupName["Plant"] = "plant";
})(GroupName || (GroupName = {}));


/***/ }),

/***/ "./enums/intervals.ts":
/*!****************************!*\
  !*** ./enums/intervals.ts ***!
  \****************************/
/*! exports provided: Interval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Interval", function() { return Interval; });
var Interval;
(function (Interval) {
    Interval[Interval["ThirtyMin"] = 0] = "ThirtyMin";
    Interval[Interval["Daily"] = 1] = "Daily";
    Interval[Interval["Weekly"] = 2] = "Weekly";
    Interval[Interval["Monthly"] = 3] = "Monthly";
    Interval[Interval["Yearly"] = 4] = "Yearly";
    Interval[Interval["SecondaryThirtyMin"] = 2] = "SecondaryThirtyMin";
})(Interval || (Interval = {}));


/***/ }),

/***/ "./enums/location-type.enum.ts":
/*!*************************************!*\
  !*** ./enums/location-type.enum.ts ***!
  \*************************************/
/*! exports provided: LocationType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationType", function() { return LocationType; });
var LocationType;
(function (LocationType) {
    LocationType[LocationType["None"] = 0] = "None";
    LocationType[LocationType["Site"] = 1] = "Site";
    LocationType[LocationType["BuildingGroup"] = 2] = "BuildingGroup";
    LocationType[LocationType["Building"] = 3] = "Building";
})(LocationType || (LocationType = {}));


/***/ }),

/***/ "./enums/report-type.enum.ts":
/*!***********************************!*\
  !*** ./enums/report-type.enum.ts ***!
  \***********************************/
/*! exports provided: ReportType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportType", function() { return ReportType; });
var ReportType;
(function (ReportType) {
    ReportType[ReportType["None"] = 0] = "None";
    ReportType[ReportType["Yearly"] = 1] = "Yearly";
    ReportType[ReportType["Monthly"] = 2] = "Monthly";
    ReportType[ReportType["Daily"] = 3] = "Daily";
})(ReportType || (ReportType = {}));


/***/ }),

/***/ "./environments/environment.ts":
/*!*************************************!*\
  !*** ./environments/environment.ts ***!
  \*************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: true,
    mock: true
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./main.ts":
/*!*****************!*\
  !*** ./main.ts ***!
  \*****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "../node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "./app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./environments/environment.ts");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! hammerjs */ "../node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_4__);





if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(err => { });


/***/ }),

/***/ "./util/ChartHelper.ts":
/*!*****************************!*\
  !*** ./util/ChartHelper.ts ***!
  \*****************************/
/*! exports provided: chartTitle, fixDecimalNumPrecision, roundConsumptionValue, abbreviateNumber, getChartMinMax, reduceDataChart, addChartConfiguration, convertStringToArr, moneyFormat, dateGapGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chartTitle", function() { return chartTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fixDecimalNumPrecision", function() { return fixDecimalNumPrecision; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "roundConsumptionValue", function() { return roundConsumptionValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abbreviateNumber", function() { return abbreviateNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getChartMinMax", function() { return getChartMinMax; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduceDataChart", function() { return reduceDataChart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addChartConfiguration", function() { return addChartConfiguration; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertStringToArr", function() { return convertStringToArr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moneyFormat", function() { return moneyFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateGapGenerator", function() { return dateGapGenerator; });
/* harmony import */ var src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/enums/ServiceType */ "./enums/ServiceType.ts");

function chartTitle(name, value, unit, percentage, mode, suffix = '') {
    if (value === null || value === 'null' || value === undefined) {
        return null;
    }
    else {
        if (mode) {
            return `${percentage}`;
        }
        else {
            return `${name} - ${value}${suffix} ${unit} - ${percentage}`;
        }
    }
}
function fixDecimalNumPrecision(value, places) {
    if (!isNaN(parseFloat(value)) && isFinite(value)) {
        if (Number.isInteger(value)) {
            return value;
        }
        else {
            return parseFloat(value).toFixed(places);
        }
    }
    else {
        return null;
    }
}
function roundConsumptionValue(value, serviceTypeId) {
    if (value != null && value != undefined) {
        if (value < 1000) {
            if (serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].WATER || serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].MAIN_WATER) {
                return {
                    value: fixDecimalNumPrecision(value, 2),
                    unit: ' m³'
                };
            }
            else if (serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].MAIN_INCOMER || serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].ELECTRICAL) {
                return {
                    value,
                    unit: ' kWh'
                };
            }
            else {
                return {
                    value,
                    unit: ' RTh'
                };
            }
        }
        else {
            if (serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].WATER || serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].MAIN_WATER) {
                return {
                    value: fixDecimalNumPrecision(value / 1000, 2),
                    unit: 'K m³'
                };
            }
            else if (serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].MAIN_INCOMER || serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].ELECTRICAL) {
                return {
                    value: fixDecimalNumPrecision(value / 1000, 2),
                    unit: ' MWh'
                };
            }
            else {
                return {
                    value: fixDecimalNumPrecision(value / 1000, 2),
                    unit: 'K RTh'
                };
            }
        }
    }
    else {
        return {
            value: fixDecimalNumPrecision(value, 2),
            unit: null
        };
    }
}
function abbreviateNumber(number, serviceTypeId = 1) {
    const SUFFIX_LIST = ["", "k", "M", "G", "T", "P", "E"];
    let unit = 'RTh';
    if (serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].WATER || serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].MAIN_WATER) {
        unit = 'm³';
    }
    else if (serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].MAIN_INCOMER || serviceTypeId == src_enums_ServiceType__WEBPACK_IMPORTED_MODULE_0__["ServiceType"].ELECTRICAL) {
        unit = 'kWh';
    }
    if (isNaN(number) || !number || number == null) {
        return {
            suffix: null,
            scalledNumber: null,
            unit
        };
    }
    // what tier? (determines SI symbol)
    const suffixIndex = Math.log10(Math.abs(number)) / 3 | 0;
    // get suffix and determine scale
    const suffix = SUFFIX_LIST[suffixIndex];
    const scale = Math.pow(10, suffixIndex * 3);
    let scaled = (number / scale).toFixed(3);
    // if zero, we don't need a suffix
    // if(suffixIndex == 0) scaled = number.toFixed(3);
    return {
        suffix: suffix,
        scalledNumber: scaled,
        unit
    };
}
function getChartMinMax(dataset = [], key = 'value') {
    let min = 10000000000, max = 0;
    for (let i = 0; i < dataset.length; i++) {
        if (dataset[i]) {
            const value = dataset[i][key] || dataset[i];
            if (value && Number(value) > max) {
                max = Number(value);
            }
            if (value && Number(value) < min) {
                min = Number(value);
            }
        }
    }
    return {
        min, max
    };
}
function reduceDataChart(dataset = [], min, max, key = 'value') {
    for (let i = 0; i < dataset.length; i++) {
        if (dataset[i]) {
            const value = dataset[i][key] || dataset[i];
            if (value && (Number(value) <= max && Number(value) >= min)) {
            }
            else {
                if (dataset[i][key]) {
                    dataset[i][key] = null;
                }
                else {
                    dataset[i] = null;
                }
            }
        }
    }
    return dataset;
}
function addChartConfiguration(data, isEnabledDivition = false) {
    let subdivition = {};
    if (isEnabledDivition) {
        subdivition = {
            numDivLines: "10",
            yAxisValueDecimals: "1",
            forceDecimals: "1",
            forceYAxisValueDecimals: "1",
        };
    }
    return Object.assign({}, data, subdivition, { useCrossline: "1" });
}
function convertStringToArr(data, color, splitor = ',') {
    if (data) {
        data = data.toString().split(splitor);
        for (let i = 0; i < data.length; i++) {
            data[i] = {
                value: data[i],
                color: color
            };
        }
    }
    return data;
}
const moneyFormat = (num = '') => {
    num = num.toString();
    return String(num).replace(/(?<!\..*)(\d)(?=(?:\d{3})+(?:\.|$))/g, '$1,');
};
const dateGapGenerator = (date, gapDate = 1, target = 'day', operation = 'plus') => {
    const newDate = new Date(date);
    const addOperration = operation.toLowerCase().match(/plus/gi) || false;
    if (target.toLowerCase().match(/day/gi)) {
        if (addOperration) {
            newDate.setDate(newDate.getDate() + Number(gapDate));
        }
        else {
            newDate.setDate(newDate.getDate() - Number(gapDate));
        }
    }
    else if (target.toLowerCase().match(/month/gi)) {
        if (addOperration) {
            newDate.setMonth(newDate.getMonth() + Number(gapDate));
        }
        else {
            newDate.setMonth(newDate.getMonth() - Number(gapDate));
        }
    }
    else if (target.toLowerCase().match(/year/gi)) {
        if (addOperration) {
            newDate.setFullYear(newDate.getFullYear() + Number(gapDate));
        }
        else {
            newDate.setFullYear(newDate.getFullYear() - Number(gapDate));
        }
    }
    return newDate;
};


/***/ }),

/***/ "./util/StringHelper.ts":
/*!******************************!*\
  !*** ./util/StringHelper.ts ***!
  \******************************/
/*! exports provided: buildPlaceholder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildPlaceholder", function() { return buildPlaceholder; });
function buildPlaceholder(dataString, params) {
    return Function(...Object.keys(params), 'return `' + dataString + '`')(...Object.values(params));
}


/***/ }),

/***/ "./util/filtrationDropdownHelper.ts":
/*!******************************************!*\
  !*** ./util/filtrationDropdownHelper.ts ***!
  \******************************************/
/*! exports provided: getBuildingGroupList, getBuildingList, getLevelList, getLocationList, getMeterTypeList, getLoopList, getPlantList, getEquipmentTypeList, getSubstationList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBuildingGroupList", function() { return getBuildingGroupList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBuildingList", function() { return getBuildingList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLevelList", function() { return getLevelList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocationList", function() { return getLocationList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMeterTypeList", function() { return getMeterTypeList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLoopList", function() { return getLoopList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPlantList", function() { return getPlantList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEquipmentTypeList", function() { return getEquipmentTypeList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSubstationList", function() { return getSubstationList; });
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/orderBy */ "../node_modules/lodash/orderBy.js");
/* harmony import */ var lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_orderBy__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Gets building group list
 * @param res
 */
const getBuildingGroupList = (res) => {
    let buildingGroups = [];
    for (const item of res) {
        buildingGroups.push({
            name: item.description,
            id: item.buildingGroupID,
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(buildingGroups, ['name'], ['asc']);
};
/**
 * Gets building list
 * @param res
 */
const getBuildingList = (res) => {
    let buildings = [];
    for (const item of res) {
        buildings.push({
            name: item.buildingName,
            id: item.buildingID
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(buildings, ['name'], ['asc']);
};
/**
 * Gets level list
 * @param res
 */
const getLevelList = (res) => {
    let levels = [];
    for (const item of res) {
        levels.push({
            name: item.floorName,
            id: item.levelID
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(levels, ['name'], ['asc']);
};
/**
 * Get location list
 * @param res
 */
const getLocationList = (res) => {
    let locations = [];
    for (const item of res) {
        locations.push({
            name: item.locationName,
            id: item.locationID
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(locations, ['name'], ['asc']);
};
/**
 * Get meterType List
 * @param res
 */
const getMeterTypeList = (res) => {
    let meterTypes = [];
    for (const item of res) {
        meterTypes.push({
            name: item.description,
            id: item.meterTypeID
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(meterTypes, ['name'], ['asc']);
};
/**
 * Gets loop list
 * @param res
 */
const getLoopList = (res) => {
    let loops = [];
    for (const item of res) {
        loops.push({
            name: item.htLoopName,
            id: item.htLoopID
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(loops, ['name'], ['asc']);
};
/**
 * Gets plant list
 * @param res
 */
const getPlantList = (res) => {
    let plants = [];
    for (const item of res) {
        plants.push({
            name: item.name,
            id: item.chillerPlantID,
            equipmentType: item.equipmentTypes
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(plants, ['name'], ['asc']);
};
/**
 * Get equipment types
 * @param res
 */
const getEquipmentTypeList = (res) => {
    let equipmentTypes = [];
    for (const item of res) {
        equipmentTypes.push({
            name: item.name,
            id: item.equipmentTypeID
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(equipmentTypes, ['name'], ['asc']);
};
/**
 * Gets substation list
 * @param res
 */
const getSubstationList = (res) => {
    let substations = [];
    for (const item of res) {
        substations.push({
            name: item.subStationName,
            id: item.subStationID
        });
    }
    return lodash_orderBy__WEBPACK_IMPORTED_MODULE_0___default()(substations, ['name'], ['asc']);
};


/***/ }),

/***/ "./util/interceptor.ts":
/*!*****************************!*\
  !*** ./util/interceptor.ts ***!
  \*****************************/
/*! exports provided: HttpRequestInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpRequestInterceptor", function() { return HttpRequestInterceptor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm2015/core.js");


let HttpRequestInterceptor = class HttpRequestInterceptor {
    constructor(injector) {
        this.injector = injector;
    }
    intercept(request, next) {
        return next.handle(request);
    }
};
HttpRequestInterceptor.ctorParameters = () => [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
];
HttpRequestInterceptor = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
], HttpRequestInterceptor);



/***/ }),

/***/ "./util/jsLoader.ts":
/*!**************************!*\
  !*** ./util/jsLoader.ts ***!
  \**************************/
/*! exports provided: JsLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JsLoader", function() { return JsLoader; });
class JsLoader {
    static loadScript() {
        var isFound = false;
        var scripts = document.getElementsByTagName("script");
        for (var i = 0; i < scripts.length; ++i) {
            if (scripts[i].getAttribute('src') != null && scripts[i].getAttribute('src').includes("loader")) {
                isFound = true;
            }
        }
        if (!isFound) {
            var dynamicScripts = ["assets/js/d3.v3.min.js", "assets/js/drawChart.js"];
            for (var i = 0; i < dynamicScripts.length; i++) {
                //let isAvailable = document.querySelector('[src="' + dynamicScripts [i] + '"]');
                let node = document.createElement('script');
                node.src = dynamicScripts[i];
                node.type = 'text/javascript';
                node.async = false;
                node.charset = 'utf-8';
                document.getElementsByTagName('head')[0].appendChild(node);
            }
        }
    }
}


/***/ }),

/***/ 0:
/*!***********************!*\
  !*** multi ./main.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\SERVER\ums_old\src\main.ts */"./main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map